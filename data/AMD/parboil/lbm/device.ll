; ModuleID = 'lbm.cpp'
source_filename = "lbm.cpp"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define protected amdgpu_kernel void @_Z27performStreamCollide_kernelPfS_(float addrspace(1)* nocapture readonly %0, float addrspace(1)* nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call i32 @llvm.amdgcn.workitem.id.x() #2, !range !4
  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x() #2
  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y() #2
  %6 = shl nsw i32 %4, 7
  %7 = add nsw i32 %6, %3
  %8 = mul nsw i32 %5, 15360
  %9 = add nsw i32 %7, %8
  %10 = mul nsw i32 %9, 20
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds float, float addrspace(1)* %0, i64 %11
  %13 = load float, float addrspace(1)* %12, align 4, !tbaa !5
  %14 = or i32 %10, 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15
  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !5
  %18 = or i32 %10, 2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19
  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !5
  %22 = or i32 %10, 3
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23
  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !5
  %26 = add nsw i32 %10, 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27
  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5
  %30 = add nsw i32 %10, 5
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31
  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !5
  %34 = add nsw i32 %10, 6
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35
  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5
  %38 = add nsw i32 %10, 7
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39
  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5
  %42 = add nsw i32 %10, 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43
  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5
  %46 = add nsw i32 %10, 9
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47
  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5
  %50 = add nsw i32 %10, 10
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51
  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5
  %54 = add nsw i32 %10, 11
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55
  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5
  %58 = add nsw i32 %10, 12
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59
  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5
  %62 = add nsw i32 %10, 13
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63
  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5
  %66 = add nsw i32 %10, 14
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67
  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5
  %70 = add nsw i32 %10, 15
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71
  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !5
  %74 = add nsw i32 %10, 16
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75
  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5
  %78 = add nsw i32 %10, 17
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79
  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5
  %82 = add nsw i32 %10, 18
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83
  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !5
  %86 = add nsw i32 %10, 19
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87
  %89 = bitcast float addrspace(1)* %88 to i32 addrspace(1)*
  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !9
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %298

93:                                               ; preds = %2
  %94 = fadd contract float %13, %17
  %95 = fadd contract float %94, %21
  %96 = fadd contract float %95, %25
  %97 = fadd contract float %96, %29
  %98 = fadd contract float %97, %33
  %99 = fadd contract float %98, %37
  %100 = fadd contract float %99, %41
  %101 = fadd contract float %100, %45
  %102 = fadd contract float %101, %49
  %103 = fadd contract float %102, %53
  %104 = fadd contract float %103, %57
  %105 = fadd contract float %104, %61
  %106 = fadd contract float %105, %65
  %107 = fadd contract float %106, %69
  %108 = fadd contract float %107, %73
  %109 = fadd contract float %108, %77
  %110 = fadd contract float %109, %81
  %111 = fadd contract float %110, %85
  %112 = fsub contract float %25, %29
  %113 = fadd contract float %112, %41
  %114 = fsub contract float %113, %45
  %115 = fadd contract float %114, %49
  %116 = fsub contract float %115, %53
  %117 = fadd contract float %116, %73
  %118 = fadd contract float %117, %77
  %119 = fsub contract float %118, %81
  %120 = fsub contract float %119, %85
  %121 = fsub contract float %17, %21
  %122 = fadd contract float %121, %41
  %123 = fadd contract float %122, %45
  %124 = fsub contract float %123, %49
  %125 = fsub contract float %124, %53
  %126 = fadd contract float %125, %57
  %127 = fadd contract float %126, %61
  %128 = fsub contract float %127, %65
  %129 = fsub contract float %128, %69
  %130 = fsub contract float %33, %37
  %131 = fadd contract float %130, %57
  %132 = fsub contract float %131, %61
  %133 = fadd contract float %132, %65
  %134 = fsub contract float %133, %69
  %135 = fadd contract float %134, %73
  %136 = fsub contract float %135, %77
  %137 = fadd contract float %136, %81
  %138 = fsub contract float %137, %85
  %139 = fdiv contract float %120, %111
  %140 = fdiv contract float %129, %111
  %141 = fdiv contract float %138, %111
  %142 = and i32 %90, 2
  %143 = icmp eq i32 %142, 0
  %144 = select i1 %143, float %139, float 0x3F747AE140000000
  %145 = select i1 %143, float %140, float 0x3F60624DE0000000
  %146 = select i1 %143, float %141, float 0.000000e+00
  %147 = fmul contract float %144, %144
  %148 = fmul contract float %145, %145
  %149 = fadd contract float %147, %148
  %150 = fmul contract float %146, %146
  %151 = fadd contract float %150, %149
  %152 = fmul contract float %151, 1.500000e+00
  %153 = fadd contract float %152, -1.000000e+00
  %154 = fmul contract float %111, 0x3FFF333340000000
  %155 = fmul contract float %154, 0x3FD5555560000000
  %156 = fmul contract float %13, 0xBFEE666680000000
  %157 = fmul contract float %155, %153
  %158 = fsub contract float %156, %157
  %159 = fmul contract float %154, 0x3FAC71C720000000
  %160 = fmul contract float %17, 0x3FEE666680000000
  %161 = fmul contract float %145, 4.500000e+00
  %162 = fadd contract float %161, 3.000000e+00
  %163 = fmul contract float %145, %162
  %164 = fsub contract float %163, %153
  %165 = fmul contract float %159, %164
  %166 = fsub contract float %165, %160
  %167 = fmul contract float %21, 0x3FEE666680000000
  %168 = fadd contract float %161, -3.000000e+00
  %169 = fmul contract float %145, %168
  %170 = fsub contract float %169, %153
  %171 = fmul contract float %159, %170
  %172 = fsub contract float %171, %167
  %173 = fmul contract float %33, 0x3FEE666680000000
  %174 = fmul contract float %146, 4.500000e+00
  %175 = fadd contract float %174, 3.000000e+00
  %176 = fmul contract float %146, %175
  %177 = fsub contract float %176, %153
  %178 = fmul contract float %159, %177
  %179 = fsub contract float %178, %173
  %180 = fmul contract float %37, 0x3FEE666680000000
  %181 = fadd contract float %174, -3.000000e+00
  %182 = fmul contract float %146, %181
  %183 = fsub contract float %182, %153
  %184 = fmul contract float %159, %183
  %185 = fsub contract float %184, %180
  %186 = fmul contract float %25, 0x3FEE666680000000
  %187 = fmul contract float %144, 4.500000e+00
  %188 = fadd contract float %187, 3.000000e+00
  %189 = fmul contract float %144, %188
  %190 = fsub contract float %189, %153
  %191 = fmul contract float %159, %190
  %192 = fsub contract float %191, %186
  %193 = fmul contract float %29, 0x3FEE666680000000
  %194 = fadd contract float %187, -3.000000e+00
  %195 = fmul contract float %144, %194
  %196 = fsub contract float %195, %153
  %197 = fmul contract float %159, %196
  %198 = fsub contract float %197, %193
  %199 = fmul contract float %154, 0x3F9C71C720000000
  %200 = fmul contract float %57, 0x3FEE666680000000
  %201 = fadd contract float %145, %146
  %202 = fmul contract float %201, 4.500000e+00
  %203 = fadd contract float %202, 3.000000e+00
  %204 = fmul contract float %201, %203
  %205 = fsub contract float %204, %153
  %206 = fmul contract float %199, %205
  %207 = fsub contract float %206, %200
  %208 = fmul contract float %61, 0x3FEE666680000000
  %209 = fsub contract float %145, %146
  %210 = fmul contract float %209, 4.500000e+00
  %211 = fadd contract float %210, 3.000000e+00
  %212 = fmul contract float %209, %211
  %213 = fsub contract float %212, %153
  %214 = fmul contract float %199, %213
  %215 = fsub contract float %214, %208
  %216 = fmul contract float %65, 0x3FEE666680000000
  %217 = fneg contract float %145
  %218 = fsub contract float %146, %145
  %219 = fmul contract float %218, 4.500000e+00
  %220 = fadd contract float %219, 3.000000e+00
  %221 = fmul contract float %218, %220
  %222 = fsub contract float %221, %153
  %223 = fmul contract float %199, %222
  %224 = fsub contract float %223, %216
  %225 = fmul contract float %69, 0x3FEE666680000000
  %226 = fsub contract float %217, %146
  %227 = fmul contract float %226, 4.500000e+00
  %228 = fadd contract float %227, 3.000000e+00
  %229 = fmul contract float %226, %228
  %230 = fsub contract float %229, %153
  %231 = fmul contract float %199, %230
  %232 = fsub contract float %231, %225
  %233 = fmul contract float %41, 0x3FEE666680000000
  %234 = fadd contract float %144, %145
  %235 = fmul contract float %234, 4.500000e+00
  %236 = fadd contract float %235, 3.000000e+00
  %237 = fmul contract float %234, %236
  %238 = fsub contract float %237, %153
  %239 = fmul contract float %199, %238
  %240 = fsub contract float %239, %233
  %241 = fmul contract float %49, 0x3FEE666680000000
  %242 = fsub contract float %144, %145
  %243 = fmul contract float %242, 4.500000e+00
  %244 = fadd contract float %243, 3.000000e+00
  %245 = fmul contract float %242, %244
  %246 = fsub contract float %245, %153
  %247 = fmul contract float %199, %246
  %248 = fsub contract float %247, %241
  %249 = fmul contract float %73, 0x3FEE666680000000
  %250 = fadd contract float %144, %146
  %251 = fmul contract float %250, 4.500000e+00
  %252 = fadd contract float %251, 3.000000e+00
  %253 = fmul contract float %250, %252
  %254 = fsub contract float %253, %153
  %255 = fmul contract float %199, %254
  %256 = fsub contract float %255, %249
  %257 = fmul contract float %77, 0x3FEE666680000000
  %258 = fsub contract float %144, %146
  %259 = fmul contract float %258, 4.500000e+00
  %260 = fadd contract float %259, 3.000000e+00
  %261 = fmul contract float %258, %260
  %262 = fsub contract float %261, %153
  %263 = fmul contract float %199, %262
  %264 = fsub contract float %263, %257
  %265 = fmul contract float %45, 0x3FEE666680000000
  %266 = fneg contract float %144
  %267 = fsub contract float %145, %144
  %268 = fmul contract float %267, 4.500000e+00
  %269 = fadd contract float %268, 3.000000e+00
  %270 = fmul contract float %267, %269
  %271 = fsub contract float %270, %153
  %272 = fmul contract float %199, %271
  %273 = fsub contract float %272, %265
  %274 = fmul contract float %53, 0x3FEE666680000000
  %275 = fsub contract float %266, %145
  %276 = fmul contract float %275, 4.500000e+00
  %277 = fadd contract float %276, 3.000000e+00
  %278 = fmul contract float %275, %277
  %279 = fsub contract float %278, %153
  %280 = fmul contract float %199, %279
  %281 = fsub contract float %280, %274
  %282 = fmul contract float %81, 0x3FEE666680000000
  %283 = fsub contract float %146, %144
  %284 = fmul contract float %283, 4.500000e+00
  %285 = fadd contract float %284, 3.000000e+00
  %286 = fmul contract float %283, %285
  %287 = fsub contract float %286, %153
  %288 = fmul contract float %199, %287
  %289 = fsub contract float %288, %282
  %290 = fmul contract float %85, 0x3FEE666680000000
  %291 = fsub contract float %266, %146
  %292 = fmul contract float %291, 4.500000e+00
  %293 = fadd contract float %292, 3.000000e+00
  %294 = fmul contract float %291, %293
  %295 = fsub contract float %294, %153
  %296 = fmul contract float %199, %295
  %297 = fsub contract float %296, %290
  br label %298

298:                                              ; preds = %2, %93
  %299 = phi float [ %179, %93 ], [ %37, %2 ]
  %300 = phi float [ %185, %93 ], [ %33, %2 ]
  %301 = phi float [ %240, %93 ], [ %53, %2 ]
  %302 = phi float [ %273, %93 ], [ %49, %2 ]
  %303 = phi float [ %248, %93 ], [ %45, %2 ]
  %304 = phi float [ %281, %93 ], [ %41, %2 ]
  %305 = phi float [ %207, %93 ], [ %69, %2 ]
  %306 = phi float [ %215, %93 ], [ %65, %2 ]
  %307 = phi float [ %224, %93 ], [ %61, %2 ]
  %308 = phi float [ %232, %93 ], [ %57, %2 ]
  %309 = phi float [ %256, %93 ], [ %85, %2 ]
  %310 = phi float [ %264, %93 ], [ %81, %2 ]
  %311 = phi float [ %289, %93 ], [ %77, %2 ]
  %312 = phi float [ %297, %93 ], [ %73, %2 ]
  %313 = phi float [ %198, %93 ], [ %25, %2 ]
  %314 = phi float [ %192, %93 ], [ %29, %2 ]
  %315 = phi float [ %172, %93 ], [ %17, %2 ]
  %316 = phi float [ %166, %93 ], [ %21, %2 ]
  %317 = phi float [ %158, %93 ], [ %13, %2 ]
  %318 = getelementptr inbounds float, float addrspace(1)* %1, i64 %11
  store float %317, float addrspace(1)* %318, align 4, !tbaa !5
  %319 = add i32 %6, 128
  %320 = add nsw i32 %319, %3
  %321 = add nsw i32 %320, %8
  %322 = mul nsw i32 %321, 20
  %323 = or i32 %322, 1
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds float, float addrspace(1)* %1, i64 %324
  store float %316, float addrspace(1)* %325, align 4, !tbaa !5
  %326 = add i32 %6, -128
  %327 = add nsw i32 %326, %3
  %328 = add nsw i32 %327, %8
  %329 = mul nsw i32 %328, 20
  %330 = or i32 %329, 2
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds float, float addrspace(1)* %1, i64 %331
  store float %315, float addrspace(1)* %332, align 4, !tbaa !5
  %333 = add nuw nsw i32 %3, 1
  %334 = add nsw i32 %333, %6
  %335 = add nsw i32 %334, %8
  %336 = mul nsw i32 %335, 20
  %337 = or i32 %336, 3
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds float, float addrspace(1)* %1, i64 %338
  store float %314, float addrspace(1)* %339, align 4, !tbaa !5
  %340 = add nsw i32 %3, -1
  %341 = add nsw i32 %340, %6
  %342 = add nsw i32 %341, %8
  %343 = mul nsw i32 %342, 20
  %344 = add nsw i32 %343, 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds float, float addrspace(1)* %1, i64 %345
  store float %313, float addrspace(1)* %346, align 4, !tbaa !5
  %347 = add i32 %8, 15360
  %348 = add nsw i32 %7, %347
  %349 = mul nsw i32 %348, 20
  %350 = add nsw i32 %349, 5
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds float, float addrspace(1)* %1, i64 %351
  store float %299, float addrspace(1)* %352, align 4, !tbaa !5
  %353 = add i32 %8, -15360
  %354 = add nsw i32 %7, %353
  %355 = mul nsw i32 %354, 20
  %356 = add nsw i32 %355, 6
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds float, float addrspace(1)* %1, i64 %357
  store float %300, float addrspace(1)* %358, align 4, !tbaa !5
  %359 = add i32 %8, %333
  %360 = add i32 %359, %319
  %361 = mul nsw i32 %360, 20
  %362 = add nsw i32 %361, 7
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds float, float addrspace(1)* %1, i64 %363
  store float %301, float addrspace(1)* %364, align 4, !tbaa !5
  %365 = add i32 %8, %340
  %366 = add i32 %365, %319
  %367 = mul nsw i32 %366, 20
  %368 = add nsw i32 %367, 8
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds float, float addrspace(1)* %1, i64 %369
  store float %302, float addrspace(1)* %370, align 4, !tbaa !5
  %371 = add i32 %359, %326
  %372 = mul nsw i32 %371, 20
  %373 = add nsw i32 %372, 9
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds float, float addrspace(1)* %1, i64 %374
  store float %303, float addrspace(1)* %375, align 4, !tbaa !5
  %376 = add i32 %365, %326
  %377 = mul nsw i32 %376, 20
  %378 = add nsw i32 %377, 10
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds float, float addrspace(1)* %1, i64 %379
  store float %304, float addrspace(1)* %380, align 4, !tbaa !5
  %381 = add nsw i32 %320, %347
  %382 = mul nsw i32 %381, 20
  %383 = add nsw i32 %382, 11
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds float, float addrspace(1)* %1, i64 %384
  store float %305, float addrspace(1)* %385, align 4, !tbaa !5
  %386 = add nsw i32 %320, %353
  %387 = mul nsw i32 %386, 20
  %388 = add nsw i32 %387, 12
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds float, float addrspace(1)* %1, i64 %389
  store float %306, float addrspace(1)* %390, align 4, !tbaa !5
  %391 = add nsw i32 %327, %347
  %392 = mul nsw i32 %391, 20
  %393 = add nsw i32 %392, 13
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds float, float addrspace(1)* %1, i64 %394
  store float %307, float addrspace(1)* %395, align 4, !tbaa !5
  %396 = add nsw i32 %327, %353
  %397 = mul nsw i32 %396, 20
  %398 = add nsw i32 %397, 14
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds float, float addrspace(1)* %1, i64 %399
  store float %308, float addrspace(1)* %400, align 4, !tbaa !5
  %401 = add nsw i32 %334, %347
  %402 = mul nsw i32 %401, 20
  %403 = add nsw i32 %402, 15
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds float, float addrspace(1)* %1, i64 %404
  store float %309, float addrspace(1)* %405, align 4, !tbaa !5
  %406 = add nsw i32 %334, %353
  %407 = mul nsw i32 %406, 20
  %408 = add nsw i32 %407, 16
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds float, float addrspace(1)* %1, i64 %409
  store float %310, float addrspace(1)* %410, align 4, !tbaa !5
  %411 = add nsw i32 %341, %347
  %412 = mul nsw i32 %411, 20
  %413 = add nsw i32 %412, 17
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds float, float addrspace(1)* %1, i64 %414
  store float %311, float addrspace(1)* %415, align 4, !tbaa !5
  %416 = add nsw i32 %341, %353
  %417 = mul nsw i32 %416, 20
  %418 = add nsw i32 %417, 18
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds float, float addrspace(1)* %1, i64 %419
  store float %312, float addrspace(1)* %420, align 4, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 14.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git bdeeab053a8bf72a56bdf54d056a43ecb9dc2748)"}
!4 = !{i32 0, i32 1024}
!5 = !{!6, !6, i64 0}
!6 = !{!"float", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !7, i64 0}
