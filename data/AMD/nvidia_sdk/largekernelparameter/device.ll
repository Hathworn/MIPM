; ModuleID = 'largekernelparameter.cpp'
source_filename = "largekernelparameter.cpp"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

%struct.param_t = type { [1024 x i32] }
%struct.param_large_t = type { [8000 x i32] }

@excess_params = protected addrspace(4) externally_initialized global [6976 x i32] zeroinitializer, align 16
@llvm.compiler.used = appending addrspace(1) global [1 x i8*] [i8* addrspacecast (i8 addrspace(4)* bitcast ([6976 x i32] addrspace(4)* @excess_params to i8 addrspace(4)*) to i8*)], section "llvm.metadata"

; Function Attrs: mustprogress nofree norecurse nosync nounwind writeonly
define protected amdgpu_kernel void @_Z13kernelDefault7param_tPi(%struct.param_t addrspace(4)* nocapture readonly byref(%struct.param_t) align 4 %0, i32 addrspace(1)* nocapture writeonly %1) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %85, %3 ]
  %5 = phi i32 [ 0, %2 ], [ %84, %3 ]
  %6 = zext i32 %4 to i64
  %7 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %6
  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4
  %9 = add nsw i32 %8, %5
  %10 = or i32 %4, 1
  %11 = zext i32 %10 to i64
  %12 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %11
  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4
  %14 = add nsw i32 %13, %9
  %15 = or i32 %4, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %16
  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !4
  %19 = add nsw i32 %18, %14
  %20 = or i32 %4, 3
  %21 = zext i32 %20 to i64
  %22 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %21
  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4
  %24 = add nsw i32 %23, %19
  %25 = or i32 %4, 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %26
  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !4
  %29 = add nsw i32 %28, %24
  %30 = or i32 %4, 5
  %31 = zext i32 %30 to i64
  %32 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %31
  %33 = load i32, i32 addrspace(4)* %32, align 4, !tbaa !4
  %34 = add nsw i32 %33, %29
  %35 = or i32 %4, 6
  %36 = zext i32 %35 to i64
  %37 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %36
  %38 = load i32, i32 addrspace(4)* %37, align 4, !tbaa !4
  %39 = add nsw i32 %38, %34
  %40 = or i32 %4, 7
  %41 = zext i32 %40 to i64
  %42 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %41
  %43 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !4
  %44 = add nsw i32 %43, %39
  %45 = or i32 %4, 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %46
  %48 = load i32, i32 addrspace(4)* %47, align 4, !tbaa !4
  %49 = add nsw i32 %48, %44
  %50 = or i32 %4, 9
  %51 = zext i32 %50 to i64
  %52 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %51
  %53 = load i32, i32 addrspace(4)* %52, align 4, !tbaa !4
  %54 = add nsw i32 %53, %49
  %55 = or i32 %4, 10
  %56 = zext i32 %55 to i64
  %57 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %56
  %58 = load i32, i32 addrspace(4)* %57, align 4, !tbaa !4
  %59 = add nsw i32 %58, %54
  %60 = or i32 %4, 11
  %61 = zext i32 %60 to i64
  %62 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %61
  %63 = load i32, i32 addrspace(4)* %62, align 4, !tbaa !4
  %64 = add nsw i32 %63, %59
  %65 = or i32 %4, 12
  %66 = zext i32 %65 to i64
  %67 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %66
  %68 = load i32, i32 addrspace(4)* %67, align 4, !tbaa !4
  %69 = add nsw i32 %68, %64
  %70 = or i32 %4, 13
  %71 = zext i32 %70 to i64
  %72 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %71
  %73 = load i32, i32 addrspace(4)* %72, align 4, !tbaa !4
  %74 = add nsw i32 %73, %69
  %75 = or i32 %4, 14
  %76 = zext i32 %75 to i64
  %77 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %76
  %78 = load i32, i32 addrspace(4)* %77, align 4, !tbaa !4
  %79 = add nsw i32 %78, %74
  %80 = or i32 %4, 15
  %81 = zext i32 %80 to i64
  %82 = getelementptr %struct.param_t, %struct.param_t addrspace(4)* %0, i64 0, i32 0, i64 %81
  %83 = load i32, i32 addrspace(4)* %82, align 4, !tbaa !4
  %84 = add nsw i32 %83, %79
  %85 = add nuw nsw i32 %4, 16
  %86 = icmp eq i32 %85, 1024
  br i1 %86, label %88, label %3, !llvm.loop !8

87:                                               ; preds = %88
  store i32 %169, i32 addrspace(1)* %1, align 4, !tbaa !4
  ret void

88:                                               ; preds = %3, %88
  %89 = phi i32 [ %170, %88 ], [ 0, %3 ]
  %90 = phi i32 [ %169, %88 ], [ %84, %3 ]
  %91 = zext i32 %89 to i64
  %92 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %91
  %93 = load i32, i32 addrspace(4)* %92, align 16, !tbaa !4
  %94 = add nsw i32 %93, %90
  %95 = or i32 %89, 1
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %96
  %98 = load i32, i32 addrspace(4)* %97, align 4, !tbaa !4
  %99 = add nsw i32 %98, %94
  %100 = or i32 %89, 2
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %101
  %103 = load i32, i32 addrspace(4)* %102, align 8, !tbaa !4
  %104 = add nsw i32 %103, %99
  %105 = or i32 %89, 3
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %106
  %108 = load i32, i32 addrspace(4)* %107, align 4, !tbaa !4
  %109 = add nsw i32 %108, %104
  %110 = or i32 %89, 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %111
  %113 = load i32, i32 addrspace(4)* %112, align 16, !tbaa !4
  %114 = add nsw i32 %113, %109
  %115 = or i32 %89, 5
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %116
  %118 = load i32, i32 addrspace(4)* %117, align 4, !tbaa !4
  %119 = add nsw i32 %118, %114
  %120 = or i32 %89, 6
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %121
  %123 = load i32, i32 addrspace(4)* %122, align 8, !tbaa !4
  %124 = add nsw i32 %123, %119
  %125 = or i32 %89, 7
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %126
  %128 = load i32, i32 addrspace(4)* %127, align 4, !tbaa !4
  %129 = add nsw i32 %128, %124
  %130 = or i32 %89, 8
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %131
  %133 = load i32, i32 addrspace(4)* %132, align 16, !tbaa !4
  %134 = add nsw i32 %133, %129
  %135 = or i32 %89, 9
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %136
  %138 = load i32, i32 addrspace(4)* %137, align 4, !tbaa !4
  %139 = add nsw i32 %138, %134
  %140 = or i32 %89, 10
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %141
  %143 = load i32, i32 addrspace(4)* %142, align 8, !tbaa !4
  %144 = add nsw i32 %143, %139
  %145 = or i32 %89, 11
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %146
  %148 = load i32, i32 addrspace(4)* %147, align 4, !tbaa !4
  %149 = add nsw i32 %148, %144
  %150 = or i32 %89, 12
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %151
  %153 = load i32, i32 addrspace(4)* %152, align 16, !tbaa !4
  %154 = add nsw i32 %153, %149
  %155 = or i32 %89, 13
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %156
  %158 = load i32, i32 addrspace(4)* %157, align 4, !tbaa !4
  %159 = add nsw i32 %158, %154
  %160 = or i32 %89, 14
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %161
  %163 = load i32, i32 addrspace(4)* %162, align 8, !tbaa !4
  %164 = add nsw i32 %163, %159
  %165 = or i32 %89, 15
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [6976 x i32], [6976 x i32] addrspace(4)* @excess_params, i64 0, i64 %166
  %168 = load i32, i32 addrspace(4)* %167, align 4, !tbaa !4
  %169 = add nsw i32 %168, %164
  %170 = add nuw nsw i32 %89, 16
  %171 = icmp eq i32 %170, 6976
  br i1 %171, label %87, label %88, !llvm.loop !10
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind writeonly
define protected amdgpu_kernel void @_Z16kernelLargeParam13param_large_tPi(%struct.param_large_t addrspace(4)* nocapture readonly byref(%struct.param_large_t) align 4 %0, i32 addrspace(1)* nocapture writeonly %1) local_unnamed_addr #0 {
  br label %4

3:                                                ; preds = %4
  store i32 %130, i32 addrspace(1)* %1, align 4, !tbaa !4
  ret void

4:                                                ; preds = %4, %2
  %5 = phi i32 [ 0, %2 ], [ %131, %4 ]
  %6 = phi i32 [ 0, %2 ], [ %130, %4 ]
  %7 = zext i32 %5 to i64
  %8 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %7
  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4
  %10 = add nsw i32 %9, %6
  %11 = add nuw nsw i32 %5, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %12
  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4
  %15 = add nsw i32 %14, %10
  %16 = add nuw nsw i32 %5, 2
  %17 = zext i32 %16 to i64
  %18 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %17
  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !4
  %20 = add nsw i32 %19, %15
  %21 = add nuw nsw i32 %5, 3
  %22 = zext i32 %21 to i64
  %23 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %22
  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !4
  %25 = add nsw i32 %24, %20
  %26 = add nuw nsw i32 %5, 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %27
  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !4
  %30 = add nsw i32 %29, %25
  %31 = add nuw nsw i32 %5, 5
  %32 = zext i32 %31 to i64
  %33 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %32
  %34 = load i32, i32 addrspace(4)* %33, align 4, !tbaa !4
  %35 = add nsw i32 %34, %30
  %36 = add nuw nsw i32 %5, 6
  %37 = zext i32 %36 to i64
  %38 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %37
  %39 = load i32, i32 addrspace(4)* %38, align 4, !tbaa !4
  %40 = add nsw i32 %39, %35
  %41 = add nuw nsw i32 %5, 7
  %42 = zext i32 %41 to i64
  %43 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %42
  %44 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !4
  %45 = add nsw i32 %44, %40
  %46 = add nuw nsw i32 %5, 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %47
  %49 = load i32, i32 addrspace(4)* %48, align 4, !tbaa !4
  %50 = add nsw i32 %49, %45
  %51 = add nuw nsw i32 %5, 9
  %52 = zext i32 %51 to i64
  %53 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %52
  %54 = load i32, i32 addrspace(4)* %53, align 4, !tbaa !4
  %55 = add nsw i32 %54, %50
  %56 = add nuw nsw i32 %5, 10
  %57 = zext i32 %56 to i64
  %58 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %57
  %59 = load i32, i32 addrspace(4)* %58, align 4, !tbaa !4
  %60 = add nsw i32 %59, %55
  %61 = add nuw nsw i32 %5, 11
  %62 = zext i32 %61 to i64
  %63 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %62
  %64 = load i32, i32 addrspace(4)* %63, align 4, !tbaa !4
  %65 = add nsw i32 %64, %60
  %66 = add nuw nsw i32 %5, 12
  %67 = zext i32 %66 to i64
  %68 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %67
  %69 = load i32, i32 addrspace(4)* %68, align 4, !tbaa !4
  %70 = add nsw i32 %69, %65
  %71 = add nuw nsw i32 %5, 13
  %72 = zext i32 %71 to i64
  %73 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %72
  %74 = load i32, i32 addrspace(4)* %73, align 4, !tbaa !4
  %75 = add nsw i32 %74, %70
  %76 = add nuw nsw i32 %5, 14
  %77 = zext i32 %76 to i64
  %78 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %77
  %79 = load i32, i32 addrspace(4)* %78, align 4, !tbaa !4
  %80 = add nsw i32 %79, %75
  %81 = add nuw nsw i32 %5, 15
  %82 = zext i32 %81 to i64
  %83 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %82
  %84 = load i32, i32 addrspace(4)* %83, align 4, !tbaa !4
  %85 = add nsw i32 %84, %80
  %86 = add nuw nsw i32 %5, 16
  %87 = zext i32 %86 to i64
  %88 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %87
  %89 = load i32, i32 addrspace(4)* %88, align 4, !tbaa !4
  %90 = add nsw i32 %89, %85
  %91 = add nuw nsw i32 %5, 17
  %92 = zext i32 %91 to i64
  %93 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %92
  %94 = load i32, i32 addrspace(4)* %93, align 4, !tbaa !4
  %95 = add nsw i32 %94, %90
  %96 = add nuw nsw i32 %5, 18
  %97 = zext i32 %96 to i64
  %98 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %97
  %99 = load i32, i32 addrspace(4)* %98, align 4, !tbaa !4
  %100 = add nsw i32 %99, %95
  %101 = add nuw nsw i32 %5, 19
  %102 = zext i32 %101 to i64
  %103 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %102
  %104 = load i32, i32 addrspace(4)* %103, align 4, !tbaa !4
  %105 = add nsw i32 %104, %100
  %106 = add nuw nsw i32 %5, 20
  %107 = zext i32 %106 to i64
  %108 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %107
  %109 = load i32, i32 addrspace(4)* %108, align 4, !tbaa !4
  %110 = add nsw i32 %109, %105
  %111 = add nuw nsw i32 %5, 21
  %112 = zext i32 %111 to i64
  %113 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %112
  %114 = load i32, i32 addrspace(4)* %113, align 4, !tbaa !4
  %115 = add nsw i32 %114, %110
  %116 = add nuw nsw i32 %5, 22
  %117 = zext i32 %116 to i64
  %118 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %117
  %119 = load i32, i32 addrspace(4)* %118, align 4, !tbaa !4
  %120 = add nsw i32 %119, %115
  %121 = add nuw nsw i32 %5, 23
  %122 = zext i32 %121 to i64
  %123 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %122
  %124 = load i32, i32 addrspace(4)* %123, align 4, !tbaa !4
  %125 = add nsw i32 %124, %120
  %126 = add nuw nsw i32 %5, 24
  %127 = zext i32 %126 to i64
  %128 = getelementptr %struct.param_large_t, %struct.param_large_t addrspace(4)* %0, i64 0, i32 0, i64 %127
  %129 = load i32, i32 addrspace(4)* %128, align 4, !tbaa !4
  %130 = add nsw i32 %129, %125
  %131 = add nuw nsw i32 %5, 25
  %132 = icmp eq i32 %131, 8000
  br i1 %132, label %3, label %4, !llvm.loop !11
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind writeonly "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 14.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git bdeeab053a8bf72a56bdf54d056a43ecb9dc2748)"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
