; ModuleID = 'main.hip.cu'
source_filename = "main.hip.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z6kerneliPfS_S_S_(i32 %0, float addrspace(1)* readonly %1, float addrspace(1)* writeonly %2, float addrspace(1)* nocapture readonly %3, float addrspace(1)* nocapture readnone %4) local_unnamed_addr #0 {
  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !5
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %9, label %4564

9:                                                ; preds = %5
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %6562

11:                                               ; preds = %9
  %12 = sitofp i32 %0 to float
  %13 = getelementptr inbounds float, float addrspace(1)* %3, i64 15
  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !6, !amdgpu.noclobber !10
  %15 = load float, float addrspace(1)* %1, align 4, !tbaa !6, !amdgpu.noclobber !10
  %16 = getelementptr inbounds float, float addrspace(1)* %1, i64 1
  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !6, !amdgpu.noclobber !10
  %18 = getelementptr inbounds float, float addrspace(1)* %1, i64 2
  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !6, !amdgpu.noclobber !10
  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 3
  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !6, !amdgpu.noclobber !10
  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 4
  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !6, !amdgpu.noclobber !10
  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 5
  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !6, !amdgpu.noclobber !10
  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 6
  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !6, !amdgpu.noclobber !10
  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 7
  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !6, !amdgpu.noclobber !10
  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 8
  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !6, !amdgpu.noclobber !10
  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 9
  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !6, !amdgpu.noclobber !10
  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 10
  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !6, !amdgpu.noclobber !10
  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 11
  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !6, !amdgpu.noclobber !10
  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 12
  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !6, !amdgpu.noclobber !10
  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 13
  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !6, !amdgpu.noclobber !10
  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 14
  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !6, !amdgpu.noclobber !10
  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 15
  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !6, !amdgpu.noclobber !10
  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 16
  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !6, !amdgpu.noclobber !10
  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 17
  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !6, !amdgpu.noclobber !10
  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 18
  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !6, !amdgpu.noclobber !10
  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 19
  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !6, !amdgpu.noclobber !10
  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 20
  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !6, !amdgpu.noclobber !10
  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 22
  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !6, !amdgpu.noclobber !10
  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 23
  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !6, !amdgpu.noclobber !10
  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 24
  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !6, !amdgpu.noclobber !10
  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 25
  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !6, !amdgpu.noclobber !10
  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 26
  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !6, !amdgpu.noclobber !10
  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 27
  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !6, !amdgpu.noclobber !10
  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 28
  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !6, !amdgpu.noclobber !10
  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 29
  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !6, !amdgpu.noclobber !10
  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 30
  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !6, !amdgpu.noclobber !10
  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 31
  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !6, !amdgpu.noclobber !10
  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 32
  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !6, !amdgpu.noclobber !10
  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 33
  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !6, !amdgpu.noclobber !10
  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 34
  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !6, !amdgpu.noclobber !10
  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 35
  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !6, !amdgpu.noclobber !10
  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 36
  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !6, !amdgpu.noclobber !10
  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 37
  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !6, !amdgpu.noclobber !10
  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 38
  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !6, !amdgpu.noclobber !10
  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 39
  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !6, !amdgpu.noclobber !10
  %92 = fdiv contract float 1.400000e+02, %75
  %93 = tail call i1 @llvm.amdgcn.class.f32(float %92, i32 144)
  %94 = select i1 %93, float 0x41F0000000000000, float 1.000000e+00
  %95 = fmul float %92, %94
  %96 = tail call float @llvm.log2.f32(float %95)
  %97 = fmul float %96, 0x3FE62E42E0000000
  %98 = tail call i1 @llvm.amdgcn.class.f32(float %96, i32 519)
  %99 = fneg float %97
  %100 = tail call float @llvm.fma.f32(float %96, float 0x3FE62E42E0000000, float %99)
  %101 = tail call float @llvm.fma.f32(float %96, float 0x3E6EFA39E0000000, float %100)
  %102 = fadd float %97, %101
  %103 = select i1 %98, float %96, float %102
  %104 = select i1 %93, float 0x40362E4300000000, float 0.000000e+00
  %105 = fsub float %103, %104
  %106 = fmul contract float %105, 0x403AB65BE0000000
  %107 = fdiv contract float 1.400000e+02, %77
  %108 = tail call i1 @llvm.amdgcn.class.f32(float %107, i32 144)
  %109 = select i1 %108, float 0x41F0000000000000, float 1.000000e+00
  %110 = fmul float %107, %109
  %111 = tail call float @llvm.log2.f32(float %110)
  %112 = fmul float %111, 0x3FE62E42E0000000
  %113 = tail call i1 @llvm.amdgcn.class.f32(float %111, i32 519)
  %114 = fneg float %112
  %115 = tail call float @llvm.fma.f32(float %111, float 0x3FE62E42E0000000, float %114)
  %116 = tail call float @llvm.fma.f32(float %111, float 0x3E6EFA39E0000000, float %115)
  %117 = fadd float %112, %116
  %118 = select i1 %113, float %111, float %117
  %119 = select i1 %108, float 0x40362E4300000000, float 0.000000e+00
  %120 = fsub float %118, %119
  %121 = fmul contract float %120, 0x403AB65BE0000000
  %122 = fdiv contract float 0x40159999A0000000, %81
  %123 = tail call i1 @llvm.amdgcn.class.f32(float %122, i32 144)
  %124 = select i1 %123, float 0x41F0000000000000, float 1.000000e+00
  %125 = fmul float %122, %124
  %126 = tail call float @llvm.log2.f32(float %125)
  %127 = fmul float %126, 0x3FE62E42E0000000
  %128 = tail call i1 @llvm.amdgcn.class.f32(float %126, i32 519)
  %129 = fneg float %127
  %130 = tail call float @llvm.fma.f32(float %126, float 0x3FE62E42E0000000, float %129)
  %131 = tail call float @llvm.fma.f32(float %126, float 0x3E6EFA39E0000000, float %130)
  %132 = fadd float %127, %131
  %133 = select i1 %128, float %126, float %132
  %134 = select i1 %123, float 0x40362E4300000000, float 0.000000e+00
  %135 = fsub float %133, %134
  %136 = fmul contract float %135, 0x403AB65BE0000000
  %137 = fdiv contract float 0x3FFCCCCCC0000000, %83
  %138 = tail call i1 @llvm.amdgcn.class.f32(float %137, i32 144)
  %139 = select i1 %138, float 0x41F0000000000000, float 1.000000e+00
  %140 = fmul float %137, %139
  %141 = tail call float @llvm.log2.f32(float %140)
  %142 = fmul float %141, 0x3FE62E42E0000000
  %143 = tail call i1 @llvm.amdgcn.class.f32(float %141, i32 519)
  %144 = fneg float %142
  %145 = tail call float @llvm.fma.f32(float %141, float 0x3FE62E42E0000000, float %144)
  %146 = tail call float @llvm.fma.f32(float %141, float 0x3E6EFA39E0000000, float %145)
  %147 = fadd float %142, %146
  %148 = select i1 %143, float %141, float %147
  %149 = select i1 %138, float 0x40362E4300000000, float 0.000000e+00
  %150 = fsub float %148, %149
  %151 = fmul contract float %150, 0x402AB65BE0000000
  %152 = fdiv contract float 0x3FFCCCCCC0000000, %85
  %153 = tail call i1 @llvm.amdgcn.class.f32(float %152, i32 144)
  %154 = select i1 %153, float 0x41F0000000000000, float 1.000000e+00
  %155 = fmul float %152, %154
  %156 = tail call float @llvm.log2.f32(float %155)
  %157 = fmul float %156, 0x3FE62E42E0000000
  %158 = tail call i1 @llvm.amdgcn.class.f32(float %156, i32 519)
  %159 = fneg float %157
  %160 = tail call float @llvm.fma.f32(float %156, float 0x3FE62E42E0000000, float %159)
  %161 = tail call float @llvm.fma.f32(float %156, float 0x3E6EFA39E0000000, float %160)
  %162 = fadd float %157, %161
  %163 = select i1 %158, float %156, float %162
  %164 = select i1 %153, float 0x40362E4300000000, float 0.000000e+00
  %165 = fsub float %163, %164
  %166 = fmul contract float %165, 0x402AB65BE0000000
  %167 = fpext float %89 to double
  %168 = fadd contract double %167, 4.713000e+01
  %169 = fmul contract double %168, 3.200000e-01
  %170 = fmul contract double %168, -1.000000e-01
  %171 = fmul double %170, 0x3FF71547652B82FE
  %172 = tail call double @llvm.rint.f64(double %171)
  %173 = fneg double %172
  %174 = tail call double @llvm.fma.f64(double %173, double 0x3FE62E42FEFA39EF, double %170)
  %175 = tail call double @llvm.fma.f64(double %173, double 0x3C7ABC9E3B39803F, double %174)
  %176 = tail call double @llvm.fma.f64(double %175, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %177 = tail call double @llvm.fma.f64(double %175, double %176, double 0x3EC71DEE623FDE64)
  %178 = tail call double @llvm.fma.f64(double %175, double %177, double 0x3EFA01997C89E6B0)
  %179 = tail call double @llvm.fma.f64(double %175, double %178, double 0x3F2A01A014761F6E)
  %180 = tail call double @llvm.fma.f64(double %175, double %179, double 0x3F56C16C1852B7B0)
  %181 = tail call double @llvm.fma.f64(double %175, double %180, double 0x3F81111111122322)
  %182 = tail call double @llvm.fma.f64(double %175, double %181, double 0x3FA55555555502A1)
  %183 = tail call double @llvm.fma.f64(double %175, double %182, double 0x3FC5555555555511)
  %184 = tail call double @llvm.fma.f64(double %175, double %183, double 0x3FE000000000000B)
  %185 = tail call double @llvm.fma.f64(double %175, double %184, double 1.000000e+00)
  %186 = tail call double @llvm.fma.f64(double %175, double %185, double 1.000000e+00)
  %187 = fptosi double %172 to i32
  %188 = tail call double @llvm.amdgcn.ldexp.f64(double %186, i32 %187)
  %189 = fcmp ogt double %170, 1.024000e+03
  %190 = fcmp olt double %170, -1.075000e+03
  %191 = fsub contract double 1.000000e+00, %188
  %192 = select i1 %189, double 0xFFF0000000000000, double %191
  %193 = select i1 %190, double 1.000000e+00, double %192
  %194 = fdiv contract double %169, %193
  %195 = fptrunc double %194 to float
  %196 = fneg contract float %89
  %197 = fdiv contract float %89, -1.100000e+01
  %198 = fmul float %197, 0x3FF7154760000000
  %199 = tail call float @llvm.rint.f32(float %198)
  %200 = fcmp ogt float %197, 0x40562E4300000000
  %201 = fcmp olt float %197, 0xC059D1DA00000000
  %202 = fneg float %198
  %203 = tail call float @llvm.fma.f32(float %197, float 0x3FF7154760000000, float %202)
  %204 = tail call float @llvm.fma.f32(float %197, float 0x3E54AE0BE0000000, float %203)
  %205 = fsub float %198, %199
  %206 = fadd float %204, %205
  %207 = tail call float @llvm.exp2.f32(float %206)
  %208 = fptosi float %199 to i32
  %209 = tail call float @llvm.amdgcn.ldexp.f32(float %207, i32 %208)
  %210 = select i1 %201, float 0.000000e+00, float %209
  %211 = select i1 %200, float 0x7FF0000000000000, float %210
  %212 = fpext float %211 to double
  %213 = fmul contract double %212, 8.000000e-02
  %214 = fptrunc double %213 to float
  %215 = fcmp contract ult float %89, -4.000000e+01
  br i1 %215, label %276, label %216

216:                                              ; preds = %11
  %217 = fadd contract double %167, 1.066000e+01
  %218 = fdiv contract double %217, -1.110000e+01
  %219 = fmul double %218, 0x3FF71547652B82FE
  %220 = tail call double @llvm.rint.f64(double %219)
  %221 = fneg double %220
  %222 = tail call double @llvm.fma.f64(double %221, double 0x3FE62E42FEFA39EF, double %218)
  %223 = tail call double @llvm.fma.f64(double %221, double 0x3C7ABC9E3B39803F, double %222)
  %224 = tail call double @llvm.fma.f64(double %223, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %225 = tail call double @llvm.fma.f64(double %223, double %224, double 0x3EC71DEE623FDE64)
  %226 = tail call double @llvm.fma.f64(double %223, double %225, double 0x3EFA01997C89E6B0)
  %227 = tail call double @llvm.fma.f64(double %223, double %226, double 0x3F2A01A014761F6E)
  %228 = tail call double @llvm.fma.f64(double %223, double %227, double 0x3F56C16C1852B7B0)
  %229 = tail call double @llvm.fma.f64(double %223, double %228, double 0x3F81111111122322)
  %230 = tail call double @llvm.fma.f64(double %223, double %229, double 0x3FA55555555502A1)
  %231 = tail call double @llvm.fma.f64(double %223, double %230, double 0x3FC5555555555511)
  %232 = tail call double @llvm.fma.f64(double %223, double %231, double 0x3FE000000000000B)
  %233 = tail call double @llvm.fma.f64(double %223, double %232, double 1.000000e+00)
  %234 = tail call double @llvm.fma.f64(double %223, double %233, double 1.000000e+00)
  %235 = fptosi double %220 to i32
  %236 = tail call double @llvm.amdgcn.ldexp.f64(double %234, i32 %235)
  %237 = fcmp ogt double %218, 1.024000e+03
  %238 = fcmp olt double %218, -1.075000e+03
  %239 = fadd contract double %236, 1.000000e+00
  %240 = fmul contract double %239, 1.300000e-01
  %241 = fdiv contract double 1.000000e+00, %240
  %242 = select i1 %237, double 0.000000e+00, double %241
  %243 = select i1 %238, double 0x401EC4EC4EC4EC4E, double %242
  %244 = fmul contract double %167, -2.535000e-07
  %245 = fmul double %244, 0x3FF71547652B82FE
  %246 = tail call double @llvm.rint.f64(double %245)
  %247 = fneg double %246
  %248 = tail call double @llvm.fma.f64(double %247, double 0x3FE62E42FEFA39EF, double %244)
  %249 = tail call double @llvm.fma.f64(double %247, double 0x3C7ABC9E3B39803F, double %248)
  %250 = tail call double @llvm.fma.f64(double %249, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %251 = tail call double @llvm.fma.f64(double %249, double %250, double 0x3EC71DEE623FDE64)
  %252 = tail call double @llvm.fma.f64(double %249, double %251, double 0x3EFA01997C89E6B0)
  %253 = tail call double @llvm.fma.f64(double %249, double %252, double 0x3F2A01A014761F6E)
  %254 = tail call double @llvm.fma.f64(double %249, double %253, double 0x3F56C16C1852B7B0)
  %255 = tail call double @llvm.fma.f64(double %249, double %254, double 0x3F81111111122322)
  %256 = tail call double @llvm.fma.f64(double %249, double %255, double 0x3FA55555555502A1)
  %257 = tail call double @llvm.fma.f64(double %249, double %256, double 0x3FC5555555555511)
  %258 = tail call double @llvm.fma.f64(double %249, double %257, double 0x3FE000000000000B)
  %259 = tail call double @llvm.fma.f64(double %249, double %258, double 1.000000e+00)
  %260 = tail call double @llvm.fma.f64(double %249, double %259, double 1.000000e+00)
  %261 = fptosi double %246 to i32
  %262 = tail call double @llvm.amdgcn.ldexp.f64(double %260, i32 %261)
  %263 = fcmp ogt double %244, 1.024000e+03
  %264 = fcmp olt double %244, -1.075000e+03
  %265 = fmul contract double %262, 3.000000e-01
  %266 = select i1 %263, double 0x7FF0000000000000, double %265
  %267 = select i1 %264, double 0.000000e+00, double %266
  %268 = fadd contract float %89, 3.200000e+01
  %269 = fpext float %268 to double
  %270 = fmul contract double %269, -1.000000e-01
  %271 = fmul double %270, 0x3FF71547652B82FE
  %272 = tail call double @llvm.rint.f64(double %271)
  %273 = fneg double %272
  %274 = tail call double @llvm.fma.f64(double %273, double 0x3FE62E42FEFA39EF, double %270)
  %275 = tail call double @llvm.fma.f64(double %273, double 0x3C7ABC9E3B39803F, double %274)
  br label %462

276:                                              ; preds = %11
  %277 = fadd contract float %89, 8.000000e+01
  %278 = fpext float %277 to double
  %279 = fdiv contract double %278, -6.800000e+00
  %280 = fmul double %279, 0x3FF71547652B82FE
  %281 = tail call double @llvm.rint.f64(double %280)
  %282 = fneg double %281
  %283 = tail call double @llvm.fma.f64(double %282, double 0x3FE62E42FEFA39EF, double %279)
  %284 = tail call double @llvm.fma.f64(double %282, double 0x3C7ABC9E3B39803F, double %283)
  %285 = tail call double @llvm.fma.f64(double %284, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %286 = tail call double @llvm.fma.f64(double %284, double %285, double 0x3EC71DEE623FDE64)
  %287 = tail call double @llvm.fma.f64(double %284, double %286, double 0x3EFA01997C89E6B0)
  %288 = tail call double @llvm.fma.f64(double %284, double %287, double 0x3F2A01A014761F6E)
  %289 = tail call double @llvm.fma.f64(double %284, double %288, double 0x3F56C16C1852B7B0)
  %290 = tail call double @llvm.fma.f64(double %284, double %289, double 0x3F81111111122322)
  %291 = tail call double @llvm.fma.f64(double %284, double %290, double 0x3FA55555555502A1)
  %292 = tail call double @llvm.fma.f64(double %284, double %291, double 0x3FC5555555555511)
  %293 = tail call double @llvm.fma.f64(double %284, double %292, double 0x3FE000000000000B)
  %294 = tail call double @llvm.fma.f64(double %284, double %293, double 1.000000e+00)
  %295 = tail call double @llvm.fma.f64(double %284, double %294, double 1.000000e+00)
  %296 = fptosi double %281 to i32
  %297 = tail call double @llvm.amdgcn.ldexp.f64(double %295, i32 %296)
  %298 = fcmp ogt double %279, 1.024000e+03
  %299 = fcmp olt double %279, -1.075000e+03
  %300 = fmul contract double %297, 1.350000e-01
  %301 = select i1 %298, double 0x7FF0000000000000, double %300
  %302 = select i1 %299, double 0.000000e+00, double %301
  %303 = fptrunc double %302 to float
  %304 = fmul contract double %167, 7.900000e-02
  %305 = fmul double %304, 0x3FF71547652B82FE
  %306 = tail call double @llvm.rint.f64(double %305)
  %307 = fneg double %306
  %308 = tail call double @llvm.fma.f64(double %307, double 0x3FE62E42FEFA39EF, double %304)
  %309 = tail call double @llvm.fma.f64(double %307, double 0x3C7ABC9E3B39803F, double %308)
  %310 = tail call double @llvm.fma.f64(double %309, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %311 = tail call double @llvm.fma.f64(double %309, double %310, double 0x3EC71DEE623FDE64)
  %312 = tail call double @llvm.fma.f64(double %309, double %311, double 0x3EFA01997C89E6B0)
  %313 = tail call double @llvm.fma.f64(double %309, double %312, double 0x3F2A01A014761F6E)
  %314 = tail call double @llvm.fma.f64(double %309, double %313, double 0x3F56C16C1852B7B0)
  %315 = tail call double @llvm.fma.f64(double %309, double %314, double 0x3F81111111122322)
  %316 = tail call double @llvm.fma.f64(double %309, double %315, double 0x3FA55555555502A1)
  %317 = tail call double @llvm.fma.f64(double %309, double %316, double 0x3FC5555555555511)
  %318 = tail call double @llvm.fma.f64(double %309, double %317, double 0x3FE000000000000B)
  %319 = tail call double @llvm.fma.f64(double %309, double %318, double 1.000000e+00)
  %320 = tail call double @llvm.fma.f64(double %309, double %319, double 1.000000e+00)
  %321 = fptosi double %306 to i32
  %322 = tail call double @llvm.amdgcn.ldexp.f64(double %320, i32 %321)
  %323 = fcmp ogt double %304, 1.024000e+03
  %324 = fcmp olt double %304, -1.075000e+03
  %325 = fmul contract double %322, 3.560000e+00
  %326 = select i1 %323, double 0x7FF0000000000000, double %325
  %327 = select i1 %324, double 0.000000e+00, double %326
  %328 = fmul contract double %167, 3.500000e-01
  %329 = fmul double %328, 0x3FF71547652B82FE
  %330 = tail call double @llvm.rint.f64(double %329)
  %331 = fneg double %330
  %332 = tail call double @llvm.fma.f64(double %331, double 0x3FE62E42FEFA39EF, double %328)
  %333 = tail call double @llvm.fma.f64(double %331, double 0x3C7ABC9E3B39803F, double %332)
  %334 = tail call double @llvm.fma.f64(double %333, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %335 = tail call double @llvm.fma.f64(double %333, double %334, double 0x3EC71DEE623FDE64)
  %336 = tail call double @llvm.fma.f64(double %333, double %335, double 0x3EFA01997C89E6B0)
  %337 = tail call double @llvm.fma.f64(double %333, double %336, double 0x3F2A01A014761F6E)
  %338 = tail call double @llvm.fma.f64(double %333, double %337, double 0x3F56C16C1852B7B0)
  %339 = tail call double @llvm.fma.f64(double %333, double %338, double 0x3F81111111122322)
  %340 = tail call double @llvm.fma.f64(double %333, double %339, double 0x3FA55555555502A1)
  %341 = tail call double @llvm.fma.f64(double %333, double %340, double 0x3FC5555555555511)
  %342 = tail call double @llvm.fma.f64(double %333, double %341, double 0x3FE000000000000B)
  %343 = tail call double @llvm.fma.f64(double %333, double %342, double 1.000000e+00)
  %344 = tail call double @llvm.fma.f64(double %333, double %343, double 1.000000e+00)
  %345 = fptosi double %330 to i32
  %346 = tail call double @llvm.amdgcn.ldexp.f64(double %344, i32 %345)
  %347 = fcmp ogt double %328, 1.024000e+03
  %348 = fcmp olt double %328, -1.075000e+03
  %349 = fmul contract double %346, 3.100000e+05
  %350 = select i1 %347, double 0x7FF0000000000000, double %349
  %351 = select i1 %348, double 0.000000e+00, double %350
  %352 = fadd contract double %327, %351
  %353 = fmul contract double %167, 2.444000e-01
  %354 = fmul double %353, 0x3FF71547652B82FE
  %355 = tail call double @llvm.rint.f64(double %354)
  %356 = fneg double %355
  %357 = tail call double @llvm.fma.f64(double %356, double 0x3FE62E42FEFA39EF, double %353)
  %358 = tail call double @llvm.fma.f64(double %356, double 0x3C7ABC9E3B39803F, double %357)
  %359 = tail call double @llvm.fma.f64(double %358, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %360 = tail call double @llvm.fma.f64(double %358, double %359, double 0x3EC71DEE623FDE64)
  %361 = tail call double @llvm.fma.f64(double %358, double %360, double 0x3EFA01997C89E6B0)
  %362 = tail call double @llvm.fma.f64(double %358, double %361, double 0x3F2A01A014761F6E)
  %363 = tail call double @llvm.fma.f64(double %358, double %362, double 0x3F56C16C1852B7B0)
  %364 = tail call double @llvm.fma.f64(double %358, double %363, double 0x3F81111111122322)
  %365 = tail call double @llvm.fma.f64(double %358, double %364, double 0x3FA55555555502A1)
  %366 = tail call double @llvm.fma.f64(double %358, double %365, double 0x3FC5555555555511)
  %367 = tail call double @llvm.fma.f64(double %358, double %366, double 0x3FE000000000000B)
  %368 = tail call double @llvm.fma.f64(double %358, double %367, double 1.000000e+00)
  %369 = tail call double @llvm.fma.f64(double %358, double %368, double 1.000000e+00)
  %370 = fptosi double %355 to i32
  %371 = tail call double @llvm.amdgcn.ldexp.f64(double %369, i32 %370)
  %372 = fcmp ogt double %353, 1.024000e+03
  %373 = fcmp olt double %353, -1.075000e+03
  %374 = fmul contract double %371, -1.271400e+05
  %375 = select i1 %372, double 0xFFF0000000000000, double %374
  %376 = select i1 %373, double -0.000000e+00, double %375
  %377 = fmul contract double %167, -4.391000e-02
  %378 = fmul double %377, 0x3FF71547652B82FE
  %379 = tail call double @llvm.rint.f64(double %378)
  %380 = fneg double %379
  %381 = tail call double @llvm.fma.f64(double %380, double 0x3FE62E42FEFA39EF, double %377)
  %382 = tail call double @llvm.fma.f64(double %380, double 0x3C7ABC9E3B39803F, double %381)
  %383 = tail call double @llvm.fma.f64(double %382, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %384 = tail call double @llvm.fma.f64(double %382, double %383, double 0x3EC71DEE623FDE64)
  %385 = tail call double @llvm.fma.f64(double %382, double %384, double 0x3EFA01997C89E6B0)
  %386 = tail call double @llvm.fma.f64(double %382, double %385, double 0x3F2A01A014761F6E)
  %387 = tail call double @llvm.fma.f64(double %382, double %386, double 0x3F56C16C1852B7B0)
  %388 = tail call double @llvm.fma.f64(double %382, double %387, double 0x3F81111111122322)
  %389 = tail call double @llvm.fma.f64(double %382, double %388, double 0x3FA55555555502A1)
  %390 = tail call double @llvm.fma.f64(double %382, double %389, double 0x3FC5555555555511)
  %391 = tail call double @llvm.fma.f64(double %382, double %390, double 0x3FE000000000000B)
  %392 = tail call double @llvm.fma.f64(double %382, double %391, double 1.000000e+00)
  %393 = tail call double @llvm.fma.f64(double %382, double %392, double 1.000000e+00)
  %394 = fptosi double %379 to i32
  %395 = tail call double @llvm.amdgcn.ldexp.f64(double %393, i32 %394)
  %396 = fcmp ogt double %377, 1.024000e+03
  %397 = fcmp olt double %377, -1.075000e+03
  %398 = fmul contract double %395, 3.474000e-05
  %399 = select i1 %396, double 0x7FF0000000000000, double %398
  %400 = select i1 %397, double 0.000000e+00, double %399
  %401 = fsub contract double %376, %400
  %402 = fadd contract double %167, 3.778000e+01
  %403 = fmul contract double %402, %401
  %404 = fadd contract double %167, 7.923000e+01
  %405 = fmul contract double %404, 3.110000e-01
  %406 = fmul double %405, 0x3FF71547652B82FE
  %407 = tail call double @llvm.rint.f64(double %406)
  %408 = fneg double %407
  %409 = tail call double @llvm.fma.f64(double %408, double 0x3FE62E42FEFA39EF, double %405)
  %410 = tail call double @llvm.fma.f64(double %408, double 0x3C7ABC9E3B39803F, double %409)
  %411 = tail call double @llvm.fma.f64(double %410, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %412 = tail call double @llvm.fma.f64(double %410, double %411, double 0x3EC71DEE623FDE64)
  %413 = tail call double @llvm.fma.f64(double %410, double %412, double 0x3EFA01997C89E6B0)
  %414 = tail call double @llvm.fma.f64(double %410, double %413, double 0x3F2A01A014761F6E)
  %415 = tail call double @llvm.fma.f64(double %410, double %414, double 0x3F56C16C1852B7B0)
  %416 = tail call double @llvm.fma.f64(double %410, double %415, double 0x3F81111111122322)
  %417 = tail call double @llvm.fma.f64(double %410, double %416, double 0x3FA55555555502A1)
  %418 = tail call double @llvm.fma.f64(double %410, double %417, double 0x3FC5555555555511)
  %419 = tail call double @llvm.fma.f64(double %410, double %418, double 0x3FE000000000000B)
  %420 = tail call double @llvm.fma.f64(double %410, double %419, double 1.000000e+00)
  %421 = tail call double @llvm.fma.f64(double %410, double %420, double 1.000000e+00)
  %422 = fptosi double %407 to i32
  %423 = tail call double @llvm.amdgcn.ldexp.f64(double %421, i32 %422)
  %424 = fcmp ogt double %405, 1.024000e+03
  %425 = fcmp olt double %405, -1.075000e+03
  %426 = fadd contract double %423, 1.000000e+00
  %427 = select i1 %424, double 0x7FF0000000000000, double %426
  %428 = select i1 %425, double 1.000000e+00, double %427
  %429 = fdiv contract double %403, %428
  %430 = fptrunc double %429 to float
  %431 = fmul contract double %167, -1.052000e-02
  %432 = fmul double %431, 0x3FF71547652B82FE
  %433 = tail call double @llvm.rint.f64(double %432)
  %434 = fneg double %433
  %435 = tail call double @llvm.fma.f64(double %434, double 0x3FE62E42FEFA39EF, double %431)
  %436 = tail call double @llvm.fma.f64(double %434, double 0x3C7ABC9E3B39803F, double %435)
  %437 = tail call double @llvm.fma.f64(double %436, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %438 = tail call double @llvm.fma.f64(double %436, double %437, double 0x3EC71DEE623FDE64)
  %439 = tail call double @llvm.fma.f64(double %436, double %438, double 0x3EFA01997C89E6B0)
  %440 = tail call double @llvm.fma.f64(double %436, double %439, double 0x3F2A01A014761F6E)
  %441 = tail call double @llvm.fma.f64(double %436, double %440, double 0x3F56C16C1852B7B0)
  %442 = tail call double @llvm.fma.f64(double %436, double %441, double 0x3F81111111122322)
  %443 = tail call double @llvm.fma.f64(double %436, double %442, double 0x3FA55555555502A1)
  %444 = tail call double @llvm.fma.f64(double %436, double %443, double 0x3FC5555555555511)
  %445 = tail call double @llvm.fma.f64(double %436, double %444, double 0x3FE000000000000B)
  %446 = tail call double @llvm.fma.f64(double %436, double %445, double 1.000000e+00)
  %447 = tail call double @llvm.fma.f64(double %436, double %446, double 1.000000e+00)
  %448 = fptosi double %433 to i32
  %449 = tail call double @llvm.amdgcn.ldexp.f64(double %447, i32 %448)
  %450 = fcmp ogt double %431, 1.024000e+03
  %451 = fcmp olt double %431, -1.075000e+03
  %452 = fmul contract double %449, 1.212000e-01
  %453 = select i1 %450, double 0x7FF0000000000000, double %452
  %454 = select i1 %451, double 0.000000e+00, double %453
  %455 = fadd contract double %167, 4.014000e+01
  %456 = fmul contract double %455, -1.378000e-01
  %457 = fmul double %456, 0x3FF71547652B82FE
  %458 = tail call double @llvm.rint.f64(double %457)
  %459 = fneg double %458
  %460 = tail call double @llvm.fma.f64(double %459, double 0x3FE62E42FEFA39EF, double %456)
  %461 = tail call double @llvm.fma.f64(double %459, double 0x3C7ABC9E3B39803F, double %460)
  br label %462

462:                                              ; preds = %276, %216
  %463 = phi double [ %461, %276 ], [ %275, %216 ]
  %464 = phi double [ %458, %276 ], [ %272, %216 ]
  %465 = phi double [ %456, %276 ], [ %270, %216 ]
  %466 = phi double [ %454, %276 ], [ %267, %216 ]
  %467 = phi float [ %430, %276 ], [ 0.000000e+00, %216 ]
  %468 = phi double [ %352, %276 ], [ %243, %216 ]
  %469 = phi float [ %303, %276 ], [ 0.000000e+00, %216 ]
  %470 = tail call double @llvm.fma.f64(double %463, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %471 = tail call double @llvm.fma.f64(double %463, double %470, double 0x3EC71DEE623FDE64)
  %472 = tail call double @llvm.fma.f64(double %463, double %471, double 0x3EFA01997C89E6B0)
  %473 = tail call double @llvm.fma.f64(double %463, double %472, double 0x3F2A01A014761F6E)
  %474 = tail call double @llvm.fma.f64(double %463, double %473, double 0x3F56C16C1852B7B0)
  %475 = tail call double @llvm.fma.f64(double %463, double %474, double 0x3F81111111122322)
  %476 = tail call double @llvm.fma.f64(double %463, double %475, double 0x3FA55555555502A1)
  %477 = tail call double @llvm.fma.f64(double %463, double %476, double 0x3FC5555555555511)
  %478 = tail call double @llvm.fma.f64(double %463, double %477, double 0x3FE000000000000B)
  %479 = tail call double @llvm.fma.f64(double %463, double %478, double 1.000000e+00)
  %480 = tail call double @llvm.fma.f64(double %463, double %479, double 1.000000e+00)
  %481 = fptosi double %464 to i32
  %482 = tail call double @llvm.amdgcn.ldexp.f64(double %480, i32 %481)
  %483 = fcmp ogt double %465, 1.024000e+03
  %484 = fcmp olt double %465, -1.075000e+03
  %485 = fadd contract double %482, 1.000000e+00
  %486 = select i1 %483, double 0x7FF0000000000000, double %485
  %487 = select i1 %484, double 1.000000e+00, double %486
  %488 = fdiv contract double %466, %487
  %489 = fptrunc double %468 to float
  %490 = fptrunc double %488 to float
  %491 = fsub contract float 1.000000e+00, %15
  %492 = fmul contract float %491, %195
  %493 = fmul contract float %15, %214
  %494 = fsub contract float %492, %493
  store float %494, float addrspace(1)* %2, align 4, !tbaa !6
  %495 = fsub contract float 1.000000e+00, %17
  %496 = fmul contract float %495, %469
  %497 = fmul contract float %17, %489
  %498 = fsub contract float %496, %497
  %499 = getelementptr inbounds float, float addrspace(1)* %2, i64 1
  store float %498, float addrspace(1)* %499, align 4, !tbaa !6
  %500 = fsub contract float 1.000000e+00, %19
  %501 = fmul contract float %500, %467
  %502 = fmul contract float %19, %490
  %503 = fsub contract float %501, %502
  %504 = getelementptr inbounds float, float addrspace(1)* %2, i64 2
  store float %503, float addrspace(1)* %504, align 4, !tbaa !6
  %505 = tail call float @llvm.fabs.f32(float %15)
  %506 = tail call float @llvm.amdgcn.frexp.mant.f32(float %505)
  %507 = fcmp olt float %506, 0x3FE5555560000000
  %508 = zext i1 %507 to i32
  %509 = tail call float @llvm.amdgcn.ldexp.f32(float %506, i32 %508)
  %510 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %505)
  %511 = sub nsw i32 %510, %508
  %512 = fadd float %509, -1.000000e+00
  %513 = fadd float %509, 1.000000e+00
  %514 = fadd float %513, -1.000000e+00
  %515 = fsub float %509, %514
  %516 = tail call float @llvm.amdgcn.rcp.f32(float %513)
  %517 = fmul float %512, %516
  %518 = fmul float %513, %517
  %519 = fneg float %518
  %520 = tail call float @llvm.fma.f32(float %517, float %513, float %519)
  %521 = tail call float @llvm.fma.f32(float %517, float %515, float %520)
  %522 = fadd float %518, %521
  %523 = fsub float %522, %518
  %524 = fsub float %521, %523
  %525 = fsub float %512, %522
  %526 = fsub float %512, %525
  %527 = fsub float %526, %522
  %528 = fsub float %527, %524
  %529 = fadd float %525, %528
  %530 = fmul float %516, %529
  %531 = fadd float %517, %530
  %532 = fsub float %531, %517
  %533 = fsub float %530, %532
  %534 = fmul float %531, %531
  %535 = fneg float %534
  %536 = tail call float @llvm.fma.f32(float %531, float %531, float %535)
  %537 = fmul float %533, 2.000000e+00
  %538 = tail call float @llvm.fma.f32(float %531, float %537, float %536)
  %539 = fadd float %534, %538
  %540 = fsub float %539, %534
  %541 = fsub float %538, %540
  %542 = tail call float @llvm.fmuladd.f32(float %539, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %543 = tail call float @llvm.fmuladd.f32(float %539, float %542, float 0x3FD999BDE0000000)
  %544 = sitofp i32 %511 to float
  %545 = fmul float %544, 0x3FE62E4300000000
  %546 = fneg float %545
  %547 = tail call float @llvm.fma.f32(float %544, float 0x3FE62E4300000000, float %546)
  %548 = tail call float @llvm.fma.f32(float %544, float 0xBE205C6100000000, float %547)
  %549 = fadd float %545, %548
  %550 = fsub float %549, %545
  %551 = fsub float %548, %550
  %552 = tail call float @llvm.amdgcn.ldexp.f32(float %531, i32 1)
  %553 = fmul float %531, %539
  %554 = fneg float %553
  %555 = tail call float @llvm.fma.f32(float %539, float %531, float %554)
  %556 = tail call float @llvm.fma.f32(float %539, float %533, float %555)
  %557 = tail call float @llvm.fma.f32(float %541, float %531, float %556)
  %558 = fadd float %553, %557
  %559 = fsub float %558, %553
  %560 = fsub float %557, %559
  %561 = fmul float %539, %543
  %562 = fneg float %561
  %563 = tail call float @llvm.fma.f32(float %539, float %543, float %562)
  %564 = tail call float @llvm.fma.f32(float %541, float %543, float %563)
  %565 = fadd float %561, %564
  %566 = fsub float %565, %561
  %567 = fsub float %564, %566
  %568 = fadd float %565, 0x3FE5555540000000
  %569 = fadd float %568, 0xBFE5555540000000
  %570 = fsub float %565, %569
  %571 = fadd float %567, 0x3E2E720200000000
  %572 = fadd float %571, %570
  %573 = fadd float %568, %572
  %574 = fsub float %573, %568
  %575 = fsub float %572, %574
  %576 = fmul float %558, %573
  %577 = fneg float %576
  %578 = tail call float @llvm.fma.f32(float %558, float %573, float %577)
  %579 = tail call float @llvm.fma.f32(float %558, float %575, float %578)
  %580 = tail call float @llvm.fma.f32(float %560, float %573, float %579)
  %581 = tail call float @llvm.amdgcn.ldexp.f32(float %533, i32 1)
  %582 = fadd float %576, %580
  %583 = fsub float %582, %576
  %584 = fsub float %580, %583
  %585 = fadd float %552, %582
  %586 = fsub float %585, %552
  %587 = fsub float %582, %586
  %588 = fadd float %581, %584
  %589 = fadd float %588, %587
  %590 = fadd float %585, %589
  %591 = fsub float %590, %585
  %592 = fsub float %589, %591
  %593 = fadd float %549, %590
  %594 = fsub float %593, %549
  %595 = fsub float %593, %594
  %596 = fsub float %549, %595
  %597 = fsub float %590, %594
  %598 = fadd float %597, %596
  %599 = fadd float %551, %592
  %600 = fsub float %599, %551
  %601 = fsub float %599, %600
  %602 = fsub float %551, %601
  %603 = fsub float %592, %600
  %604 = fadd float %603, %602
  %605 = fadd float %599, %598
  %606 = fadd float %593, %605
  %607 = fsub float %606, %593
  %608 = fsub float %605, %607
  %609 = fadd float %604, %608
  %610 = fadd float %606, %609
  %611 = fsub float %610, %606
  %612 = fsub float %609, %611
  %613 = fmul float %610, 3.000000e+00
  %614 = fneg float %613
  %615 = tail call float @llvm.fma.f32(float %610, float 3.000000e+00, float %614)
  %616 = fmul float %610, 0.000000e+00
  %617 = tail call float @llvm.fma.f32(float %612, float 3.000000e+00, float %616)
  %618 = fadd float %615, %617
  %619 = fadd float %613, %618
  %620 = fsub float %619, %613
  %621 = fsub float %618, %620
  %622 = tail call float @llvm.fabs.f32(float %613) #3
  %623 = fcmp oeq float %622, 0x7FF0000000000000
  %624 = select i1 %623, float %613, float %619
  %625 = tail call float @llvm.fabs.f32(float %624) #3
  %626 = fcmp oeq float %625, 0x7FF0000000000000
  %627 = select i1 %626, float 0.000000e+00, float %621
  %628 = fcmp oeq float %624, 0x40562E4300000000
  %629 = select i1 %628, float 0x3EE0000000000000, float 0.000000e+00
  %630 = fsub float %624, %629
  %631 = fadd float %629, %627
  %632 = fmul float %630, 0x3FF7154760000000
  %633 = tail call float @llvm.rint.f32(float %632)
  %634 = fcmp ogt float %630, 0x40562E4300000000
  %635 = fcmp olt float %630, 0xC059D1DA00000000
  %636 = fneg float %632
  %637 = tail call float @llvm.fma.f32(float %630, float 0x3FF7154760000000, float %636)
  %638 = tail call float @llvm.fma.f32(float %630, float 0x3E54AE0BE0000000, float %637)
  %639 = fsub float %632, %633
  %640 = fadd float %638, %639
  %641 = tail call float @llvm.exp2.f32(float %640)
  %642 = fptosi float %633 to i32
  %643 = tail call float @llvm.amdgcn.ldexp.f32(float %641, i32 %642)
  %644 = select i1 %635, float 0.000000e+00, float %643
  %645 = select i1 %634, float 0x7FF0000000000000, float %644
  %646 = tail call float @llvm.fma.f32(float %645, float %631, float %645)
  %647 = tail call float @llvm.fabs.f32(float %645) #3
  %648 = fcmp oeq float %647, 0x7FF0000000000000
  %649 = select i1 %648, float %645, float %646
  %650 = fcmp uge float %15, 0.000000e+00
  %651 = select i1 %650, float 0.000000e+00, float -0.000000e+00
  %652 = tail call float @llvm.copysign.f32(float %649, float %651)
  %653 = fcmp oeq float %505, 0x7FF0000000000000
  %654 = fcmp oeq float %15, 0.000000e+00
  %655 = or i1 %654, %653
  %656 = select i1 %654, float 0.000000e+00, float 0x7FF0000000000000
  %657 = tail call float @llvm.copysign.f32(float %656, float %15)
  %658 = select i1 %655, float %657, float %652
  %659 = fcmp uno float %15, 0.000000e+00
  %660 = select i1 %659, float 0x7FF8000000000000, float %658
  %661 = fmul contract float %660, 0x3FFC28F5C0000000
  %662 = fmul contract float %17, %661
  %663 = fmul contract float %19, %662
  %664 = fsub contract float %89, %106
  %665 = fmul contract float %664, %663
  %666 = fmul contract float %660, 0x402C7AE140000000
  %667 = fmul contract float %17, %666
  %668 = fmul contract float %19, %667
  %669 = fsub contract float %89, %121
  %670 = fmul contract float %669, %668
  %671 = fmul contract float %664, 0x3F0120E4A0000000
  %672 = fmul contract float %669, 0x3F3152B8A0000000
  %673 = fmul contract double %167, -1.000000e-01
  %674 = fmul contract double %673, 0x3FA32ACBC0000000
  %675 = fmul double %674, 0x3FF71547652B82FE
  %676 = tail call double @llvm.rint.f64(double %675)
  %677 = fneg double %676
  %678 = tail call double @llvm.fma.f64(double %677, double 0x3FE62E42FEFA39EF, double %674)
  %679 = tail call double @llvm.fma.f64(double %677, double 0x3C7ABC9E3B39803F, double %678)
  %680 = tail call double @llvm.fma.f64(double %679, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %681 = tail call double @llvm.fma.f64(double %679, double %680, double 0x3EC71DEE623FDE64)
  %682 = tail call double @llvm.fma.f64(double %679, double %681, double 0x3EFA01997C89E6B0)
  %683 = tail call double @llvm.fma.f64(double %679, double %682, double 0x3F2A01A014761F6E)
  %684 = tail call double @llvm.fma.f64(double %679, double %683, double 0x3F56C16C1852B7B0)
  %685 = tail call double @llvm.fma.f64(double %679, double %684, double 0x3F81111111122322)
  %686 = tail call double @llvm.fma.f64(double %679, double %685, double 0x3FA55555555502A1)
  %687 = tail call double @llvm.fma.f64(double %679, double %686, double 0x3FC5555555555511)
  %688 = tail call double @llvm.fma.f64(double %679, double %687, double 0x3FE000000000000B)
  %689 = tail call double @llvm.fma.f64(double %679, double %688, double 1.000000e+00)
  %690 = tail call double @llvm.fma.f64(double %679, double %689, double 1.000000e+00)
  %691 = fptosi double %676 to i32
  %692 = tail call double @llvm.amdgcn.ldexp.f64(double %690, i32 %691)
  %693 = fcmp ogt double %674, 1.024000e+03
  %694 = fcmp olt double %674, -1.075000e+03
  %695 = fmul contract double %692, 1.245000e-01
  %696 = fadd contract double %695, 1.000000e+00
  %697 = select i1 %693, double 0x7FF0000000000000, double %696
  %698 = select i1 %694, double 1.000000e+00, double %697
  %699 = fmul contract float %89, 0xBFA32ACBC0000000
  %700 = fmul float %699, 0x3FF7154760000000
  %701 = tail call float @llvm.rint.f32(float %700)
  %702 = fcmp ogt float %699, 0x40562E4300000000
  %703 = fcmp olt float %699, 0xC059D1DA00000000
  %704 = fneg float %700
  %705 = tail call float @llvm.fma.f32(float %699, float 0x3FF7154760000000, float %704)
  %706 = tail call float @llvm.fma.f32(float %699, float 0x3E54AE0BE0000000, float %705)
  %707 = fsub float %700, %701
  %708 = fadd float %706, %707
  %709 = tail call float @llvm.exp2.f32(float %708)
  %710 = fptosi float %701 to i32
  %711 = tail call float @llvm.amdgcn.ldexp.f32(float %709, i32 %710)
  %712 = select i1 %703, float 0.000000e+00, float %711
  %713 = select i1 %702, float 0x7FF0000000000000, float %712
  %714 = fpext float %713 to double
  %715 = fmul contract double %714, 0x3FA2B47B9FBE76C8
  %716 = fadd contract double %715, %698
  %717 = fdiv contract double 1.000000e+00, %716
  %718 = fptrunc double %717 to float
  %719 = fmul contract float %718, 0x3FCADA6DA0000000
  %720 = fmul contract float %719, 0x40159999A0000000
  %721 = fdiv contract float 1.100000e+01, %75
  %722 = tail call float @llvm.fabs.f32(float %721)
  %723 = tail call float @llvm.amdgcn.frexp.mant.f32(float %722)
  %724 = fcmp olt float %723, 0x3FE5555560000000
  %725 = zext i1 %724 to i32
  %726 = tail call float @llvm.amdgcn.ldexp.f32(float %723, i32 %725)
  %727 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %722)
  %728 = sub nsw i32 %727, %725
  %729 = fadd float %726, -1.000000e+00
  %730 = fadd float %726, 1.000000e+00
  %731 = fadd float %730, -1.000000e+00
  %732 = fsub float %726, %731
  %733 = tail call float @llvm.amdgcn.rcp.f32(float %730)
  %734 = fmul float %729, %733
  %735 = fmul float %730, %734
  %736 = fneg float %735
  %737 = tail call float @llvm.fma.f32(float %734, float %730, float %736)
  %738 = tail call float @llvm.fma.f32(float %734, float %732, float %737)
  %739 = fadd float %735, %738
  %740 = fsub float %739, %735
  %741 = fsub float %738, %740
  %742 = fsub float %729, %739
  %743 = fsub float %729, %742
  %744 = fsub float %743, %739
  %745 = fsub float %744, %741
  %746 = fadd float %742, %745
  %747 = fmul float %733, %746
  %748 = fadd float %734, %747
  %749 = fsub float %748, %734
  %750 = fsub float %747, %749
  %751 = fmul float %748, %748
  %752 = fneg float %751
  %753 = tail call float @llvm.fma.f32(float %748, float %748, float %752)
  %754 = fmul float %750, 2.000000e+00
  %755 = tail call float @llvm.fma.f32(float %748, float %754, float %753)
  %756 = fadd float %751, %755
  %757 = fsub float %756, %751
  %758 = fsub float %755, %757
  %759 = tail call float @llvm.fmuladd.f32(float %756, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %760 = tail call float @llvm.fmuladd.f32(float %756, float %759, float 0x3FD999BDE0000000)
  %761 = sitofp i32 %728 to float
  %762 = fmul float %761, 0x3FE62E4300000000
  %763 = fneg float %762
  %764 = tail call float @llvm.fma.f32(float %761, float 0x3FE62E4300000000, float %763)
  %765 = tail call float @llvm.fma.f32(float %761, float 0xBE205C6100000000, float %764)
  %766 = fadd float %762, %765
  %767 = fsub float %766, %762
  %768 = fsub float %765, %767
  %769 = tail call float @llvm.amdgcn.ldexp.f32(float %748, i32 1)
  %770 = fmul float %748, %756
  %771 = fneg float %770
  %772 = tail call float @llvm.fma.f32(float %756, float %748, float %771)
  %773 = tail call float @llvm.fma.f32(float %756, float %750, float %772)
  %774 = tail call float @llvm.fma.f32(float %758, float %748, float %773)
  %775 = fadd float %770, %774
  %776 = fsub float %775, %770
  %777 = fsub float %774, %776
  %778 = fmul float %756, %760
  %779 = fneg float %778
  %780 = tail call float @llvm.fma.f32(float %756, float %760, float %779)
  %781 = tail call float @llvm.fma.f32(float %758, float %760, float %780)
  %782 = fadd float %778, %781
  %783 = fsub float %782, %778
  %784 = fsub float %781, %783
  %785 = fadd float %782, 0x3FE5555540000000
  %786 = fadd float %785, 0xBFE5555540000000
  %787 = fsub float %782, %786
  %788 = fadd float %784, 0x3E2E720200000000
  %789 = fadd float %788, %787
  %790 = fadd float %785, %789
  %791 = fsub float %790, %785
  %792 = fsub float %789, %791
  %793 = fmul float %775, %790
  %794 = fneg float %793
  %795 = tail call float @llvm.fma.f32(float %775, float %790, float %794)
  %796 = tail call float @llvm.fma.f32(float %775, float %792, float %795)
  %797 = tail call float @llvm.fma.f32(float %777, float %790, float %796)
  %798 = tail call float @llvm.amdgcn.ldexp.f32(float %750, i32 1)
  %799 = fadd float %793, %797
  %800 = fsub float %799, %793
  %801 = fsub float %797, %800
  %802 = fadd float %769, %799
  %803 = fsub float %802, %769
  %804 = fsub float %799, %803
  %805 = fadd float %798, %801
  %806 = fadd float %805, %804
  %807 = fadd float %802, %806
  %808 = fsub float %807, %802
  %809 = fsub float %806, %808
  %810 = fadd float %766, %807
  %811 = fsub float %810, %766
  %812 = fsub float %810, %811
  %813 = fsub float %766, %812
  %814 = fsub float %807, %811
  %815 = fadd float %814, %813
  %816 = fadd float %768, %809
  %817 = fsub float %816, %768
  %818 = fsub float %816, %817
  %819 = fsub float %768, %818
  %820 = fsub float %809, %817
  %821 = fadd float %820, %819
  %822 = fadd float %816, %815
  %823 = fadd float %810, %822
  %824 = fsub float %823, %810
  %825 = fsub float %822, %824
  %826 = fadd float %821, %825
  %827 = fadd float %823, %826
  %828 = fsub float %827, %823
  %829 = fsub float %826, %828
  %830 = fmul float %827, 4.000000e+00
  %831 = fneg float %830
  %832 = tail call float @llvm.fma.f32(float %827, float 4.000000e+00, float %831)
  %833 = fmul float %827, 0.000000e+00
  %834 = tail call float @llvm.fma.f32(float %829, float 4.000000e+00, float %833)
  %835 = fadd float %832, %834
  %836 = fadd float %830, %835
  %837 = fsub float %836, %830
  %838 = fsub float %835, %837
  %839 = tail call float @llvm.fabs.f32(float %830) #3
  %840 = fcmp oeq float %839, 0x7FF0000000000000
  %841 = select i1 %840, float %830, float %836
  %842 = tail call float @llvm.fabs.f32(float %841) #3
  %843 = fcmp oeq float %842, 0x7FF0000000000000
  %844 = select i1 %843, float 0.000000e+00, float %838
  %845 = fcmp oeq float %841, 0x40562E4300000000
  %846 = select i1 %845, float 0x3EE0000000000000, float 0.000000e+00
  %847 = fsub float %841, %846
  %848 = fadd float %846, %844
  %849 = fmul float %847, 0x3FF7154760000000
  %850 = tail call float @llvm.rint.f32(float %849)
  %851 = fcmp ogt float %847, 0x40562E4300000000
  %852 = fcmp olt float %847, 0xC059D1DA00000000
  %853 = fneg float %849
  %854 = tail call float @llvm.fma.f32(float %847, float 0x3FF7154760000000, float %853)
  %855 = tail call float @llvm.fma.f32(float %847, float 0x3E54AE0BE0000000, float %854)
  %856 = fsub float %849, %850
  %857 = fadd float %855, %856
  %858 = tail call float @llvm.exp2.f32(float %857)
  %859 = fptosi float %850 to i32
  %860 = tail call float @llvm.amdgcn.ldexp.f32(float %858, i32 %859)
  %861 = select i1 %852, float 0.000000e+00, float %860
  %862 = select i1 %851, float 0x7FF0000000000000, float %861
  %863 = tail call float @llvm.fma.f32(float %862, float %848, float %862)
  %864 = tail call float @llvm.fabs.f32(float %862) #3
  %865 = fcmp oeq float %864, 0x7FF0000000000000
  %866 = select i1 %865, float %862, float %863
  %867 = tail call float @llvm.fabs.f32(float %866)
  %868 = fcmp oeq float %722, 0x7FF0000000000000
  %869 = fcmp oeq float %721, 0.000000e+00
  %870 = or i1 %869, %868
  %871 = select i1 %869, float 0.000000e+00, float 0x7FF0000000000000
  %872 = select i1 %870, float %871, float %867
  %873 = fcmp uno float %721, 0.000000e+00
  %874 = fadd contract float %872, 1.000000e+00
  %875 = select i1 %873, float 0x7FF8000000000000, float %874
  %876 = fdiv contract float %720, %875
  %877 = fdiv contract float %876, 0x401B9999A0000000
  %878 = fmul contract float %718, 0x3FFB288BE0000000
  %879 = fmul contract float %878, 0x40159999A0000000
  %880 = fdiv contract float 1.100000e+01, %77
  %881 = tail call float @llvm.fabs.f32(float %880)
  %882 = tail call float @llvm.amdgcn.frexp.mant.f32(float %881)
  %883 = fcmp olt float %882, 0x3FE5555560000000
  %884 = zext i1 %883 to i32
  %885 = tail call float @llvm.amdgcn.ldexp.f32(float %882, i32 %884)
  %886 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %881)
  %887 = sub nsw i32 %886, %884
  %888 = fadd float %885, -1.000000e+00
  %889 = fadd float %885, 1.000000e+00
  %890 = fadd float %889, -1.000000e+00
  %891 = fsub float %885, %890
  %892 = tail call float @llvm.amdgcn.rcp.f32(float %889)
  %893 = fmul float %888, %892
  %894 = fmul float %889, %893
  %895 = fneg float %894
  %896 = tail call float @llvm.fma.f32(float %893, float %889, float %895)
  %897 = tail call float @llvm.fma.f32(float %893, float %891, float %896)
  %898 = fadd float %894, %897
  %899 = fsub float %898, %894
  %900 = fsub float %897, %899
  %901 = fsub float %888, %898
  %902 = fsub float %888, %901
  %903 = fsub float %902, %898
  %904 = fsub float %903, %900
  %905 = fadd float %901, %904
  %906 = fmul float %892, %905
  %907 = fadd float %893, %906
  %908 = fsub float %907, %893
  %909 = fsub float %906, %908
  %910 = fmul float %907, %907
  %911 = fneg float %910
  %912 = tail call float @llvm.fma.f32(float %907, float %907, float %911)
  %913 = fmul float %909, 2.000000e+00
  %914 = tail call float @llvm.fma.f32(float %907, float %913, float %912)
  %915 = fadd float %910, %914
  %916 = fsub float %915, %910
  %917 = fsub float %914, %916
  %918 = tail call float @llvm.fmuladd.f32(float %915, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %919 = tail call float @llvm.fmuladd.f32(float %915, float %918, float 0x3FD999BDE0000000)
  %920 = sitofp i32 %887 to float
  %921 = fmul float %920, 0x3FE62E4300000000
  %922 = fneg float %921
  %923 = tail call float @llvm.fma.f32(float %920, float 0x3FE62E4300000000, float %922)
  %924 = tail call float @llvm.fma.f32(float %920, float 0xBE205C6100000000, float %923)
  %925 = fadd float %921, %924
  %926 = fsub float %925, %921
  %927 = fsub float %924, %926
  %928 = tail call float @llvm.amdgcn.ldexp.f32(float %907, i32 1)
  %929 = fmul float %907, %915
  %930 = fneg float %929
  %931 = tail call float @llvm.fma.f32(float %915, float %907, float %930)
  %932 = tail call float @llvm.fma.f32(float %915, float %909, float %931)
  %933 = tail call float @llvm.fma.f32(float %917, float %907, float %932)
  %934 = fadd float %929, %933
  %935 = fsub float %934, %929
  %936 = fsub float %933, %935
  %937 = fmul float %915, %919
  %938 = fneg float %937
  %939 = tail call float @llvm.fma.f32(float %915, float %919, float %938)
  %940 = tail call float @llvm.fma.f32(float %917, float %919, float %939)
  %941 = fadd float %937, %940
  %942 = fsub float %941, %937
  %943 = fsub float %940, %942
  %944 = fadd float %941, 0x3FE5555540000000
  %945 = fadd float %944, 0xBFE5555540000000
  %946 = fsub float %941, %945
  %947 = fadd float %943, 0x3E2E720200000000
  %948 = fadd float %947, %946
  %949 = fadd float %944, %948
  %950 = fsub float %949, %944
  %951 = fsub float %948, %950
  %952 = fmul float %934, %949
  %953 = fneg float %952
  %954 = tail call float @llvm.fma.f32(float %934, float %949, float %953)
  %955 = tail call float @llvm.fma.f32(float %934, float %951, float %954)
  %956 = tail call float @llvm.fma.f32(float %936, float %949, float %955)
  %957 = tail call float @llvm.amdgcn.ldexp.f32(float %909, i32 1)
  %958 = fadd float %952, %956
  %959 = fsub float %958, %952
  %960 = fsub float %956, %959
  %961 = fadd float %928, %958
  %962 = fsub float %961, %928
  %963 = fsub float %958, %962
  %964 = fadd float %957, %960
  %965 = fadd float %964, %963
  %966 = fadd float %961, %965
  %967 = fsub float %966, %961
  %968 = fsub float %965, %967
  %969 = fadd float %925, %966
  %970 = fsub float %969, %925
  %971 = fsub float %969, %970
  %972 = fsub float %925, %971
  %973 = fsub float %966, %970
  %974 = fadd float %973, %972
  %975 = fadd float %927, %968
  %976 = fsub float %975, %927
  %977 = fsub float %975, %976
  %978 = fsub float %927, %977
  %979 = fsub float %968, %976
  %980 = fadd float %979, %978
  %981 = fadd float %975, %974
  %982 = fadd float %969, %981
  %983 = fsub float %982, %969
  %984 = fsub float %981, %983
  %985 = fadd float %980, %984
  %986 = fadd float %982, %985
  %987 = fsub float %986, %982
  %988 = fsub float %985, %987
  %989 = fmul float %986, 4.000000e+00
  %990 = fneg float %989
  %991 = tail call float @llvm.fma.f32(float %986, float 4.000000e+00, float %990)
  %992 = fmul float %986, 0.000000e+00
  %993 = tail call float @llvm.fma.f32(float %988, float 4.000000e+00, float %992)
  %994 = fadd float %991, %993
  %995 = fadd float %989, %994
  %996 = fsub float %995, %989
  %997 = fsub float %994, %996
  %998 = tail call float @llvm.fabs.f32(float %989) #3
  %999 = fcmp oeq float %998, 0x7FF0000000000000
  %1000 = select i1 %999, float %989, float %995
  %1001 = tail call float @llvm.fabs.f32(float %1000) #3
  %1002 = fcmp oeq float %1001, 0x7FF0000000000000
  %1003 = select i1 %1002, float 0.000000e+00, float %997
  %1004 = fcmp oeq float %1000, 0x40562E4300000000
  %1005 = select i1 %1004, float 0x3EE0000000000000, float 0.000000e+00
  %1006 = fsub float %1000, %1005
  %1007 = fadd float %1005, %1003
  %1008 = fmul float %1006, 0x3FF7154760000000
  %1009 = tail call float @llvm.rint.f32(float %1008)
  %1010 = fcmp ogt float %1006, 0x40562E4300000000
  %1011 = fcmp olt float %1006, 0xC059D1DA00000000
  %1012 = fneg float %1008
  %1013 = tail call float @llvm.fma.f32(float %1006, float 0x3FF7154760000000, float %1012)
  %1014 = tail call float @llvm.fma.f32(float %1006, float 0x3E54AE0BE0000000, float %1013)
  %1015 = fsub float %1008, %1009
  %1016 = fadd float %1014, %1015
  %1017 = tail call float @llvm.exp2.f32(float %1016)
  %1018 = fptosi float %1009 to i32
  %1019 = tail call float @llvm.amdgcn.ldexp.f32(float %1017, i32 %1018)
  %1020 = select i1 %1011, float 0.000000e+00, float %1019
  %1021 = select i1 %1010, float 0x7FF0000000000000, float %1020
  %1022 = tail call float @llvm.fma.f32(float %1021, float %1007, float %1021)
  %1023 = tail call float @llvm.fabs.f32(float %1021) #3
  %1024 = fcmp oeq float %1023, 0x7FF0000000000000
  %1025 = select i1 %1024, float %1021, float %1022
  %1026 = tail call float @llvm.fabs.f32(float %1025)
  %1027 = fcmp oeq float %881, 0x7FF0000000000000
  %1028 = fcmp oeq float %880, 0.000000e+00
  %1029 = or i1 %1028, %1027
  %1030 = select i1 %1028, float 0.000000e+00, float 0x7FF0000000000000
  %1031 = select i1 %1029, float %1030, float %1026
  %1032 = fcmp uno float %880, 0.000000e+00
  %1033 = fadd contract float %1031, 1.000000e+00
  %1034 = select i1 %1032, float 0x7FF8000000000000, float %1033
  %1035 = fdiv contract float %879, %1034
  %1036 = fdiv contract float %1035, 0x401B9999A0000000
  %1037 = tail call double @llvm.amdgcn.rsq.f64(double 0x3FF0000004BDA12F)
  %1038 = fmul double %1037, 0x3FF0000004BDA12F
  %1039 = fmul double %1037, 5.000000e-01
  %1040 = fneg double %1039
  %1041 = tail call double @llvm.fma.f64(double %1040, double %1038, double 5.000000e-01)
  %1042 = tail call double @llvm.fma.f64(double %1039, double %1041, double %1039)
  %1043 = tail call double @llvm.fma.f64(double %1038, double %1041, double %1038)
  %1044 = fneg double %1043
  %1045 = tail call double @llvm.fma.f64(double %1044, double %1043, double 0x3FF0000004BDA12F)
  %1046 = tail call double @llvm.fma.f64(double %1045, double %1042, double %1043)
  %1047 = fneg double %1046
  %1048 = tail call double @llvm.fma.f64(double %1047, double %1046, double 0x3FF0000004BDA12F)
  %1049 = tail call double @llvm.fma.f64(double %1048, double %1042, double %1046)
  %1050 = fadd contract float %89, 5.000000e+01
  %1051 = fneg contract float %1050
  %1052 = fpext float %1051 to double
  %1053 = fdiv contract double %1052, 7.500000e+00
  %1054 = fmul double %1053, 0x3FF71547652B82FE
  %1055 = tail call double @llvm.rint.f64(double %1054)
  %1056 = fneg double %1055
  %1057 = tail call double @llvm.fma.f64(double %1056, double 0x3FE62E42FEFA39EF, double %1053)
  %1058 = tail call double @llvm.fma.f64(double %1056, double 0x3C7ABC9E3B39803F, double %1057)
  %1059 = tail call double @llvm.fma.f64(double %1058, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1060 = tail call double @llvm.fma.f64(double %1058, double %1059, double 0x3EC71DEE623FDE64)
  %1061 = tail call double @llvm.fma.f64(double %1058, double %1060, double 0x3EFA01997C89E6B0)
  %1062 = tail call double @llvm.fma.f64(double %1058, double %1061, double 0x3F2A01A014761F6E)
  %1063 = tail call double @llvm.fma.f64(double %1058, double %1062, double 0x3F56C16C1852B7B0)
  %1064 = tail call double @llvm.fma.f64(double %1058, double %1063, double 0x3F81111111122322)
  %1065 = tail call double @llvm.fma.f64(double %1058, double %1064, double 0x3FA55555555502A1)
  %1066 = tail call double @llvm.fma.f64(double %1058, double %1065, double 0x3FC5555555555511)
  %1067 = tail call double @llvm.fma.f64(double %1058, double %1066, double 0x3FE000000000000B)
  %1068 = tail call double @llvm.fma.f64(double %1058, double %1067, double 1.000000e+00)
  %1069 = tail call double @llvm.fma.f64(double %1058, double %1068, double 1.000000e+00)
  %1070 = fptosi double %1055 to i32
  %1071 = tail call double @llvm.amdgcn.ldexp.f64(double %1069, i32 %1070)
  %1072 = fcmp ogt double %1053, 1.024000e+03
  %1073 = fcmp olt double %1053, -1.075000e+03
  %1074 = fadd contract double %1071, 1.000000e+00
  %1075 = fdiv contract double 1.000000e+00, %1074
  %1076 = select i1 %1072, double 0.000000e+00, double %1075
  %1077 = select i1 %1073, double 1.000000e+00, double %1076
  %1078 = fptrunc double %1077 to float
  %1079 = fadd contract float %89, 7.000000e+00
  %1080 = fpext float %1079 to double
  %1081 = fmul contract double %1080, 1.380000e-03
  %1082 = fmul contract double %1080, -1.230000e-01
  %1083 = fmul double %1082, 0x3FF71547652B82FE
  %1084 = tail call double @llvm.rint.f64(double %1083)
  %1085 = fneg double %1084
  %1086 = tail call double @llvm.fma.f64(double %1085, double 0x3FE62E42FEFA39EF, double %1082)
  %1087 = tail call double @llvm.fma.f64(double %1085, double 0x3C7ABC9E3B39803F, double %1086)
  %1088 = tail call double @llvm.fma.f64(double %1087, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1089 = tail call double @llvm.fma.f64(double %1087, double %1088, double 0x3EC71DEE623FDE64)
  %1090 = tail call double @llvm.fma.f64(double %1087, double %1089, double 0x3EFA01997C89E6B0)
  %1091 = tail call double @llvm.fma.f64(double %1087, double %1090, double 0x3F2A01A014761F6E)
  %1092 = tail call double @llvm.fma.f64(double %1087, double %1091, double 0x3F56C16C1852B7B0)
  %1093 = tail call double @llvm.fma.f64(double %1087, double %1092, double 0x3F81111111122322)
  %1094 = tail call double @llvm.fma.f64(double %1087, double %1093, double 0x3FA55555555502A1)
  %1095 = tail call double @llvm.fma.f64(double %1087, double %1094, double 0x3FC5555555555511)
  %1096 = tail call double @llvm.fma.f64(double %1087, double %1095, double 0x3FE000000000000B)
  %1097 = tail call double @llvm.fma.f64(double %1087, double %1096, double 1.000000e+00)
  %1098 = tail call double @llvm.fma.f64(double %1087, double %1097, double 1.000000e+00)
  %1099 = fptosi double %1084 to i32
  %1100 = tail call double @llvm.amdgcn.ldexp.f64(double %1098, i32 %1099)
  %1101 = fcmp ogt double %1082, 1.024000e+03
  %1102 = fcmp olt double %1082, -1.075000e+03
  %1103 = fsub contract double 1.000000e+00, %1100
  %1104 = select i1 %1101, double 0xFFF0000000000000, double %1103
  %1105 = select i1 %1102, double 1.000000e+00, double %1104
  %1106 = fdiv contract double %1081, %1105
  %1107 = fadd contract float %89, 1.000000e+01
  %1108 = fpext float %1107 to double
  %1109 = fmul contract double %1108, 6.100000e-04
  %1110 = fmul contract double %1108, 1.450000e-01
  %1111 = fmul double %1110, 0x3FF71547652B82FE
  %1112 = tail call double @llvm.rint.f64(double %1111)
  %1113 = fneg double %1112
  %1114 = tail call double @llvm.fma.f64(double %1113, double 0x3FE62E42FEFA39EF, double %1110)
  %1115 = tail call double @llvm.fma.f64(double %1113, double 0x3C7ABC9E3B39803F, double %1114)
  %1116 = tail call double @llvm.fma.f64(double %1115, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1117 = tail call double @llvm.fma.f64(double %1115, double %1116, double 0x3EC71DEE623FDE64)
  %1118 = tail call double @llvm.fma.f64(double %1115, double %1117, double 0x3EFA01997C89E6B0)
  %1119 = tail call double @llvm.fma.f64(double %1115, double %1118, double 0x3F2A01A014761F6E)
  %1120 = tail call double @llvm.fma.f64(double %1115, double %1119, double 0x3F56C16C1852B7B0)
  %1121 = tail call double @llvm.fma.f64(double %1115, double %1120, double 0x3F81111111122322)
  %1122 = tail call double @llvm.fma.f64(double %1115, double %1121, double 0x3FA55555555502A1)
  %1123 = tail call double @llvm.fma.f64(double %1115, double %1122, double 0x3FC5555555555511)
  %1124 = tail call double @llvm.fma.f64(double %1115, double %1123, double 0x3FE000000000000B)
  %1125 = tail call double @llvm.fma.f64(double %1115, double %1124, double 1.000000e+00)
  %1126 = tail call double @llvm.fma.f64(double %1115, double %1125, double 1.000000e+00)
  %1127 = fptosi double %1112 to i32
  %1128 = tail call double @llvm.amdgcn.ldexp.f64(double %1126, i32 %1127)
  %1129 = fcmp ogt double %1110, 1.024000e+03
  %1130 = fcmp olt double %1110, -1.075000e+03
  %1131 = fadd contract double %1128, -1.000000e+00
  %1132 = select i1 %1129, double 0x7FF0000000000000, double %1131
  %1133 = select i1 %1130, double -1.000000e+00, double %1132
  %1134 = fdiv contract double %1109, %1133
  %1135 = fadd contract double %1106, %1134
  %1136 = fdiv contract double 1.000000e+00, %1135
  %1137 = fptrunc double %1136 to float
  %1138 = fsub contract float %1078, %37
  %1139 = fdiv contract float %1138, %1137
  %1140 = getelementptr inbounds float, float addrspace(1)* %2, i64 11
  store float %1139, float addrspace(1)* %1140, align 4, !tbaa !6
  %1141 = fadd contract float %89, 3.300000e+01
  %1142 = fpext float %1141 to double
  %1143 = fdiv contract double %1142, 2.240000e+01
  %1144 = fmul double %1143, 0x3FF71547652B82FE
  %1145 = tail call double @llvm.rint.f64(double %1144)
  %1146 = fneg double %1145
  %1147 = tail call double @llvm.fma.f64(double %1146, double 0x3FE62E42FEFA39EF, double %1143)
  %1148 = tail call double @llvm.fma.f64(double %1146, double 0x3C7ABC9E3B39803F, double %1147)
  %1149 = fsub contract float %89, %136
  %1150 = tail call i1 @llvm.amdgcn.class.f32(float %83, i32 144)
  %1151 = select i1 %1150, float 0x41F0000000000000, float 1.000000e+00
  %1152 = fmul float %83, %1151
  %1153 = tail call float @llvm.log2.f32(float %1152)
  %1154 = fmul float %1153, 0x3FD3441340000000
  %1155 = tail call i1 @llvm.amdgcn.class.f32(float %1153, i32 519)
  %1156 = fneg float %1154
  %1157 = tail call float @llvm.fma.f32(float %1153, float 0x3FD3441340000000, float %1156)
  %1158 = tail call float @llvm.fma.f32(float %1153, float 0x3E509F79E0000000, float %1157)
  %1159 = fadd float %1154, %1158
  %1160 = select i1 %1155, float %1153, float %1159
  %1161 = select i1 %1150, float 0x4023441360000000, float 0.000000e+00
  %1162 = fsub contract float %1161, %1160
  %1163 = fadd contract float %1162, 3.000000e+00
  %1164 = tail call i1 @llvm.amdgcn.class.f32(float %85, i32 144)
  %1165 = select i1 %1164, float 0x41F0000000000000, float 1.000000e+00
  %1166 = fmul float %85, %1165
  %1167 = tail call float @llvm.log2.f32(float %1166)
  %1168 = fmul float %1167, 0x3FD3441340000000
  %1169 = tail call i1 @llvm.amdgcn.class.f32(float %1167, i32 519)
  %1170 = fneg float %1168
  %1171 = tail call float @llvm.fma.f32(float %1167, float 0x3FD3441340000000, float %1170)
  %1172 = tail call float @llvm.fma.f32(float %1167, float 0x3E509F79E0000000, float %1171)
  %1173 = fadd float %1168, %1172
  %1174 = select i1 %1169, float %1167, float %1173
  %1175 = select i1 %1164, float 0x4023441360000000, float 0.000000e+00
  %1176 = fsub contract float %1175, %1174
  %1177 = fadd contract float %1176, 3.000000e+00
  %1178 = fpext float %1163 to double
  %1179 = fadd contract double %1178, -7.200000e+00
  %1180 = fdiv contract double %1179, 6.000000e-01
  %1181 = fmul double %1180, 0x3FF71547652B82FE
  %1182 = tail call double @llvm.rint.f64(double %1181)
  %1183 = fneg double %1182
  %1184 = tail call double @llvm.fma.f64(double %1183, double 0x3FE62E42FEFA39EF, double %1180)
  %1185 = tail call double @llvm.fma.f64(double %1183, double 0x3C7ABC9E3B39803F, double %1184)
  %1186 = fpext float %1177 to double
  %1187 = fadd contract double %1186, -7.200000e+00
  %1188 = fdiv contract double %1187, 6.000000e-01
  %1189 = fmul double %1188, 0x3FF71547652B82FE
  %1190 = tail call double @llvm.rint.f64(double %1189)
  %1191 = fneg double %1190
  %1192 = tail call double @llvm.fma.f64(double %1191, double 0x3FE62E42FEFA39EF, double %1188)
  %1193 = tail call double @llvm.fma.f64(double %1191, double 0x3C7ABC9E3B39803F, double %1192)
  %1194 = fmul contract float %79, 0x3F92C51980000000
  %1195 = fadd contract float %81, %1194
  %1196 = fdiv contract float 0x401FDD6380000000, %1195
  %1197 = tail call i1 @llvm.amdgcn.class.f32(float %1196, i32 144)
  %1198 = select i1 %1197, float 0x41F0000000000000, float 1.000000e+00
  %1199 = fmul float %1196, %1198
  %1200 = tail call float @llvm.log2.f32(float %1199)
  %1201 = fmul float %1200, 0x3FE62E42E0000000
  %1202 = tail call i1 @llvm.amdgcn.class.f32(float %1200, i32 519)
  %1203 = fneg float %1201
  %1204 = tail call float @llvm.fma.f32(float %1200, float 0x3FE62E42E0000000, float %1203)
  %1205 = tail call float @llvm.fma.f32(float %1200, float 0x3E6EFA39E0000000, float %1204)
  %1206 = fadd float %1201, %1205
  %1207 = select i1 %1202, float %1200, float %1206
  %1208 = select i1 %1197, float 0x40362E4300000000, float 0.000000e+00
  %1209 = fsub float %1207, %1208
  %1210 = fmul contract float %1209, 0x403AB65BE0000000
  %1211 = fadd contract double %167, -1.500000e+00
  %1212 = fdiv contract double %1211, -1.670000e+01
  %1213 = fmul double %1212, 0x3FF71547652B82FE
  %1214 = tail call double @llvm.rint.f64(double %1213)
  %1215 = fneg double %1214
  %1216 = tail call double @llvm.fma.f64(double %1215, double 0x3FE62E42FEFA39EF, double %1212)
  %1217 = tail call double @llvm.fma.f64(double %1215, double 0x3C7ABC9E3B39803F, double %1216)
  %1218 = tail call double @llvm.fma.f64(double %1217, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1219 = tail call double @llvm.fma.f64(double %1217, double %1218, double 0x3EC71DEE623FDE64)
  %1220 = tail call double @llvm.fma.f64(double %1217, double %1219, double 0x3EFA01997C89E6B0)
  %1221 = tail call double @llvm.fma.f64(double %1217, double %1220, double 0x3F2A01A014761F6E)
  %1222 = tail call double @llvm.fma.f64(double %1217, double %1221, double 0x3F56C16C1852B7B0)
  %1223 = tail call double @llvm.fma.f64(double %1217, double %1222, double 0x3F81111111122322)
  %1224 = tail call double @llvm.fma.f64(double %1217, double %1223, double 0x3FA55555555502A1)
  %1225 = tail call double @llvm.fma.f64(double %1217, double %1224, double 0x3FC5555555555511)
  %1226 = tail call double @llvm.fma.f64(double %1217, double %1225, double 0x3FE000000000000B)
  %1227 = tail call double @llvm.fma.f64(double %1217, double %1226, double 1.000000e+00)
  %1228 = tail call double @llvm.fma.f64(double %1217, double %1227, double 1.000000e+00)
  %1229 = fptosi double %1214 to i32
  %1230 = tail call double @llvm.amdgcn.ldexp.f64(double %1228, i32 %1229)
  %1231 = fcmp ogt double %1212, 1.024000e+03
  %1232 = fcmp olt double %1212, -1.075000e+03
  %1233 = fadd contract double %1230, 1.000000e+00
  %1234 = fdiv contract double 1.000000e+00, %1233
  %1235 = select i1 %1231, double 0.000000e+00, double %1234
  %1236 = select i1 %1232, double 1.000000e+00, double %1235
  %1237 = fptrunc double %1236 to float
  %1238 = fadd contract float %89, 3.000000e+01
  %1239 = fpext float %1238 to double
  %1240 = fmul contract double %1239, 7.190000e-05
  %1241 = fmul contract double %1239, -1.480000e-01
  %1242 = fmul double %1241, 0x3FF71547652B82FE
  %1243 = tail call double @llvm.rint.f64(double %1242)
  %1244 = fneg double %1243
  %1245 = tail call double @llvm.fma.f64(double %1244, double 0x3FE62E42FEFA39EF, double %1241)
  %1246 = tail call double @llvm.fma.f64(double %1244, double 0x3C7ABC9E3B39803F, double %1245)
  %1247 = tail call double @llvm.fma.f64(double %1246, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1248 = tail call double @llvm.fma.f64(double %1246, double %1247, double 0x3EC71DEE623FDE64)
  %1249 = tail call double @llvm.fma.f64(double %1246, double %1248, double 0x3EFA01997C89E6B0)
  %1250 = tail call double @llvm.fma.f64(double %1246, double %1249, double 0x3F2A01A014761F6E)
  %1251 = tail call double @llvm.fma.f64(double %1246, double %1250, double 0x3F56C16C1852B7B0)
  %1252 = tail call double @llvm.fma.f64(double %1246, double %1251, double 0x3F81111111122322)
  %1253 = tail call double @llvm.fma.f64(double %1246, double %1252, double 0x3FA55555555502A1)
  %1254 = tail call double @llvm.fma.f64(double %1246, double %1253, double 0x3FC5555555555511)
  %1255 = tail call double @llvm.fma.f64(double %1246, double %1254, double 0x3FE000000000000B)
  %1256 = tail call double @llvm.fma.f64(double %1246, double %1255, double 1.000000e+00)
  %1257 = tail call double @llvm.fma.f64(double %1246, double %1256, double 1.000000e+00)
  %1258 = fptosi double %1243 to i32
  %1259 = tail call double @llvm.amdgcn.ldexp.f64(double %1257, i32 %1258)
  %1260 = fcmp ogt double %1241, 1.024000e+03
  %1261 = fcmp olt double %1241, -1.075000e+03
  %1262 = fsub contract double 1.000000e+00, %1259
  %1263 = select i1 %1260, double 0xFFF0000000000000, double %1262
  %1264 = select i1 %1261, double 1.000000e+00, double %1263
  %1265 = fdiv contract double %1240, %1264
  %1266 = fmul contract double %1239, 1.310000e-04
  %1267 = fmul contract double %1239, 0x3FB19652BD3C3611
  %1268 = fmul double %1267, 0x3FF71547652B82FE
  %1269 = tail call double @llvm.rint.f64(double %1268)
  %1270 = fneg double %1269
  %1271 = tail call double @llvm.fma.f64(double %1270, double 0x3FE62E42FEFA39EF, double %1267)
  %1272 = tail call double @llvm.fma.f64(double %1270, double 0x3C7ABC9E3B39803F, double %1271)
  %1273 = tail call double @llvm.fma.f64(double %1272, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1274 = tail call double @llvm.fma.f64(double %1272, double %1273, double 0x3EC71DEE623FDE64)
  %1275 = tail call double @llvm.fma.f64(double %1272, double %1274, double 0x3EFA01997C89E6B0)
  %1276 = tail call double @llvm.fma.f64(double %1272, double %1275, double 0x3F2A01A014761F6E)
  %1277 = tail call double @llvm.fma.f64(double %1272, double %1276, double 0x3F56C16C1852B7B0)
  %1278 = tail call double @llvm.fma.f64(double %1272, double %1277, double 0x3F81111111122322)
  %1279 = tail call double @llvm.fma.f64(double %1272, double %1278, double 0x3FA55555555502A1)
  %1280 = tail call double @llvm.fma.f64(double %1272, double %1279, double 0x3FC5555555555511)
  %1281 = tail call double @llvm.fma.f64(double %1272, double %1280, double 0x3FE000000000000B)
  %1282 = tail call double @llvm.fma.f64(double %1272, double %1281, double 1.000000e+00)
  %1283 = tail call double @llvm.fma.f64(double %1272, double %1282, double 1.000000e+00)
  %1284 = fptosi double %1269 to i32
  %1285 = tail call double @llvm.amdgcn.ldexp.f64(double %1283, i32 %1284)
  %1286 = fcmp ogt double %1267, 1.024000e+03
  %1287 = fcmp olt double %1267, -1.075000e+03
  %1288 = fadd contract double %1285, -1.000000e+00
  %1289 = select i1 %1286, double 0x7FF0000000000000, double %1288
  %1290 = select i1 %1287, double -1.000000e+00, double %1289
  %1291 = fdiv contract double %1266, %1290
  %1292 = fadd contract double %1265, %1291
  %1293 = fdiv contract double 1.000000e+00, %1292
  %1294 = fptrunc double %1293 to float
  %1295 = fsub contract float %1237, %39
  %1296 = fdiv contract float %1295, %1294
  %1297 = getelementptr inbounds float, float addrspace(1)* %2, i64 12
  store float %1296, float addrspace(1)* %1297, align 4, !tbaa !6
  %1298 = tail call float @llvm.fabs.f32(float %37)
  %1299 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1298)
  %1300 = fcmp olt float %1299, 0x3FE5555560000000
  %1301 = zext i1 %1300 to i32
  %1302 = tail call float @llvm.amdgcn.ldexp.f32(float %1299, i32 %1301)
  %1303 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1298)
  %1304 = sub nsw i32 %1303, %1301
  %1305 = fadd float %1302, -1.000000e+00
  %1306 = fadd float %1302, 1.000000e+00
  %1307 = fadd float %1306, -1.000000e+00
  %1308 = fsub float %1302, %1307
  %1309 = tail call float @llvm.amdgcn.rcp.f32(float %1306)
  %1310 = fmul float %1305, %1309
  %1311 = fmul float %1306, %1310
  %1312 = fneg float %1311
  %1313 = tail call float @llvm.fma.f32(float %1310, float %1306, float %1312)
  %1314 = tail call float @llvm.fma.f32(float %1310, float %1308, float %1313)
  %1315 = fadd float %1311, %1314
  %1316 = fsub float %1315, %1311
  %1317 = fsub float %1314, %1316
  %1318 = fsub float %1305, %1315
  %1319 = fsub float %1305, %1318
  %1320 = fsub float %1319, %1315
  %1321 = fsub float %1320, %1317
  %1322 = fadd float %1318, %1321
  %1323 = fmul float %1309, %1322
  %1324 = fadd float %1310, %1323
  %1325 = fsub float %1324, %1310
  %1326 = fsub float %1323, %1325
  %1327 = fmul float %1324, %1324
  %1328 = fneg float %1327
  %1329 = tail call float @llvm.fma.f32(float %1324, float %1324, float %1328)
  %1330 = fmul float %1326, 2.000000e+00
  %1331 = tail call float @llvm.fma.f32(float %1324, float %1330, float %1329)
  %1332 = fadd float %1327, %1331
  %1333 = fsub float %1332, %1327
  %1334 = fsub float %1331, %1333
  %1335 = tail call float @llvm.fmuladd.f32(float %1332, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1336 = tail call float @llvm.fmuladd.f32(float %1332, float %1335, float 0x3FD999BDE0000000)
  %1337 = sitofp i32 %1304 to float
  %1338 = fmul float %1337, 0x3FE62E4300000000
  %1339 = fneg float %1338
  %1340 = tail call float @llvm.fma.f32(float %1337, float 0x3FE62E4300000000, float %1339)
  %1341 = tail call float @llvm.fma.f32(float %1337, float 0xBE205C6100000000, float %1340)
  %1342 = fadd float %1338, %1341
  %1343 = fsub float %1342, %1338
  %1344 = fsub float %1341, %1343
  %1345 = tail call float @llvm.amdgcn.ldexp.f32(float %1324, i32 1)
  %1346 = fmul float %1324, %1332
  %1347 = fneg float %1346
  %1348 = tail call float @llvm.fma.f32(float %1332, float %1324, float %1347)
  %1349 = tail call float @llvm.fma.f32(float %1332, float %1326, float %1348)
  %1350 = tail call float @llvm.fma.f32(float %1334, float %1324, float %1349)
  %1351 = fadd float %1346, %1350
  %1352 = fsub float %1351, %1346
  %1353 = fsub float %1350, %1352
  %1354 = fmul float %1332, %1336
  %1355 = fneg float %1354
  %1356 = tail call float @llvm.fma.f32(float %1332, float %1336, float %1355)
  %1357 = tail call float @llvm.fma.f32(float %1334, float %1336, float %1356)
  %1358 = fadd float %1354, %1357
  %1359 = fsub float %1358, %1354
  %1360 = fsub float %1357, %1359
  %1361 = fadd float %1358, 0x3FE5555540000000
  %1362 = fadd float %1361, 0xBFE5555540000000
  %1363 = fsub float %1358, %1362
  %1364 = fadd float %1360, 0x3E2E720200000000
  %1365 = fadd float %1364, %1363
  %1366 = fadd float %1361, %1365
  %1367 = fsub float %1366, %1361
  %1368 = fsub float %1365, %1367
  %1369 = fmul float %1351, %1366
  %1370 = fneg float %1369
  %1371 = tail call float @llvm.fma.f32(float %1351, float %1366, float %1370)
  %1372 = tail call float @llvm.fma.f32(float %1351, float %1368, float %1371)
  %1373 = tail call float @llvm.fma.f32(float %1353, float %1366, float %1372)
  %1374 = tail call float @llvm.amdgcn.ldexp.f32(float %1326, i32 1)
  %1375 = fadd float %1369, %1373
  %1376 = fsub float %1375, %1369
  %1377 = fsub float %1373, %1376
  %1378 = fadd float %1345, %1375
  %1379 = fsub float %1378, %1345
  %1380 = fsub float %1375, %1379
  %1381 = fadd float %1374, %1377
  %1382 = fadd float %1381, %1380
  %1383 = fadd float %1378, %1382
  %1384 = fsub float %1383, %1378
  %1385 = fsub float %1382, %1384
  %1386 = fadd float %1342, %1383
  %1387 = fsub float %1386, %1342
  %1388 = fsub float %1386, %1387
  %1389 = fsub float %1342, %1388
  %1390 = fsub float %1383, %1387
  %1391 = fadd float %1390, %1389
  %1392 = fadd float %1344, %1385
  %1393 = fsub float %1392, %1344
  %1394 = fsub float %1392, %1393
  %1395 = fsub float %1344, %1394
  %1396 = fsub float %1385, %1393
  %1397 = fadd float %1396, %1395
  %1398 = fadd float %1392, %1391
  %1399 = fadd float %1386, %1398
  %1400 = fsub float %1399, %1386
  %1401 = fsub float %1398, %1400
  %1402 = fadd float %1397, %1401
  %1403 = fadd float %1399, %1402
  %1404 = fsub float %1403, %1399
  %1405 = fsub float %1402, %1404
  %1406 = fmul float %1403, 2.000000e+00
  %1407 = fneg float %1406
  %1408 = tail call float @llvm.fma.f32(float %1403, float 2.000000e+00, float %1407)
  %1409 = fmul float %1403, 0.000000e+00
  %1410 = tail call float @llvm.fma.f32(float %1405, float 2.000000e+00, float %1409)
  %1411 = fadd float %1408, %1410
  %1412 = fadd float %1406, %1411
  %1413 = tail call float @llvm.fabs.f32(float %1406) #3
  %1414 = fcmp oeq float %1413, 0x7FF0000000000000
  %1415 = select i1 %1414, float %1406, float %1412
  %1416 = fcmp oeq float %1415, 0x40562E4300000000
  %1417 = select i1 %1416, float 0x3EE0000000000000, float 0.000000e+00
  %1418 = fsub float %1415, %1417
  %1419 = fmul float %1418, 0x3FF7154760000000
  %1420 = tail call float @llvm.rint.f32(float %1419)
  %1421 = fcmp ogt float %1418, 0x40562E4300000000
  %1422 = fcmp olt float %1418, 0xC059D1DA00000000
  %1423 = fneg float %1419
  %1424 = tail call float @llvm.fma.f32(float %1418, float 0x3FF7154760000000, float %1423)
  %1425 = tail call float @llvm.fma.f32(float %1418, float 0x3E54AE0BE0000000, float %1424)
  %1426 = fsub float %1419, %1420
  %1427 = fadd float %1425, %1426
  %1428 = tail call float @llvm.exp2.f32(float %1427)
  %1429 = fptosi float %1420 to i32
  %1430 = tail call float @llvm.amdgcn.ldexp.f32(float %1428, i32 %1429)
  %1431 = select i1 %1422, float 0.000000e+00, float %1430
  %1432 = select i1 %1421, float 0x7FF0000000000000, float %1431
  %1433 = fcmp oeq float %37, 0.000000e+00
  %1434 = fsub contract float %89, %1210
  %1435 = tail call float @llvm.fabs.f32(float %39)
  %1436 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1435)
  %1437 = fcmp olt float %1436, 0x3FE5555560000000
  %1438 = zext i1 %1437 to i32
  %1439 = tail call float @llvm.amdgcn.ldexp.f32(float %1436, i32 %1438)
  %1440 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1435)
  %1441 = sub nsw i32 %1440, %1438
  %1442 = fadd float %1439, -1.000000e+00
  %1443 = fadd float %1439, 1.000000e+00
  %1444 = fadd float %1443, -1.000000e+00
  %1445 = fsub float %1439, %1444
  %1446 = tail call float @llvm.amdgcn.rcp.f32(float %1443)
  %1447 = fmul float %1442, %1446
  %1448 = fmul float %1443, %1447
  %1449 = fneg float %1448
  %1450 = tail call float @llvm.fma.f32(float %1447, float %1443, float %1449)
  %1451 = tail call float @llvm.fma.f32(float %1447, float %1445, float %1450)
  %1452 = fadd float %1448, %1451
  %1453 = fsub float %1452, %1448
  %1454 = fsub float %1451, %1453
  %1455 = fsub float %1442, %1452
  %1456 = fsub float %1442, %1455
  %1457 = fsub float %1456, %1452
  %1458 = fsub float %1457, %1454
  %1459 = fadd float %1455, %1458
  %1460 = fmul float %1446, %1459
  %1461 = fadd float %1447, %1460
  %1462 = fsub float %1461, %1447
  %1463 = fsub float %1460, %1462
  %1464 = fmul float %1461, %1461
  %1465 = fneg float %1464
  %1466 = tail call float @llvm.fma.f32(float %1461, float %1461, float %1465)
  %1467 = fmul float %1463, 2.000000e+00
  %1468 = tail call float @llvm.fma.f32(float %1461, float %1467, float %1466)
  %1469 = fadd float %1464, %1468
  %1470 = fsub float %1469, %1464
  %1471 = fsub float %1468, %1470
  %1472 = tail call float @llvm.fmuladd.f32(float %1469, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1473 = tail call float @llvm.fmuladd.f32(float %1469, float %1472, float 0x3FD999BDE0000000)
  %1474 = sitofp i32 %1441 to float
  %1475 = fmul float %1474, 0x3FE62E4300000000
  %1476 = fneg float %1475
  %1477 = tail call float @llvm.fma.f32(float %1474, float 0x3FE62E4300000000, float %1476)
  %1478 = tail call float @llvm.fma.f32(float %1474, float 0xBE205C6100000000, float %1477)
  %1479 = fadd float %1475, %1478
  %1480 = fsub float %1479, %1475
  %1481 = fsub float %1478, %1480
  %1482 = tail call float @llvm.amdgcn.ldexp.f32(float %1461, i32 1)
  %1483 = fmul float %1461, %1469
  %1484 = fneg float %1483
  %1485 = tail call float @llvm.fma.f32(float %1469, float %1461, float %1484)
  %1486 = tail call float @llvm.fma.f32(float %1469, float %1463, float %1485)
  %1487 = tail call float @llvm.fma.f32(float %1471, float %1461, float %1486)
  %1488 = fadd float %1483, %1487
  %1489 = fsub float %1488, %1483
  %1490 = fsub float %1487, %1489
  %1491 = fmul float %1469, %1473
  %1492 = fneg float %1491
  %1493 = tail call float @llvm.fma.f32(float %1469, float %1473, float %1492)
  %1494 = tail call float @llvm.fma.f32(float %1471, float %1473, float %1493)
  %1495 = fadd float %1491, %1494
  %1496 = fsub float %1495, %1491
  %1497 = fsub float %1494, %1496
  %1498 = fadd float %1495, 0x3FE5555540000000
  %1499 = fadd float %1498, 0xBFE5555540000000
  %1500 = fsub float %1495, %1499
  %1501 = fadd float %1497, 0x3E2E720200000000
  %1502 = fadd float %1501, %1500
  %1503 = fadd float %1498, %1502
  %1504 = fsub float %1503, %1498
  %1505 = fsub float %1502, %1504
  %1506 = fmul float %1488, %1503
  %1507 = fneg float %1506
  %1508 = tail call float @llvm.fma.f32(float %1488, float %1503, float %1507)
  %1509 = tail call float @llvm.fma.f32(float %1488, float %1505, float %1508)
  %1510 = tail call float @llvm.fma.f32(float %1490, float %1503, float %1509)
  %1511 = tail call float @llvm.amdgcn.ldexp.f32(float %1463, i32 1)
  %1512 = fadd float %1506, %1510
  %1513 = fsub float %1512, %1506
  %1514 = fsub float %1510, %1513
  %1515 = fadd float %1482, %1512
  %1516 = fsub float %1515, %1482
  %1517 = fsub float %1512, %1516
  %1518 = fadd float %1511, %1514
  %1519 = fadd float %1518, %1517
  %1520 = fadd float %1515, %1519
  %1521 = fsub float %1520, %1515
  %1522 = fsub float %1519, %1521
  %1523 = fadd float %1479, %1520
  %1524 = fsub float %1523, %1479
  %1525 = fsub float %1523, %1524
  %1526 = fsub float %1479, %1525
  %1527 = fsub float %1520, %1524
  %1528 = fadd float %1527, %1526
  %1529 = fadd float %1481, %1522
  %1530 = fsub float %1529, %1481
  %1531 = fsub float %1529, %1530
  %1532 = fsub float %1481, %1531
  %1533 = fsub float %1522, %1530
  %1534 = fadd float %1533, %1532
  %1535 = fadd float %1529, %1528
  %1536 = fadd float %1523, %1535
  %1537 = fsub float %1536, %1523
  %1538 = fsub float %1535, %1537
  %1539 = fadd float %1534, %1538
  %1540 = fadd float %1536, %1539
  %1541 = fsub float %1540, %1536
  %1542 = fsub float %1539, %1541
  %1543 = fmul float %1540, 2.000000e+00
  %1544 = fneg float %1543
  %1545 = tail call float @llvm.fma.f32(float %1540, float 2.000000e+00, float %1544)
  %1546 = fmul float %1540, 0.000000e+00
  %1547 = tail call float @llvm.fma.f32(float %1542, float 2.000000e+00, float %1546)
  %1548 = fadd float %1545, %1547
  %1549 = fadd float %1543, %1548
  %1550 = tail call float @llvm.fabs.f32(float %1543) #3
  %1551 = fcmp oeq float %1550, 0x7FF0000000000000
  %1552 = select i1 %1551, float %1543, float %1549
  %1553 = fcmp oeq float %1552, 0x40562E4300000000
  %1554 = select i1 %1553, float 0x3EE0000000000000, float 0.000000e+00
  %1555 = fsub float %1552, %1554
  %1556 = fmul float %1555, 0x3FF7154760000000
  %1557 = tail call float @llvm.rint.f32(float %1556)
  %1558 = fcmp ogt float %1555, 0x40562E4300000000
  %1559 = fcmp olt float %1555, 0xC059D1DA00000000
  %1560 = fneg float %1556
  %1561 = tail call float @llvm.fma.f32(float %1555, float 0x3FF7154760000000, float %1560)
  %1562 = tail call float @llvm.fma.f32(float %1555, float 0x3E54AE0BE0000000, float %1561)
  %1563 = fsub float %1556, %1557
  %1564 = fadd float %1562, %1563
  %1565 = tail call float @llvm.exp2.f32(float %1564)
  %1566 = fptosi float %1557 to i32
  %1567 = tail call float @llvm.amdgcn.ldexp.f32(float %1565, i32 %1566)
  %1568 = select i1 %1559, float 0.000000e+00, float %1567
  %1569 = select i1 %1558, float 0x7FF0000000000000, float %1568
  %1570 = fcmp oeq float %39, 0.000000e+00
  %1571 = fdiv contract double %167, 5.980000e+00
  %1572 = fsub contract double 7.488000e+00, %1571
  %1573 = fmul double %1572, 0x3FF71547652B82FE
  %1574 = tail call double @llvm.rint.f64(double %1573)
  %1575 = fneg double %1574
  %1576 = tail call double @llvm.fma.f64(double %1575, double 0x3FE62E42FEFA39EF, double %1572)
  %1577 = tail call double @llvm.fma.f64(double %1575, double 0x3C7ABC9E3B39803F, double %1576)
  %1578 = tail call double @llvm.fma.f64(double %1577, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1579 = tail call double @llvm.fma.f64(double %1577, double %1578, double 0x3EC71DEE623FDE64)
  %1580 = tail call double @llvm.fma.f64(double %1577, double %1579, double 0x3EFA01997C89E6B0)
  %1581 = tail call double @llvm.fma.f64(double %1577, double %1580, double 0x3F2A01A014761F6E)
  %1582 = tail call double @llvm.fma.f64(double %1577, double %1581, double 0x3F56C16C1852B7B0)
  %1583 = tail call double @llvm.fma.f64(double %1577, double %1582, double 0x3F81111111122322)
  %1584 = tail call double @llvm.fma.f64(double %1577, double %1583, double 0x3FA55555555502A1)
  %1585 = tail call double @llvm.fma.f64(double %1577, double %1584, double 0x3FC5555555555511)
  %1586 = tail call double @llvm.fma.f64(double %1577, double %1585, double 0x3FE000000000000B)
  %1587 = tail call double @llvm.fma.f64(double %1577, double %1586, double 1.000000e+00)
  %1588 = tail call double @llvm.fma.f64(double %1577, double %1587, double 1.000000e+00)
  %1589 = fptosi double %1574 to i32
  %1590 = tail call double @llvm.amdgcn.ldexp.f64(double %1588, i32 %1589)
  %1591 = fcmp ogt double %1572, 1.024000e+03
  %1592 = fcmp olt double %1572, -1.075000e+03
  %1593 = fadd contract double %1590, 1.000000e+00
  %1594 = fdiv contract double 1.000000e+00, %1593
  %1595 = select i1 %1591, double 0.000000e+00, double %1594
  %1596 = select i1 %1592, double 1.000000e+00, double %1595
  %1597 = fptrunc double %1596 to float
  %1598 = fadd contract double %167, 3.000000e+00
  %1599 = fdiv contract double %1598, -1.500000e+01
  %1600 = fmul double %1599, 0x3FF71547652B82FE
  %1601 = tail call double @llvm.rint.f64(double %1600)
  %1602 = fneg double %1601
  %1603 = tail call double @llvm.fma.f64(double %1602, double 0x3FE62E42FEFA39EF, double %1599)
  %1604 = tail call double @llvm.fma.f64(double %1602, double 0x3C7ABC9E3B39803F, double %1603)
  %1605 = tail call double @llvm.fma.f64(double %1604, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1606 = tail call double @llvm.fma.f64(double %1604, double %1605, double 0x3EC71DEE623FDE64)
  %1607 = tail call double @llvm.fma.f64(double %1604, double %1606, double 0x3EFA01997C89E6B0)
  %1608 = tail call double @llvm.fma.f64(double %1604, double %1607, double 0x3F2A01A014761F6E)
  %1609 = tail call double @llvm.fma.f64(double %1604, double %1608, double 0x3F56C16C1852B7B0)
  %1610 = tail call double @llvm.fma.f64(double %1604, double %1609, double 0x3F81111111122322)
  %1611 = tail call double @llvm.fma.f64(double %1604, double %1610, double 0x3FA55555555502A1)
  %1612 = tail call double @llvm.fma.f64(double %1604, double %1611, double 0x3FC5555555555511)
  %1613 = tail call double @llvm.fma.f64(double %1604, double %1612, double 0x3FE000000000000B)
  %1614 = tail call double @llvm.fma.f64(double %1604, double %1613, double 1.000000e+00)
  %1615 = tail call double @llvm.fma.f64(double %1604, double %1614, double 1.000000e+00)
  %1616 = fptosi double %1601 to i32
  %1617 = tail call double @llvm.amdgcn.ldexp.f64(double %1615, i32 %1616)
  %1618 = fcmp ogt double %1599, 1.024000e+03
  %1619 = fcmp olt double %1599, -1.075000e+03
  %1620 = fadd contract double %1617, 1.000000e+00
  %1621 = fdiv contract double 1.000000e+00, %1620
  %1622 = select i1 %1618, double 0.000000e+00, double %1621
  %1623 = select i1 %1619, double 1.000000e+00, double %1622
  %1624 = fptrunc double %1623 to float
  %1625 = fadd contract double %167, 3.350000e+01
  %1626 = fdiv contract double %1625, 1.000000e+01
  %1627 = fmul double %1626, 0x3FF71547652B82FE
  %1628 = tail call double @llvm.rint.f64(double %1627)
  %1629 = fneg double %1628
  %1630 = tail call double @llvm.fma.f64(double %1629, double 0x3FE62E42FEFA39EF, double %1626)
  %1631 = tail call double @llvm.fma.f64(double %1629, double 0x3C7ABC9E3B39803F, double %1630)
  %1632 = tail call double @llvm.fma.f64(double %1631, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1633 = tail call double @llvm.fma.f64(double %1631, double %1632, double 0x3EC71DEE623FDE64)
  %1634 = tail call double @llvm.fma.f64(double %1631, double %1633, double 0x3EFA01997C89E6B0)
  %1635 = tail call double @llvm.fma.f64(double %1631, double %1634, double 0x3F2A01A014761F6E)
  %1636 = tail call double @llvm.fma.f64(double %1631, double %1635, double 0x3F56C16C1852B7B0)
  %1637 = tail call double @llvm.fma.f64(double %1631, double %1636, double 0x3F81111111122322)
  %1638 = tail call double @llvm.fma.f64(double %1631, double %1637, double 0x3FA55555555502A1)
  %1639 = tail call double @llvm.fma.f64(double %1631, double %1638, double 0x3FC5555555555511)
  %1640 = tail call double @llvm.fma.f64(double %1631, double %1639, double 0x3FE000000000000B)
  %1641 = tail call double @llvm.fma.f64(double %1631, double %1640, double 1.000000e+00)
  %1642 = tail call double @llvm.fma.f64(double %1631, double %1641, double 1.000000e+00)
  %1643 = fptosi double %1628 to i32
  %1644 = tail call double @llvm.amdgcn.ldexp.f64(double %1642, i32 %1643)
  %1645 = fcmp ogt double %1626, 1.024000e+03
  %1646 = fcmp olt double %1626, -1.075000e+03
  %1647 = fadd contract double %1644, 1.000000e+00
  %1648 = select i1 %1645, double 0x7FF0000000000000, double %1647
  %1649 = select i1 %1646, double 1.000000e+00, double %1648
  %1650 = fdiv contract double 1.000000e+00, %1649
  %1651 = fptrunc double %1650 to float
  %1652 = fdiv contract double %1598, 1.500000e+01
  %1653 = fmul double %1652, 0x3FF71547652B82FE
  %1654 = tail call double @llvm.rint.f64(double %1653)
  %1655 = fneg double %1654
  %1656 = tail call double @llvm.fma.f64(double %1655, double 0x3FE62E42FEFA39EF, double %1652)
  %1657 = tail call double @llvm.fma.f64(double %1655, double 0x3C7ABC9E3B39803F, double %1656)
  %1658 = tail call double @llvm.fma.f64(double %1657, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1659 = tail call double @llvm.fma.f64(double %1657, double %1658, double 0x3EC71DEE623FDE64)
  %1660 = tail call double @llvm.fma.f64(double %1657, double %1659, double 0x3EFA01997C89E6B0)
  %1661 = tail call double @llvm.fma.f64(double %1657, double %1660, double 0x3F2A01A014761F6E)
  %1662 = tail call double @llvm.fma.f64(double %1657, double %1661, double 0x3F56C16C1852B7B0)
  %1663 = tail call double @llvm.fma.f64(double %1657, double %1662, double 0x3F81111111122322)
  %1664 = tail call double @llvm.fma.f64(double %1657, double %1663, double 0x3FA55555555502A1)
  %1665 = tail call double @llvm.fma.f64(double %1657, double %1664, double 0x3FC5555555555511)
  %1666 = tail call double @llvm.fma.f64(double %1657, double %1665, double 0x3FE000000000000B)
  %1667 = tail call double @llvm.fma.f64(double %1657, double %1666, double 1.000000e+00)
  %1668 = tail call double @llvm.fma.f64(double %1657, double %1667, double 1.000000e+00)
  %1669 = fptosi double %1654 to i32
  %1670 = tail call double @llvm.amdgcn.ldexp.f64(double %1668, i32 %1669)
  %1671 = fcmp ogt double %1652, 1.024000e+03
  %1672 = fcmp olt double %1652, -1.075000e+03
  %1673 = fadd contract double %1670, 1.000000e+00
  %1674 = fdiv contract double 9.000000e+00, %1673
  %1675 = fadd contract double %1674, 5.000000e-01
  %1676 = select i1 %1671, double 5.000000e-01, double %1675
  %1677 = select i1 %1672, double 9.500000e+00, double %1676
  %1678 = fptrunc double %1677 to float
  %1679 = fadd contract double %167, 6.000000e+01
  %1680 = fdiv contract double %1679, 1.000000e+01
  %1681 = fmul double %1680, 0x3FF71547652B82FE
  %1682 = tail call double @llvm.rint.f64(double %1681)
  %1683 = fneg double %1682
  %1684 = tail call double @llvm.fma.f64(double %1683, double 0x3FE62E42FEFA39EF, double %1680)
  %1685 = tail call double @llvm.fma.f64(double %1683, double 0x3C7ABC9E3B39803F, double %1684)
  %1686 = tail call double @llvm.fma.f64(double %1685, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1687 = tail call double @llvm.fma.f64(double %1685, double %1686, double 0x3EC71DEE623FDE64)
  %1688 = tail call double @llvm.fma.f64(double %1685, double %1687, double 0x3EFA01997C89E6B0)
  %1689 = tail call double @llvm.fma.f64(double %1685, double %1688, double 0x3F2A01A014761F6E)
  %1690 = tail call double @llvm.fma.f64(double %1685, double %1689, double 0x3F56C16C1852B7B0)
  %1691 = tail call double @llvm.fma.f64(double %1685, double %1690, double 0x3F81111111122322)
  %1692 = tail call double @llvm.fma.f64(double %1685, double %1691, double 0x3FA55555555502A1)
  %1693 = tail call double @llvm.fma.f64(double %1685, double %1692, double 0x3FC5555555555511)
  %1694 = tail call double @llvm.fma.f64(double %1685, double %1693, double 0x3FE000000000000B)
  %1695 = tail call double @llvm.fma.f64(double %1685, double %1694, double 1.000000e+00)
  %1696 = tail call double @llvm.fma.f64(double %1685, double %1695, double 1.000000e+00)
  %1697 = fptosi double %1682 to i32
  %1698 = tail call double @llvm.amdgcn.ldexp.f64(double %1696, i32 %1697)
  %1699 = fcmp ogt double %1680, 1.024000e+03
  %1700 = fcmp olt double %1680, -1.075000e+03
  %1701 = fadd contract double %1698, 1.000000e+00
  %1702 = select i1 %1699, double 0x7FF0000000000000, double %1701
  %1703 = select i1 %1700, double 1.000000e+00, double %1702
  %1704 = fdiv contract double 3.000000e+03, %1703
  %1705 = fadd contract double %1704, 3.000000e+01
  %1706 = fptrunc double %1705 to float
  %1707 = fdiv contract double 2.800000e+03, %1703
  %1708 = fadd contract double %1707, 2.200000e+02
  %1709 = fptrunc double %1708 to float
  %1710 = fsub contract float %1624, %29
  %1711 = fdiv contract float %1710, %1678
  %1712 = getelementptr inbounds float, float addrspace(1)* %2, i64 7
  store float %1711, float addrspace(1)* %1712, align 4, !tbaa !6
  %1713 = fsub contract float %1651, %31
  %1714 = fdiv contract float %1713, %1706
  %1715 = getelementptr inbounds float, float addrspace(1)* %2, i64 8
  store float %1714, float addrspace(1)* %1715, align 4, !tbaa !6
  %1716 = fsub contract float %1651, %91
  %1717 = fdiv contract float %1716, %1709
  %1718 = getelementptr inbounds float, float addrspace(1)* %2, i64 39
  store float %1717, float addrspace(1)* %1718, align 4, !tbaa !6
  %1719 = fpext float %1149 to double
  %1720 = fmul contract float %89, %196
  %1721 = fdiv contract float %1720, 3.000000e+01
  %1722 = fdiv contract float %1721, 3.000000e+01
  %1723 = fmul float %1722, 0x3FF7154760000000
  %1724 = tail call float @llvm.rint.f32(float %1723)
  %1725 = fcmp ogt float %1722, 0x40562E4300000000
  %1726 = fcmp olt float %1722, 0xC059D1DA00000000
  %1727 = fneg float %1723
  %1728 = tail call float @llvm.fma.f32(float %1722, float 0x3FF7154760000000, float %1727)
  %1729 = tail call float @llvm.fma.f32(float %1722, float 0x3E54AE0BE0000000, float %1728)
  %1730 = fsub float %1723, %1724
  %1731 = fadd float %1729, %1730
  %1732 = tail call float @llvm.exp2.f32(float %1731)
  %1733 = fptosi float %1724 to i32
  %1734 = tail call float @llvm.amdgcn.ldexp.f32(float %1732, i32 %1733)
  %1735 = select i1 %1726, float 0.000000e+00, float %1734
  %1736 = select i1 %1725, float 0x7FF0000000000000, float %1735
  %1737 = fpext float %1736 to double
  %1738 = fmul contract double %1737, 3.500000e+00
  %1739 = fadd contract double %1738, 1.500000e+00
  %1740 = fptrunc double %1739 to float
  %1741 = fdiv contract double 2.000000e+01, %1649
  %1742 = fadd contract double %1741, 2.000000e+01
  %1743 = fptrunc double %1742 to float
  %1744 = fsub contract float %1624, %33
  %1745 = fdiv contract float %1744, %1740
  %1746 = getelementptr inbounds float, float addrspace(1)* %2, i64 9
  store float %1745, float addrspace(1)* %1746, align 4, !tbaa !6
  %1747 = fsub contract float %1651, %35
  %1748 = fdiv contract float %1747, %1743
  %1749 = getelementptr inbounds float, float addrspace(1)* %2, i64 10
  store float %1748, float addrspace(1)* %1749, align 4, !tbaa !6
  %1750 = fadd contract double %1719, -5.921500e+01
  %1751 = fmul contract double %1750, 2.385000e-01
  %1752 = fmul double %1751, 0x3FF71547652B82FE
  %1753 = tail call double @llvm.rint.f64(double %1752)
  %1754 = fneg double %1753
  %1755 = tail call double @llvm.fma.f64(double %1754, double 0x3FE62E42FEFA39EF, double %1751)
  %1756 = tail call double @llvm.fma.f64(double %1754, double 0x3C7ABC9E3B39803F, double %1755)
  %1757 = tail call double @llvm.fma.f64(double %1756, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1758 = tail call double @llvm.fma.f64(double %1756, double %1757, double 0x3EC71DEE623FDE64)
  %1759 = tail call double @llvm.fma.f64(double %1756, double %1758, double 0x3EFA01997C89E6B0)
  %1760 = tail call double @llvm.fma.f64(double %1756, double %1759, double 0x3F2A01A014761F6E)
  %1761 = tail call double @llvm.fma.f64(double %1756, double %1760, double 0x3F56C16C1852B7B0)
  %1762 = tail call double @llvm.fma.f64(double %1756, double %1761, double 0x3F81111111122322)
  %1763 = tail call double @llvm.fma.f64(double %1756, double %1762, double 0x3FA55555555502A1)
  %1764 = tail call double @llvm.fma.f64(double %1756, double %1763, double 0x3FC5555555555511)
  %1765 = tail call double @llvm.fma.f64(double %1756, double %1764, double 0x3FE000000000000B)
  %1766 = tail call double @llvm.fma.f64(double %1756, double %1765, double 1.000000e+00)
  %1767 = tail call double @llvm.fma.f64(double %1756, double %1766, double 1.000000e+00)
  %1768 = fptosi double %1753 to i32
  %1769 = tail call double @llvm.amdgcn.ldexp.f64(double %1767, i32 %1768)
  %1770 = fcmp ogt double %1751, 1.024000e+03
  %1771 = fcmp olt double %1751, -1.075000e+03
  %1772 = fadd contract double %1769, 1.000000e+00
  %1773 = fdiv contract double 1.020000e+00, %1772
  %1774 = select i1 %1770, double 0.000000e+00, double %1773
  %1775 = select i1 %1771, double 1.020000e+00, double %1774
  %1776 = fptrunc double %1775 to float
  %1777 = fadd contract double %167, 5.476000e+00
  %1778 = fpext float %136 to double
  %1779 = fsub contract double %1777, %1778
  %1780 = fmul contract double %1779, 8.032000e-02
  %1781 = fmul double %1780, 0x3FF71547652B82FE
  %1782 = tail call double @llvm.rint.f64(double %1781)
  %1783 = fneg double %1782
  %1784 = tail call double @llvm.fma.f64(double %1783, double 0x3FE62E42FEFA39EF, double %1780)
  %1785 = tail call double @llvm.fma.f64(double %1783, double 0x3C7ABC9E3B39803F, double %1784)
  %1786 = fadd contract double %1719, -5.943100e+02
  %1787 = fmul contract double %1786, 6.175000e-02
  %1788 = fmul double %1787, 0x3FF71547652B82FE
  %1789 = tail call double @llvm.rint.f64(double %1788)
  %1790 = fneg double %1789
  %1791 = tail call double @llvm.fma.f64(double %1790, double 0x3FE62E42FEFA39EF, double %1787)
  %1792 = tail call double @llvm.fma.f64(double %1790, double 0x3C7ABC9E3B39803F, double %1791)
  %1793 = fadd contract double %1719, 4.753000e+00
  %1794 = fmul contract double %1793, -5.143000e-01
  %1795 = fmul double %1794, 0x3FF71547652B82FE
  %1796 = tail call double @llvm.rint.f64(double %1795)
  %1797 = fneg double %1796
  %1798 = tail call double @llvm.fma.f64(double %1797, double 0x3FE62E42FEFA39EF, double %1794)
  %1799 = tail call double @llvm.fma.f64(double %1797, double 0x3C7ABC9E3B39803F, double %1798)
  %1800 = fadd contract float %89, 0x404EC0F3A0000000
  %1801 = fadd contract double %167, 1.450000e+01
  %1802 = fdiv contract double %1801, -6.000000e+00
  %1803 = fmul double %1802, 0x3FF71547652B82FE
  %1804 = tail call double @llvm.rint.f64(double %1803)
  %1805 = fneg double %1804
  %1806 = tail call double @llvm.fma.f64(double %1805, double 0x3FE62E42FEFA39EF, double %1802)
  %1807 = tail call double @llvm.fma.f64(double %1805, double 0x3C7ABC9E3B39803F, double %1806)
  %1808 = tail call double @llvm.fma.f64(double %1807, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1809 = tail call double @llvm.fma.f64(double %1807, double %1808, double 0x3EC71DEE623FDE64)
  %1810 = tail call double @llvm.fma.f64(double %1807, double %1809, double 0x3EFA01997C89E6B0)
  %1811 = tail call double @llvm.fma.f64(double %1807, double %1810, double 0x3F2A01A014761F6E)
  %1812 = tail call double @llvm.fma.f64(double %1807, double %1811, double 0x3F56C16C1852B7B0)
  %1813 = tail call double @llvm.fma.f64(double %1807, double %1812, double 0x3F81111111122322)
  %1814 = tail call double @llvm.fma.f64(double %1807, double %1813, double 0x3FA55555555502A1)
  %1815 = tail call double @llvm.fma.f64(double %1807, double %1814, double 0x3FC5555555555511)
  %1816 = tail call double @llvm.fma.f64(double %1807, double %1815, double 0x3FE000000000000B)
  %1817 = tail call double @llvm.fma.f64(double %1807, double %1816, double 1.000000e+00)
  %1818 = tail call double @llvm.fma.f64(double %1807, double %1817, double 1.000000e+00)
  %1819 = fptosi double %1804 to i32
  %1820 = tail call double @llvm.amdgcn.ldexp.f64(double %1818, i32 %1819)
  %1821 = fcmp ogt double %1802, 1.024000e+03
  %1822 = select i1 %1821, double 0x7FF0000000000000, double %1820
  %1823 = fcmp olt double %1802, -1.075000e+03
  %1824 = select i1 %1823, double 0.000000e+00, double %1822
  %1825 = fadd contract double %1824, 1.000000e+00
  %1826 = fdiv contract double 1.000000e+00, %1825
  %1827 = fptrunc double %1826 to float
  %1828 = fpext float %1827 to double
  %1829 = fsub contract double 1.000000e+00, %1824
  %1830 = fmul contract double %1829, %1828
  %1831 = fmul contract double %1801, 3.500000e-02
  %1832 = fdiv contract double %1830, %1831
  %1833 = fptrunc double %1832 to float
  %1834 = fadd contract double %167, 3.506000e+01
  %1835 = fdiv contract double %1834, 3.600000e+00
  %1836 = fmul double %1835, 0x3FF71547652B82FE
  %1837 = tail call double @llvm.rint.f64(double %1836)
  %1838 = fneg double %1837
  %1839 = tail call double @llvm.fma.f64(double %1838, double 0x3FE62E42FEFA39EF, double %1835)
  %1840 = tail call double @llvm.fma.f64(double %1838, double 0x3C7ABC9E3B39803F, double %1839)
  %1841 = tail call double @llvm.fma.f64(double %1840, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1842 = tail call double @llvm.fma.f64(double %1840, double %1841, double 0x3EC71DEE623FDE64)
  %1843 = tail call double @llvm.fma.f64(double %1840, double %1842, double 0x3EFA01997C89E6B0)
  %1844 = tail call double @llvm.fma.f64(double %1840, double %1843, double 0x3F2A01A014761F6E)
  %1845 = tail call double @llvm.fma.f64(double %1840, double %1844, double 0x3F56C16C1852B7B0)
  %1846 = tail call double @llvm.fma.f64(double %1840, double %1845, double 0x3F81111111122322)
  %1847 = tail call double @llvm.fma.f64(double %1840, double %1846, double 0x3FA55555555502A1)
  %1848 = tail call double @llvm.fma.f64(double %1840, double %1847, double 0x3FC5555555555511)
  %1849 = tail call double @llvm.fma.f64(double %1840, double %1848, double 0x3FE000000000000B)
  %1850 = tail call double @llvm.fma.f64(double %1840, double %1849, double 1.000000e+00)
  %1851 = tail call double @llvm.fma.f64(double %1840, double %1850, double 1.000000e+00)
  %1852 = fptosi double %1837 to i32
  %1853 = tail call double @llvm.amdgcn.ldexp.f64(double %1851, i32 %1852)
  %1854 = fcmp ogt double %1835, 1.024000e+03
  %1855 = fcmp olt double %1835, -1.075000e+03
  %1856 = fadd contract double %1853, 1.000000e+00
  %1857 = fdiv contract double 1.000000e+00, %1856
  %1858 = select i1 %1854, double 0.000000e+00, double %1857
  %1859 = select i1 %1855, double 1.000000e+00, double %1858
  %1860 = fsub contract float 5.000000e+01, %89
  %1861 = fdiv contract float %1860, 2.000000e+01
  %1862 = fmul float %1861, 0x3FF7154760000000
  %1863 = tail call float @llvm.rint.f32(float %1862)
  %1864 = fcmp ogt float %1861, 0x40562E4300000000
  %1865 = fcmp olt float %1861, 0xC059D1DA00000000
  %1866 = fneg float %1862
  %1867 = tail call float @llvm.fma.f32(float %1861, float 0x3FF7154760000000, float %1866)
  %1868 = tail call float @llvm.fma.f32(float %1861, float 0x3E54AE0BE0000000, float %1867)
  %1869 = fsub float %1862, %1863
  %1870 = fadd float %1868, %1869
  %1871 = tail call float @llvm.exp2.f32(float %1870)
  %1872 = fptosi float %1863 to i32
  %1873 = tail call float @llvm.amdgcn.ldexp.f32(float %1871, i32 %1872)
  %1874 = fadd contract float %1873, 1.000000e+00
  %1875 = select i1 %1865, float 1.000000e+00, float %1874
  %1876 = select i1 %1864, float 0x7FF0000000000000, float %1875
  %1877 = fpext float %1876 to double
  %1878 = fdiv contract double 6.000000e-01, %1877
  %1879 = fadd contract double %1878, %1859
  %1880 = fptrunc double %1879 to float
  %1881 = fmul contract double %1801, 3.370000e-02
  %1882 = tail call double @llvm.fabs.f64(double %1881)
  %1883 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1882)
  %1884 = fcmp olt double %1883, 0x3FE5555555555555
  %1885 = zext i1 %1884 to i32
  %1886 = tail call double @llvm.amdgcn.ldexp.f64(double %1883, i32 %1885)
  %1887 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1882)
  %1888 = sub nsw i32 %1887, %1885
  %1889 = fadd double %1886, -1.000000e+00
  %1890 = fadd double %1886, 1.000000e+00
  %1891 = fadd double %1890, -1.000000e+00
  %1892 = fsub double %1886, %1891
  %1893 = tail call double @llvm.amdgcn.rcp.f64(double %1890)
  %1894 = fneg double %1890
  %1895 = tail call double @llvm.fma.f64(double %1894, double %1893, double 1.000000e+00)
  %1896 = tail call double @llvm.fma.f64(double %1895, double %1893, double %1893)
  %1897 = tail call double @llvm.fma.f64(double %1894, double %1896, double 1.000000e+00)
  %1898 = tail call double @llvm.fma.f64(double %1897, double %1896, double %1896)
  %1899 = fmul double %1889, %1898
  %1900 = fmul double %1890, %1899
  %1901 = fneg double %1900
  %1902 = tail call double @llvm.fma.f64(double %1899, double %1890, double %1901)
  %1903 = tail call double @llvm.fma.f64(double %1899, double %1892, double %1902)
  %1904 = fadd double %1900, %1903
  %1905 = fsub double %1904, %1900
  %1906 = fsub double %1903, %1905
  %1907 = fsub double %1889, %1904
  %1908 = fsub double %1889, %1907
  %1909 = fsub double %1908, %1904
  %1910 = fsub double %1909, %1906
  %1911 = fadd double %1907, %1910
  %1912 = fmul double %1898, %1911
  %1913 = fadd double %1899, %1912
  %1914 = fsub double %1913, %1899
  %1915 = fsub double %1912, %1914
  %1916 = fmul double %1913, %1913
  %1917 = fneg double %1916
  %1918 = tail call double @llvm.fma.f64(double %1913, double %1913, double %1917)
  %1919 = fmul double %1915, 2.000000e+00
  %1920 = tail call double @llvm.fma.f64(double %1913, double %1919, double %1918)
  %1921 = fadd double %1916, %1920
  %1922 = fsub double %1921, %1916
  %1923 = fsub double %1920, %1922
  %1924 = tail call double @llvm.fma.f64(double %1921, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1925 = tail call double @llvm.fma.f64(double %1921, double %1924, double 0x3FBE25E43ABE935A)
  %1926 = tail call double @llvm.fma.f64(double %1921, double %1925, double 0x3FC110EF47E6C9C2)
  %1927 = tail call double @llvm.fma.f64(double %1921, double %1926, double 0x3FC3B13BCFA74449)
  %1928 = tail call double @llvm.fma.f64(double %1921, double %1927, double 0x3FC745D171BF3C30)
  %1929 = tail call double @llvm.fma.f64(double %1921, double %1928, double 0x3FCC71C71C7792CE)
  %1930 = tail call double @llvm.fma.f64(double %1921, double %1929, double 0x3FD24924924920DA)
  %1931 = tail call double @llvm.fma.f64(double %1921, double %1930, double 0x3FD999999999999C)
  %1932 = sitofp i32 %1888 to double
  %1933 = fmul double %1932, 0x3FE62E42FEFA39EF
  %1934 = fneg double %1933
  %1935 = tail call double @llvm.fma.f64(double %1932, double 0x3FE62E42FEFA39EF, double %1934)
  %1936 = tail call double @llvm.fma.f64(double %1932, double 0x3C7ABC9E3B39803F, double %1935)
  %1937 = fadd double %1933, %1936
  %1938 = fsub double %1937, %1933
  %1939 = fsub double %1936, %1938
  %1940 = tail call double @llvm.amdgcn.ldexp.f64(double %1913, i32 1)
  %1941 = tail call double @llvm.amdgcn.ldexp.f64(double %1915, i32 1)
  %1942 = fmul double %1913, %1921
  %1943 = fneg double %1942
  %1944 = tail call double @llvm.fma.f64(double %1921, double %1913, double %1943)
  %1945 = tail call double @llvm.fma.f64(double %1921, double %1915, double %1944)
  %1946 = tail call double @llvm.fma.f64(double %1923, double %1913, double %1945)
  %1947 = fadd double %1942, %1946
  %1948 = fsub double %1947, %1942
  %1949 = fsub double %1946, %1948
  %1950 = fmul double %1921, %1931
  %1951 = fneg double %1950
  %1952 = tail call double @llvm.fma.f64(double %1921, double %1931, double %1951)
  %1953 = tail call double @llvm.fma.f64(double %1923, double %1931, double %1952)
  %1954 = fadd double %1950, %1953
  %1955 = fsub double %1954, %1950
  %1956 = fsub double %1953, %1955
  %1957 = fadd double %1954, 0x3FE5555555555555
  %1958 = fadd double %1957, 0xBFE5555555555555
  %1959 = fsub double %1954, %1958
  %1960 = fadd double %1956, 0x3C8543B0D5DF274D
  %1961 = fadd double %1960, %1959
  %1962 = fadd double %1957, %1961
  %1963 = fsub double %1962, %1957
  %1964 = fsub double %1961, %1963
  %1965 = fmul double %1947, %1962
  %1966 = fneg double %1965
  %1967 = tail call double @llvm.fma.f64(double %1947, double %1962, double %1966)
  %1968 = tail call double @llvm.fma.f64(double %1947, double %1964, double %1967)
  %1969 = tail call double @llvm.fma.f64(double %1949, double %1962, double %1968)
  %1970 = fadd double %1965, %1969
  %1971 = fsub double %1970, %1965
  %1972 = fsub double %1969, %1971
  %1973 = fadd double %1940, %1970
  %1974 = fsub double %1973, %1940
  %1975 = fsub double %1970, %1974
  %1976 = fadd double %1941, %1972
  %1977 = fadd double %1976, %1975
  %1978 = fadd double %1973, %1977
  %1979 = fsub double %1978, %1973
  %1980 = fsub double %1977, %1979
  %1981 = fadd double %1937, %1978
  %1982 = fsub double %1981, %1937
  %1983 = fsub double %1981, %1982
  %1984 = fsub double %1937, %1983
  %1985 = fsub double %1978, %1982
  %1986 = fadd double %1985, %1984
  %1987 = fadd double %1939, %1980
  %1988 = fsub double %1987, %1939
  %1989 = fsub double %1987, %1988
  %1990 = fsub double %1939, %1989
  %1991 = fsub double %1980, %1988
  %1992 = fadd double %1991, %1990
  %1993 = fadd double %1987, %1986
  %1994 = fadd double %1981, %1993
  %1995 = fsub double %1994, %1981
  %1996 = fsub double %1993, %1995
  %1997 = fadd double %1992, %1996
  %1998 = fadd double %1994, %1997
  %1999 = fsub double %1998, %1994
  %2000 = fsub double %1997, %1999
  %2001 = fmul double %1998, 2.000000e+00
  %2002 = fneg double %2001
  %2003 = tail call double @llvm.fma.f64(double %1998, double 2.000000e+00, double %2002)
  %2004 = tail call double @llvm.fma.f64(double %2000, double 2.000000e+00, double %2003)
  %2005 = fadd double %2001, %2004
  %2006 = fsub double %2005, %2001
  %2007 = fsub double %2004, %2006
  %2008 = tail call double @llvm.fabs.f64(double %2001) #3
  %2009 = fcmp oeq double %2008, 0x7FF0000000000000
  %2010 = select i1 %2009, double %2001, double %2005
  %2011 = tail call double @llvm.fabs.f64(double %2010) #3
  %2012 = fcmp oeq double %2011, 0x7FF0000000000000
  %2013 = select i1 %2012, double 0.000000e+00, double %2007
  %2014 = fmul double %2010, 0x3FF71547652B82FE
  %2015 = tail call double @llvm.rint.f64(double %2014)
  %2016 = fneg double %2015
  %2017 = tail call double @llvm.fma.f64(double %2016, double 0x3FE62E42FEFA39EF, double %2010)
  %2018 = tail call double @llvm.fma.f64(double %2016, double 0x3C7ABC9E3B39803F, double %2017)
  %2019 = tail call double @llvm.fma.f64(double %2018, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2020 = tail call double @llvm.fma.f64(double %2018, double %2019, double 0x3EC71DEE623FDE64)
  %2021 = tail call double @llvm.fma.f64(double %2018, double %2020, double 0x3EFA01997C89E6B0)
  %2022 = tail call double @llvm.fma.f64(double %2018, double %2021, double 0x3F2A01A014761F6E)
  %2023 = tail call double @llvm.fma.f64(double %2018, double %2022, double 0x3F56C16C1852B7B0)
  %2024 = tail call double @llvm.fma.f64(double %2018, double %2023, double 0x3F81111111122322)
  %2025 = tail call double @llvm.fma.f64(double %2018, double %2024, double 0x3FA55555555502A1)
  %2026 = tail call double @llvm.fma.f64(double %2018, double %2025, double 0x3FC5555555555511)
  %2027 = tail call double @llvm.fma.f64(double %2018, double %2026, double 0x3FE000000000000B)
  %2028 = tail call double @llvm.fma.f64(double %2018, double %2027, double 1.000000e+00)
  %2029 = tail call double @llvm.fma.f64(double %2018, double %2028, double 1.000000e+00)
  %2030 = fptosi double %2015 to i32
  %2031 = tail call double @llvm.amdgcn.ldexp.f64(double %2029, i32 %2030)
  %2032 = fcmp ogt double %2010, 1.024000e+03
  %2033 = select i1 %2032, double 0x7FF0000000000000, double %2031
  %2034 = fcmp olt double %2010, -1.075000e+03
  %2035 = select i1 %2034, double 0.000000e+00, double %2033
  %2036 = tail call double @llvm.fma.f64(double %2035, double %2013, double %2035)
  %2037 = tail call double @llvm.fabs.f64(double %2035) #3
  %2038 = fcmp oeq double %2037, 0x7FF0000000000000
  %2039 = select i1 %2038, double %2035, double %2036
  %2040 = tail call double @llvm.fabs.f64(double %2039)
  %2041 = fcmp oeq double %1882, 0x7FF0000000000000
  %2042 = fcmp oeq double %1881, 0.000000e+00
  %2043 = or i1 %2042, %2041
  %2044 = select i1 %2042, double 0.000000e+00, double 0x7FF0000000000000
  %2045 = select i1 %2043, double %2044, double %2040
  %2046 = fcmp uno double %1881, 0.000000e+00
  %2047 = select i1 %2046, double 0x7FF8000000000000, double %2045
  %2048 = fneg contract double %2047
  %2049 = fmul double %2047, 0xBFF71547652B82FE
  %2050 = tail call double @llvm.rint.f64(double %2049)
  %2051 = fneg double %2050
  %2052 = tail call double @llvm.fma.f64(double %2051, double 0x3FE62E42FEFA39EF, double %2048)
  %2053 = tail call double @llvm.fma.f64(double %2051, double 0x3C7ABC9E3B39803F, double %2052)
  %2054 = tail call double @llvm.fma.f64(double %2053, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2055 = tail call double @llvm.fma.f64(double %2053, double %2054, double 0x3EC71DEE623FDE64)
  %2056 = tail call double @llvm.fma.f64(double %2053, double %2055, double 0x3EFA01997C89E6B0)
  %2057 = tail call double @llvm.fma.f64(double %2053, double %2056, double 0x3F2A01A014761F6E)
  %2058 = tail call double @llvm.fma.f64(double %2053, double %2057, double 0x3F56C16C1852B7B0)
  %2059 = tail call double @llvm.fma.f64(double %2053, double %2058, double 0x3F81111111122322)
  %2060 = tail call double @llvm.fma.f64(double %2053, double %2059, double 0x3FA55555555502A1)
  %2061 = tail call double @llvm.fma.f64(double %2053, double %2060, double 0x3FC5555555555511)
  %2062 = tail call double @llvm.fma.f64(double %2053, double %2061, double 0x3FE000000000000B)
  %2063 = tail call double @llvm.fma.f64(double %2053, double %2062, double 1.000000e+00)
  %2064 = tail call double @llvm.fma.f64(double %2053, double %2063, double 1.000000e+00)
  %2065 = fptosi double %2050 to i32
  %2066 = tail call double @llvm.amdgcn.ldexp.f64(double %2064, i32 %2065)
  %2067 = fcmp ogt double %2047, 1.075000e+03
  %2068 = fmul contract double %2066, 1.970000e-02
  %2069 = fadd contract double %2068, 2.000000e-02
  %2070 = fdiv contract double 1.000000e+00, %2069
  %2071 = select i1 %2067, double 5.000000e+01, double %2070
  %2072 = fptrunc double %2071 to float
  %2073 = fsub contract float %1827, %21
  %2074 = fdiv contract float %2073, %1833
  %2075 = getelementptr inbounds float, float addrspace(1)* %2, i64 3
  store float %2074, float addrspace(1)* %2075, align 4, !tbaa !6
  %2076 = fsub contract float %1880, %23
  %2077 = fdiv contract float %2076, %2072
  %2078 = getelementptr inbounds float, float addrspace(1)* %2, i64 4
  store float %2077, float addrspace(1)* %2078, align 4, !tbaa !6
  %2079 = fpext float %83 to double
  %2080 = fmul contract double %2079, 1.700000e+00
  %2081 = fsub contract float 1.000000e+00, %25
  %2082 = fpext float %2081 to double
  %2083 = fmul contract double %2080, %2082
  %2084 = fpext float %25 to double
  %2085 = fmul contract double %2084, 1.190000e-02
  %2086 = fsub contract double %2083, %2085
  %2087 = fptrunc double %2086 to float
  %2088 = getelementptr inbounds float, float addrspace(1)* %2, i64 5
  store float %2087, float addrspace(1)* %2088, align 4, !tbaa !6
  %2089 = fpext float %85 to double
  %2090 = fmul contract double %2089, 1.700000e+00
  %2091 = fsub contract float 1.000000e+00, %27
  %2092 = fpext float %2091 to double
  %2093 = fmul contract double %2090, %2092
  %2094 = fpext float %27 to double
  %2095 = fmul contract double %2094, 1.190000e-02
  %2096 = fsub contract double %2093, %2095
  %2097 = fptrunc double %2096 to float
  %2098 = getelementptr inbounds float, float addrspace(1)* %2, i64 6
  store float %2097, float addrspace(1)* %2098, align 4, !tbaa !6
  %2099 = fmul contract float %89, 9.648500e+04
  %2100 = fmul contract float %2099, 0x3FA32ACBC0000000
  %2101 = fmul contract float %2100, 0x3F61B1D920000000
  %2102 = fpext float %2101 to double
  %2103 = fmul contract double %2079, 3.410000e-01
  %2104 = fmul contract float %89, 2.000000e+00
  %2105 = fmul contract float %2104, 0x3FA32ACBC0000000
  %2106 = fmul float %2105, 0x3FF7154760000000
  %2107 = tail call float @llvm.rint.f32(float %2106)
  %2108 = fcmp ogt float %2105, 0x40562E4300000000
  %2109 = fcmp olt float %2105, 0xC059D1DA00000000
  %2110 = fneg float %2106
  %2111 = tail call float @llvm.fma.f32(float %2105, float 0x3FF7154760000000, float %2110)
  %2112 = tail call float @llvm.fma.f32(float %2105, float 0x3E54AE0BE0000000, float %2111)
  %2113 = fsub float %2106, %2107
  %2114 = fadd float %2112, %2113
  %2115 = tail call float @llvm.exp2.f32(float %2114)
  %2116 = fptosi float %2107 to i32
  %2117 = tail call float @llvm.amdgcn.ldexp.f32(float %2115, i32 %2116)
  %2118 = select i1 %2109, float 0.000000e+00, float %2117
  %2119 = select i1 %2108, float 0x7FF0000000000000, float %2118
  %2120 = fpext float %2119 to double
  %2121 = fmul contract double %2103, %2120
  %2122 = fadd contract double %2121, 0xBFE3A43FDD0E5605
  %2123 = fmul contract double %2122, %2102
  %2124 = fadd contract float %2119, -1.000000e+00
  %2125 = fpext float %2124 to double
  %2126 = fdiv contract double %2123, %2125
  %2127 = fptrunc double %2126 to float
  %2128 = fmul contract double %2089, 3.410000e-01
  %2129 = fmul contract double %2128, %2120
  %2130 = fadd contract double %2129, 0xBFE3A43FDD0E5605
  %2131 = fmul contract double %2130, %2102
  %2132 = fdiv contract double %2131, %2125
  %2133 = fptrunc double %2132 to float
  %2134 = fmul contract float %89, 0x3FA32ACBC0000000
  %2135 = fmul float %2134, 0x3FF7154760000000
  %2136 = tail call float @llvm.rint.f32(float %2135)
  %2137 = fcmp ogt float %2134, 0x40562E4300000000
  %2138 = fcmp olt float %2134, 0xC059D1DA00000000
  %2139 = fneg float %2135
  %2140 = tail call float @llvm.fma.f32(float %2134, float 0x3FF7154760000000, float %2139)
  %2141 = tail call float @llvm.fma.f32(float %2134, float 0x3E54AE0BE0000000, float %2140)
  %2142 = fsub float %2135, %2136
  %2143 = fadd float %2141, %2142
  %2144 = tail call float @llvm.exp2.f32(float %2143)
  %2145 = fptosi float %2136 to i32
  %2146 = tail call float @llvm.amdgcn.ldexp.f32(float %2144, i32 %2145)
  %2147 = select i1 %2138, float 0.000000e+00, float %2146
  %2148 = select i1 %2137, float 0x7FF0000000000000, float %2147
  %2149 = fmul contract float %2100, 0x3E501B2B20000000
  %2150 = fpext float %2149 to double
  %2151 = fpext float %75 to double
  %2152 = fmul contract double %2151, 7.500000e-01
  %2153 = fpext float %2148 to double
  %2154 = fmul contract double %2152, %2153
  %2155 = fadd contract double %2154, -1.050000e+02
  %2156 = fmul contract double %2155, %2150
  %2157 = fadd contract float %2148, -1.000000e+00
  %2158 = fpext float %2157 to double
  %2159 = fdiv contract double %2156, %2158
  %2160 = fptrunc double %2159 to float
  %2161 = fpext float %77 to double
  %2162 = fmul contract double %2161, 7.500000e-01
  %2163 = fmul contract double %2162, %2153
  %2164 = fadd contract double %2163, -1.050000e+02
  %2165 = fmul contract double %2164, %2150
  %2166 = fdiv contract double %2165, %2158
  %2167 = fptrunc double %2166 to float
  %2168 = fmul contract float %2127, 0x3FECCCCCC0000000
  %2169 = fmul contract float %21, %2168
  %2170 = fmul contract float %23, %2169
  %2171 = fmul contract float %2081, %2170
  %2172 = fpext float %2171 to double
  %2173 = fmul contract double %2172, 4.500000e-01
  %2174 = fptrunc double %2173 to float
  %2175 = fmul contract float %2133, 0x3FB9999A00000000
  %2176 = fmul contract float %21, %2175
  %2177 = fmul contract float %23, %2176
  %2178 = fmul contract float %2091, %2177
  %2179 = fpext float %2178 to double
  %2180 = fmul contract double %2179, 4.500000e-01
  %2181 = fptrunc double %2180 to float
  %2182 = fadd contract float %2174, %2181
  %2183 = fmul contract float %2182, 0xBDE2FAF640000000
  %2184 = fdiv contract float %2183, 0x3ED15D4E40000000
  %2185 = fmul contract float %2184, 1.000000e+03
  %2186 = getelementptr inbounds float, float addrspace(1)* %2, i64 42
  store float %2185, float addrspace(1)* %2186, align 4, !tbaa !6
  %2187 = fmul contract float %2160, 0x3FECCCCCC0000000
  %2188 = fmul contract float %21, %2187
  %2189 = fmul contract float %23, %2188
  %2190 = fmul contract float %2081, %2189
  %2191 = fpext float %2190 to double
  %2192 = fmul contract double %2191, 4.500000e-01
  %2193 = fptrunc double %2192 to float
  %2194 = fmul contract float %2167, 0x3FB9999A00000000
  %2195 = fmul contract float %21, %2194
  %2196 = fmul contract float %23, %2195
  %2197 = fmul contract float %2091, %2196
  %2198 = fpext float %2197 to double
  %2199 = fmul contract double %2198, 4.500000e-01
  %2200 = fptrunc double %2199 to float
  %2201 = fdiv contract float 0x3F30C6F7A0000000, %83
  %2202 = tail call float @llvm.fabs.f32(float %2201)
  %2203 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2202)
  %2204 = fcmp olt float %2203, 0x3FE5555560000000
  %2205 = zext i1 %2204 to i32
  %2206 = tail call float @llvm.amdgcn.ldexp.f32(float %2203, i32 %2205)
  %2207 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2202)
  %2208 = sub nsw i32 %2207, %2205
  %2209 = fadd float %2206, -1.000000e+00
  %2210 = fadd float %2206, 1.000000e+00
  %2211 = fadd float %2210, -1.000000e+00
  %2212 = fsub float %2206, %2211
  %2213 = tail call float @llvm.amdgcn.rcp.f32(float %2210)
  %2214 = fmul float %2209, %2213
  %2215 = fmul float %2210, %2214
  %2216 = fneg float %2215
  %2217 = tail call float @llvm.fma.f32(float %2214, float %2210, float %2216)
  %2218 = tail call float @llvm.fma.f32(float %2214, float %2212, float %2217)
  %2219 = fadd float %2215, %2218
  %2220 = fsub float %2219, %2215
  %2221 = fsub float %2218, %2220
  %2222 = fsub float %2209, %2219
  %2223 = fsub float %2209, %2222
  %2224 = fsub float %2223, %2219
  %2225 = fsub float %2224, %2221
  %2226 = fadd float %2222, %2225
  %2227 = fmul float %2213, %2226
  %2228 = fadd float %2214, %2227
  %2229 = fsub float %2228, %2214
  %2230 = fsub float %2227, %2229
  %2231 = fmul float %2228, %2228
  %2232 = fneg float %2231
  %2233 = tail call float @llvm.fma.f32(float %2228, float %2228, float %2232)
  %2234 = fmul float %2230, 2.000000e+00
  %2235 = tail call float @llvm.fma.f32(float %2228, float %2234, float %2233)
  %2236 = fadd float %2231, %2235
  %2237 = fsub float %2236, %2231
  %2238 = fsub float %2235, %2237
  %2239 = tail call float @llvm.fmuladd.f32(float %2236, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2240 = tail call float @llvm.fmuladd.f32(float %2236, float %2239, float 0x3FD999BDE0000000)
  %2241 = sitofp i32 %2208 to float
  %2242 = fmul float %2241, 0x3FE62E4300000000
  %2243 = fneg float %2242
  %2244 = tail call float @llvm.fma.f32(float %2241, float 0x3FE62E4300000000, float %2243)
  %2245 = tail call float @llvm.fma.f32(float %2241, float 0xBE205C6100000000, float %2244)
  %2246 = fadd float %2242, %2245
  %2247 = fsub float %2246, %2242
  %2248 = fsub float %2245, %2247
  %2249 = tail call float @llvm.amdgcn.ldexp.f32(float %2228, i32 1)
  %2250 = fmul float %2228, %2236
  %2251 = fneg float %2250
  %2252 = tail call float @llvm.fma.f32(float %2236, float %2228, float %2251)
  %2253 = tail call float @llvm.fma.f32(float %2236, float %2230, float %2252)
  %2254 = tail call float @llvm.fma.f32(float %2238, float %2228, float %2253)
  %2255 = fadd float %2250, %2254
  %2256 = fsub float %2255, %2250
  %2257 = fsub float %2254, %2256
  %2258 = fmul float %2236, %2240
  %2259 = fneg float %2258
  %2260 = tail call float @llvm.fma.f32(float %2236, float %2240, float %2259)
  %2261 = tail call float @llvm.fma.f32(float %2238, float %2240, float %2260)
  %2262 = fadd float %2258, %2261
  %2263 = fsub float %2262, %2258
  %2264 = fsub float %2261, %2263
  %2265 = fadd float %2262, 0x3FE5555540000000
  %2266 = fadd float %2265, 0xBFE5555540000000
  %2267 = fsub float %2262, %2266
  %2268 = fadd float %2264, 0x3E2E720200000000
  %2269 = fadd float %2268, %2267
  %2270 = fadd float %2265, %2269
  %2271 = fsub float %2270, %2265
  %2272 = fsub float %2269, %2271
  %2273 = fmul float %2255, %2270
  %2274 = fneg float %2273
  %2275 = tail call float @llvm.fma.f32(float %2255, float %2270, float %2274)
  %2276 = tail call float @llvm.fma.f32(float %2255, float %2272, float %2275)
  %2277 = tail call float @llvm.fma.f32(float %2257, float %2270, float %2276)
  %2278 = tail call float @llvm.amdgcn.ldexp.f32(float %2230, i32 1)
  %2279 = fadd float %2273, %2277
  %2280 = fsub float %2279, %2273
  %2281 = fsub float %2277, %2280
  %2282 = fadd float %2249, %2279
  %2283 = fsub float %2282, %2249
  %2284 = fsub float %2279, %2283
  %2285 = fadd float %2278, %2281
  %2286 = fadd float %2285, %2284
  %2287 = fadd float %2282, %2286
  %2288 = fsub float %2287, %2282
  %2289 = fsub float %2286, %2288
  %2290 = fadd float %2246, %2287
  %2291 = fsub float %2290, %2246
  %2292 = fsub float %2290, %2291
  %2293 = fsub float %2246, %2292
  %2294 = fsub float %2287, %2291
  %2295 = fadd float %2294, %2293
  %2296 = fadd float %2248, %2289
  %2297 = fsub float %2296, %2248
  %2298 = fsub float %2296, %2297
  %2299 = fsub float %2248, %2298
  %2300 = fsub float %2289, %2297
  %2301 = fadd float %2300, %2299
  %2302 = fadd float %2296, %2295
  %2303 = fadd float %2290, %2302
  %2304 = fsub float %2303, %2290
  %2305 = fsub float %2302, %2304
  %2306 = fadd float %2301, %2305
  %2307 = fadd float %2303, %2306
  %2308 = fsub float %2307, %2303
  %2309 = fsub float %2306, %2308
  %2310 = fmul float %2307, 3.000000e+00
  %2311 = fneg float %2310
  %2312 = tail call float @llvm.fma.f32(float %2307, float 3.000000e+00, float %2311)
  %2313 = fmul float %2307, 0.000000e+00
  %2314 = tail call float @llvm.fma.f32(float %2309, float 3.000000e+00, float %2313)
  %2315 = fadd float %2312, %2314
  %2316 = fadd float %2310, %2315
  %2317 = fsub float %2316, %2310
  %2318 = fsub float %2315, %2317
  %2319 = tail call float @llvm.fabs.f32(float %2310) #3
  %2320 = fcmp oeq float %2319, 0x7FF0000000000000
  %2321 = select i1 %2320, float %2310, float %2316
  %2322 = tail call float @llvm.fabs.f32(float %2321) #3
  %2323 = fcmp oeq float %2322, 0x7FF0000000000000
  %2324 = select i1 %2323, float 0.000000e+00, float %2318
  %2325 = fcmp oeq float %2321, 0x40562E4300000000
  %2326 = select i1 %2325, float 0x3EE0000000000000, float 0.000000e+00
  %2327 = fsub float %2321, %2326
  %2328 = fadd float %2326, %2324
  %2329 = fmul float %2327, 0x3FF7154760000000
  %2330 = tail call float @llvm.rint.f32(float %2329)
  %2331 = fcmp ogt float %2327, 0x40562E4300000000
  %2332 = fcmp olt float %2327, 0xC059D1DA00000000
  %2333 = fneg float %2329
  %2334 = tail call float @llvm.fma.f32(float %2327, float 0x3FF7154760000000, float %2333)
  %2335 = tail call float @llvm.fma.f32(float %2327, float 0x3E54AE0BE0000000, float %2334)
  %2336 = fsub float %2329, %2330
  %2337 = fadd float %2335, %2336
  %2338 = tail call float @llvm.exp2.f32(float %2337)
  %2339 = fptosi float %2330 to i32
  %2340 = tail call float @llvm.amdgcn.ldexp.f32(float %2338, i32 %2339)
  %2341 = select i1 %2332, float 0.000000e+00, float %2340
  %2342 = select i1 %2331, float 0x7FF0000000000000, float %2341
  %2343 = tail call float @llvm.fma.f32(float %2342, float %2328, float %2342)
  %2344 = tail call float @llvm.fabs.f32(float %2342) #3
  %2345 = fcmp oeq float %2344, 0x7FF0000000000000
  %2346 = select i1 %2345, float %2342, float %2343
  %2347 = fcmp uge float %2201, 0.000000e+00
  %2348 = select i1 %2347, float 0.000000e+00, float -0.000000e+00
  %2349 = tail call float @llvm.copysign.f32(float %2346, float %2348)
  %2350 = fcmp oeq float %2202, 0x7FF0000000000000
  %2351 = fcmp oeq float %2201, 0.000000e+00
  %2352 = or i1 %2351, %2350
  %2353 = select i1 %2351, float 0.000000e+00, float 0x7FF0000000000000
  %2354 = tail call float @llvm.copysign.f32(float %2353, float %2201)
  %2355 = select i1 %2352, float %2354, float %2349
  %2356 = fcmp uno float %2201, 0.000000e+00
  %2357 = fadd contract float %2355, 1.000000e+00
  %2358 = fdiv contract float 1.000000e+00, %2357
  %2359 = fdiv contract float 0x3F30C6F7A0000000, %85
  %2360 = tail call float @llvm.fabs.f32(float %2359)
  %2361 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2360)
  %2362 = fcmp olt float %2361, 0x3FE5555560000000
  %2363 = zext i1 %2362 to i32
  %2364 = tail call float @llvm.amdgcn.ldexp.f32(float %2361, i32 %2363)
  %2365 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2360)
  %2366 = sub nsw i32 %2365, %2363
  %2367 = fadd float %2364, -1.000000e+00
  %2368 = fadd float %2364, 1.000000e+00
  %2369 = fadd float %2368, -1.000000e+00
  %2370 = fsub float %2364, %2369
  %2371 = tail call float @llvm.amdgcn.rcp.f32(float %2368)
  %2372 = fmul float %2367, %2371
  %2373 = fmul float %2368, %2372
  %2374 = fneg float %2373
  %2375 = tail call float @llvm.fma.f32(float %2372, float %2368, float %2374)
  %2376 = tail call float @llvm.fma.f32(float %2372, float %2370, float %2375)
  %2377 = fadd float %2373, %2376
  %2378 = fsub float %2377, %2373
  %2379 = fsub float %2376, %2378
  %2380 = fsub float %2367, %2377
  %2381 = fsub float %2367, %2380
  %2382 = fsub float %2381, %2377
  %2383 = fsub float %2382, %2379
  %2384 = fadd float %2380, %2383
  %2385 = fmul float %2371, %2384
  %2386 = fadd float %2372, %2385
  %2387 = fsub float %2386, %2372
  %2388 = fsub float %2385, %2387
  %2389 = fmul float %2386, %2386
  %2390 = fneg float %2389
  %2391 = tail call float @llvm.fma.f32(float %2386, float %2386, float %2390)
  %2392 = fmul float %2388, 2.000000e+00
  %2393 = tail call float @llvm.fma.f32(float %2386, float %2392, float %2391)
  %2394 = fadd float %2389, %2393
  %2395 = fsub float %2394, %2389
  %2396 = fsub float %2393, %2395
  %2397 = tail call float @llvm.fmuladd.f32(float %2394, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2398 = tail call float @llvm.fmuladd.f32(float %2394, float %2397, float 0x3FD999BDE0000000)
  %2399 = sitofp i32 %2366 to float
  %2400 = fmul float %2399, 0x3FE62E4300000000
  %2401 = fneg float %2400
  %2402 = tail call float @llvm.fma.f32(float %2399, float 0x3FE62E4300000000, float %2401)
  %2403 = tail call float @llvm.fma.f32(float %2399, float 0xBE205C6100000000, float %2402)
  %2404 = fadd float %2400, %2403
  %2405 = fsub float %2404, %2400
  %2406 = fsub float %2403, %2405
  %2407 = tail call float @llvm.amdgcn.ldexp.f32(float %2386, i32 1)
  %2408 = fmul float %2386, %2394
  %2409 = fneg float %2408
  %2410 = tail call float @llvm.fma.f32(float %2394, float %2386, float %2409)
  %2411 = tail call float @llvm.fma.f32(float %2394, float %2388, float %2410)
  %2412 = tail call float @llvm.fma.f32(float %2396, float %2386, float %2411)
  %2413 = fadd float %2408, %2412
  %2414 = fsub float %2413, %2408
  %2415 = fsub float %2412, %2414
  %2416 = fmul float %2394, %2398
  %2417 = fneg float %2416
  %2418 = tail call float @llvm.fma.f32(float %2394, float %2398, float %2417)
  %2419 = tail call float @llvm.fma.f32(float %2396, float %2398, float %2418)
  %2420 = fadd float %2416, %2419
  %2421 = fsub float %2420, %2416
  %2422 = fsub float %2419, %2421
  %2423 = fadd float %2420, 0x3FE5555540000000
  %2424 = fadd float %2423, 0xBFE5555540000000
  %2425 = fsub float %2420, %2424
  %2426 = fadd float %2422, 0x3E2E720200000000
  %2427 = fadd float %2426, %2425
  %2428 = fadd float %2423, %2427
  %2429 = fsub float %2428, %2423
  %2430 = fsub float %2427, %2429
  %2431 = fmul float %2413, %2428
  %2432 = fneg float %2431
  %2433 = tail call float @llvm.fma.f32(float %2413, float %2428, float %2432)
  %2434 = tail call float @llvm.fma.f32(float %2413, float %2430, float %2433)
  %2435 = tail call float @llvm.fma.f32(float %2415, float %2428, float %2434)
  %2436 = tail call float @llvm.amdgcn.ldexp.f32(float %2388, i32 1)
  %2437 = fadd float %2431, %2435
  %2438 = fsub float %2437, %2431
  %2439 = fsub float %2435, %2438
  %2440 = fadd float %2407, %2437
  %2441 = fsub float %2440, %2407
  %2442 = fsub float %2437, %2441
  %2443 = fadd float %2436, %2439
  %2444 = fadd float %2443, %2442
  %2445 = fadd float %2440, %2444
  %2446 = fsub float %2445, %2440
  %2447 = fsub float %2444, %2446
  %2448 = fadd float %2404, %2445
  %2449 = fsub float %2448, %2404
  %2450 = fsub float %2448, %2449
  %2451 = fsub float %2404, %2450
  %2452 = fsub float %2445, %2449
  %2453 = fadd float %2452, %2451
  %2454 = fadd float %2406, %2447
  %2455 = fsub float %2454, %2406
  %2456 = fsub float %2454, %2455
  %2457 = fsub float %2406, %2456
  %2458 = fsub float %2447, %2455
  %2459 = fadd float %2458, %2457
  %2460 = fadd float %2454, %2453
  %2461 = fadd float %2448, %2460
  %2462 = fsub float %2461, %2448
  %2463 = fsub float %2460, %2462
  %2464 = fadd float %2459, %2463
  %2465 = fadd float %2461, %2464
  %2466 = fsub float %2465, %2461
  %2467 = fsub float %2464, %2466
  %2468 = fmul float %2465, 3.000000e+00
  %2469 = fneg float %2468
  %2470 = tail call float @llvm.fma.f32(float %2465, float 3.000000e+00, float %2469)
  %2471 = fmul float %2465, 0.000000e+00
  %2472 = tail call float @llvm.fma.f32(float %2467, float 3.000000e+00, float %2471)
  %2473 = fadd float %2470, %2472
  %2474 = fadd float %2468, %2473
  %2475 = fsub float %2474, %2468
  %2476 = fsub float %2473, %2475
  %2477 = tail call float @llvm.fabs.f32(float %2468) #3
  %2478 = fcmp oeq float %2477, 0x7FF0000000000000
  %2479 = select i1 %2478, float %2468, float %2474
  %2480 = tail call float @llvm.fabs.f32(float %2479) #3
  %2481 = fcmp oeq float %2480, 0x7FF0000000000000
  %2482 = select i1 %2481, float 0.000000e+00, float %2476
  %2483 = fcmp oeq float %2479, 0x40562E4300000000
  %2484 = select i1 %2483, float 0x3EE0000000000000, float 0.000000e+00
  %2485 = fsub float %2479, %2484
  %2486 = fadd float %2484, %2482
  %2487 = fmul float %2485, 0x3FF7154760000000
  %2488 = tail call float @llvm.rint.f32(float %2487)
  %2489 = fcmp ogt float %2485, 0x40562E4300000000
  %2490 = fcmp olt float %2485, 0xC059D1DA00000000
  %2491 = fneg float %2487
  %2492 = tail call float @llvm.fma.f32(float %2485, float 0x3FF7154760000000, float %2491)
  %2493 = tail call float @llvm.fma.f32(float %2485, float 0x3E54AE0BE0000000, float %2492)
  %2494 = fsub float %2487, %2488
  %2495 = fadd float %2493, %2494
  %2496 = tail call float @llvm.exp2.f32(float %2495)
  %2497 = fptosi float %2488 to i32
  %2498 = tail call float @llvm.amdgcn.ldexp.f32(float %2496, i32 %2497)
  %2499 = select i1 %2490, float 0.000000e+00, float %2498
  %2500 = select i1 %2489, float 0x7FF0000000000000, float %2499
  %2501 = tail call float @llvm.fma.f32(float %2500, float %2486, float %2500)
  %2502 = tail call float @llvm.fabs.f32(float %2500) #3
  %2503 = fcmp oeq float %2502, 0x7FF0000000000000
  %2504 = select i1 %2503, float %2500, float %2501
  %2505 = fcmp uge float %2359, 0.000000e+00
  %2506 = select i1 %2505, float 0.000000e+00, float -0.000000e+00
  %2507 = tail call float @llvm.copysign.f32(float %2504, float %2506)
  %2508 = fcmp oeq float %2360, 0x7FF0000000000000
  %2509 = fcmp oeq float %2359, 0.000000e+00
  %2510 = or i1 %2509, %2508
  %2511 = select i1 %2509, float 0.000000e+00, float 0x7FF0000000000000
  %2512 = tail call float @llvm.copysign.f32(float %2511, float %2359)
  %2513 = select i1 %2510, float %2512, float %2507
  %2514 = fcmp uno float %2359, 0.000000e+00
  %2515 = fadd contract float %2513, 1.000000e+00
  %2516 = fdiv contract float 1.000000e+00, %2515
  %2517 = fmul contract float %89, 0x3FD6666660000000
  %2518 = fmul contract float %2517, 0x3FA32ACBC0000000
  %2519 = fmul float %2518, 0x3FF7154760000000
  %2520 = tail call float @llvm.rint.f32(float %2519)
  %2521 = fcmp ogt float %2518, 0x40562E4300000000
  %2522 = fcmp olt float %2518, 0xC059D1DA00000000
  %2523 = fneg float %2519
  %2524 = tail call float @llvm.fma.f32(float %2518, float 0x3FF7154760000000, float %2523)
  %2525 = tail call float @llvm.fma.f32(float %2518, float 0x3E54AE0BE0000000, float %2524)
  %2526 = fsub float %2519, %2520
  %2527 = fadd float %2525, %2526
  %2528 = tail call float @llvm.exp2.f32(float %2527)
  %2529 = fptosi float %2520 to i32
  %2530 = tail call float @llvm.amdgcn.ldexp.f32(float %2528, i32 %2529)
  %2531 = select i1 %2522, float 0.000000e+00, float %2530
  %2532 = select i1 %2521, float 0x7FF0000000000000, float %2531
  %2533 = tail call float @llvm.fabs.f32(float %75)
  %2534 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2533)
  %2535 = fcmp olt float %2534, 0x3FE5555560000000
  %2536 = zext i1 %2535 to i32
  %2537 = tail call float @llvm.amdgcn.ldexp.f32(float %2534, i32 %2536)
  %2538 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2533)
  %2539 = sub nsw i32 %2538, %2536
  %2540 = fadd float %2537, -1.000000e+00
  %2541 = fadd float %2537, 1.000000e+00
  %2542 = fadd float %2541, -1.000000e+00
  %2543 = fsub float %2537, %2542
  %2544 = tail call float @llvm.amdgcn.rcp.f32(float %2541)
  %2545 = fmul float %2540, %2544
  %2546 = fmul float %2541, %2545
  %2547 = fneg float %2546
  %2548 = tail call float @llvm.fma.f32(float %2545, float %2541, float %2547)
  %2549 = tail call float @llvm.fma.f32(float %2545, float %2543, float %2548)
  %2550 = fadd float %2546, %2549
  %2551 = fsub float %2550, %2546
  %2552 = fsub float %2549, %2551
  %2553 = fsub float %2540, %2550
  %2554 = fsub float %2540, %2553
  %2555 = fsub float %2554, %2550
  %2556 = fsub float %2555, %2552
  %2557 = fadd float %2553, %2556
  %2558 = fmul float %2544, %2557
  %2559 = fadd float %2545, %2558
  %2560 = fsub float %2559, %2545
  %2561 = fsub float %2558, %2560
  %2562 = fmul float %2559, %2559
  %2563 = fneg float %2562
  %2564 = tail call float @llvm.fma.f32(float %2559, float %2559, float %2563)
  %2565 = fmul float %2561, 2.000000e+00
  %2566 = tail call float @llvm.fma.f32(float %2559, float %2565, float %2564)
  %2567 = fadd float %2562, %2566
  %2568 = fsub float %2567, %2562
  %2569 = fsub float %2566, %2568
  %2570 = tail call float @llvm.fmuladd.f32(float %2567, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2571 = tail call float @llvm.fmuladd.f32(float %2567, float %2570, float 0x3FD999BDE0000000)
  %2572 = sitofp i32 %2539 to float
  %2573 = fmul float %2572, 0x3FE62E4300000000
  %2574 = fneg float %2573
  %2575 = tail call float @llvm.fma.f32(float %2572, float 0x3FE62E4300000000, float %2574)
  %2576 = tail call float @llvm.fma.f32(float %2572, float 0xBE205C6100000000, float %2575)
  %2577 = fadd float %2573, %2576
  %2578 = fsub float %2577, %2573
  %2579 = fsub float %2576, %2578
  %2580 = tail call float @llvm.amdgcn.ldexp.f32(float %2559, i32 1)
  %2581 = fmul float %2559, %2567
  %2582 = fneg float %2581
  %2583 = tail call float @llvm.fma.f32(float %2567, float %2559, float %2582)
  %2584 = tail call float @llvm.fma.f32(float %2567, float %2561, float %2583)
  %2585 = tail call float @llvm.fma.f32(float %2569, float %2559, float %2584)
  %2586 = fadd float %2581, %2585
  %2587 = fsub float %2586, %2581
  %2588 = fsub float %2585, %2587
  %2589 = fmul float %2567, %2571
  %2590 = fneg float %2589
  %2591 = tail call float @llvm.fma.f32(float %2567, float %2571, float %2590)
  %2592 = tail call float @llvm.fma.f32(float %2569, float %2571, float %2591)
  %2593 = fadd float %2589, %2592
  %2594 = fsub float %2593, %2589
  %2595 = fsub float %2592, %2594
  %2596 = fadd float %2593, 0x3FE5555540000000
  %2597 = fadd float %2596, 0xBFE5555540000000
  %2598 = fsub float %2593, %2597
  %2599 = fadd float %2595, 0x3E2E720200000000
  %2600 = fadd float %2599, %2598
  %2601 = fadd float %2596, %2600
  %2602 = fsub float %2601, %2596
  %2603 = fsub float %2600, %2602
  %2604 = fmul float %2586, %2601
  %2605 = fneg float %2604
  %2606 = tail call float @llvm.fma.f32(float %2586, float %2601, float %2605)
  %2607 = tail call float @llvm.fma.f32(float %2586, float %2603, float %2606)
  %2608 = tail call float @llvm.fma.f32(float %2588, float %2601, float %2607)
  %2609 = tail call float @llvm.amdgcn.ldexp.f32(float %2561, i32 1)
  %2610 = fadd float %2604, %2608
  %2611 = fsub float %2610, %2604
  %2612 = fsub float %2608, %2611
  %2613 = fadd float %2580, %2610
  %2614 = fsub float %2613, %2580
  %2615 = fsub float %2610, %2614
  %2616 = fadd float %2609, %2612
  %2617 = fadd float %2616, %2615
  %2618 = fadd float %2613, %2617
  %2619 = fsub float %2618, %2613
  %2620 = fsub float %2617, %2619
  %2621 = fadd float %2577, %2618
  %2622 = fsub float %2621, %2577
  %2623 = fsub float %2621, %2622
  %2624 = fsub float %2577, %2623
  %2625 = fsub float %2618, %2622
  %2626 = fadd float %2625, %2624
  %2627 = fadd float %2579, %2620
  %2628 = fsub float %2627, %2579
  %2629 = fsub float %2627, %2628
  %2630 = fsub float %2579, %2629
  %2631 = fsub float %2620, %2628
  %2632 = fadd float %2631, %2630
  %2633 = fadd float %2627, %2626
  %2634 = fadd float %2621, %2633
  %2635 = fsub float %2634, %2621
  %2636 = fsub float %2633, %2635
  %2637 = fadd float %2632, %2636
  %2638 = fadd float %2634, %2637
  %2639 = fsub float %2638, %2634
  %2640 = fsub float %2637, %2639
  %2641 = fmul float %2638, 3.000000e+00
  %2642 = fneg float %2641
  %2643 = tail call float @llvm.fma.f32(float %2638, float 3.000000e+00, float %2642)
  %2644 = fmul float %2638, 0.000000e+00
  %2645 = tail call float @llvm.fma.f32(float %2640, float 3.000000e+00, float %2644)
  %2646 = fadd float %2643, %2645
  %2647 = fadd float %2641, %2646
  %2648 = fsub float %2647, %2641
  %2649 = fsub float %2646, %2648
  %2650 = tail call float @llvm.fabs.f32(float %2641) #3
  %2651 = fcmp oeq float %2650, 0x7FF0000000000000
  %2652 = select i1 %2651, float %2641, float %2647
  %2653 = tail call float @llvm.fabs.f32(float %2652) #3
  %2654 = fcmp oeq float %2653, 0x7FF0000000000000
  %2655 = select i1 %2654, float 0.000000e+00, float %2649
  %2656 = fcmp oeq float %2652, 0x40562E4300000000
  %2657 = select i1 %2656, float 0x3EE0000000000000, float 0.000000e+00
  %2658 = fsub float %2652, %2657
  %2659 = fadd float %2657, %2655
  %2660 = fmul float %2658, 0x3FF7154760000000
  %2661 = tail call float @llvm.rint.f32(float %2660)
  %2662 = fcmp ogt float %2658, 0x40562E4300000000
  %2663 = fcmp olt float %2658, 0xC059D1DA00000000
  %2664 = fneg float %2660
  %2665 = tail call float @llvm.fma.f32(float %2658, float 0x3FF7154760000000, float %2664)
  %2666 = tail call float @llvm.fma.f32(float %2658, float 0x3E54AE0BE0000000, float %2665)
  %2667 = fsub float %2660, %2661
  %2668 = fadd float %2666, %2667
  %2669 = tail call float @llvm.exp2.f32(float %2668)
  %2670 = fptosi float %2661 to i32
  %2671 = tail call float @llvm.amdgcn.ldexp.f32(float %2669, i32 %2670)
  %2672 = select i1 %2663, float 0.000000e+00, float %2671
  %2673 = select i1 %2662, float 0x7FF0000000000000, float %2672
  %2674 = tail call float @llvm.fma.f32(float %2673, float %2659, float %2673)
  %2675 = tail call float @llvm.fabs.f32(float %2673) #3
  %2676 = fcmp oeq float %2675, 0x7FF0000000000000
  %2677 = select i1 %2676, float %2673, float %2674
  %2678 = fcmp uge float %75, 0.000000e+00
  %2679 = select i1 %2678, float 0.000000e+00, float -0.000000e+00
  %2680 = tail call float @llvm.copysign.f32(float %2677, float %2679)
  %2681 = fcmp oeq float %2533, 0x7FF0000000000000
  %2682 = fcmp oeq float %75, 0.000000e+00
  %2683 = or i1 %2682, %2681
  %2684 = select i1 %2682, float 0.000000e+00, float 0x7FF0000000000000
  %2685 = tail call float @llvm.copysign.f32(float %2684, float %75)
  %2686 = select i1 %2683, float %2685, float %2680
  %2687 = fcmp uno float %75, 0.000000e+00
  %2688 = select i1 %2687, float 0x7FF8000000000000, float %2686
  %2689 = fmul contract float %2532, %2688
  %2690 = fmul contract float %2689, 0x3FFCCCCCC0000000
  %2691 = tail call float @llvm.fabs.f32(float %77)
  %2692 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2691)
  %2693 = fcmp olt float %2692, 0x3FE5555560000000
  %2694 = zext i1 %2693 to i32
  %2695 = tail call float @llvm.amdgcn.ldexp.f32(float %2692, i32 %2694)
  %2696 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2691)
  %2697 = sub nsw i32 %2696, %2694
  %2698 = fadd float %2695, -1.000000e+00
  %2699 = fadd float %2695, 1.000000e+00
  %2700 = fadd float %2699, -1.000000e+00
  %2701 = fsub float %2695, %2700
  %2702 = tail call float @llvm.amdgcn.rcp.f32(float %2699)
  %2703 = fmul float %2698, %2702
  %2704 = fmul float %2699, %2703
  %2705 = fneg float %2704
  %2706 = tail call float @llvm.fma.f32(float %2703, float %2699, float %2705)
  %2707 = tail call float @llvm.fma.f32(float %2703, float %2701, float %2706)
  %2708 = fadd float %2704, %2707
  %2709 = fsub float %2708, %2704
  %2710 = fsub float %2707, %2709
  %2711 = fsub float %2698, %2708
  %2712 = fsub float %2698, %2711
  %2713 = fsub float %2712, %2708
  %2714 = fsub float %2713, %2710
  %2715 = fadd float %2711, %2714
  %2716 = fmul float %2702, %2715
  %2717 = fadd float %2703, %2716
  %2718 = fsub float %2717, %2703
  %2719 = fsub float %2716, %2718
  %2720 = fmul float %2717, %2717
  %2721 = fneg float %2720
  %2722 = tail call float @llvm.fma.f32(float %2717, float %2717, float %2721)
  %2723 = fmul float %2719, 2.000000e+00
  %2724 = tail call float @llvm.fma.f32(float %2717, float %2723, float %2722)
  %2725 = fadd float %2720, %2724
  %2726 = fsub float %2725, %2720
  %2727 = fsub float %2724, %2726
  %2728 = tail call float @llvm.fmuladd.f32(float %2725, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2729 = tail call float @llvm.fmuladd.f32(float %2725, float %2728, float 0x3FD999BDE0000000)
  %2730 = sitofp i32 %2697 to float
  %2731 = fmul float %2730, 0x3FE62E4300000000
  %2732 = fneg float %2731
  %2733 = tail call float @llvm.fma.f32(float %2730, float 0x3FE62E4300000000, float %2732)
  %2734 = tail call float @llvm.fma.f32(float %2730, float 0xBE205C6100000000, float %2733)
  %2735 = fadd float %2731, %2734
  %2736 = fsub float %2735, %2731
  %2737 = fsub float %2734, %2736
  %2738 = tail call float @llvm.amdgcn.ldexp.f32(float %2717, i32 1)
  %2739 = fmul float %2717, %2725
  %2740 = fneg float %2739
  %2741 = tail call float @llvm.fma.f32(float %2725, float %2717, float %2740)
  %2742 = tail call float @llvm.fma.f32(float %2725, float %2719, float %2741)
  %2743 = tail call float @llvm.fma.f32(float %2727, float %2717, float %2742)
  %2744 = fadd float %2739, %2743
  %2745 = fsub float %2744, %2739
  %2746 = fsub float %2743, %2745
  %2747 = fmul float %2725, %2729
  %2748 = fneg float %2747
  %2749 = tail call float @llvm.fma.f32(float %2725, float %2729, float %2748)
  %2750 = tail call float @llvm.fma.f32(float %2727, float %2729, float %2749)
  %2751 = fadd float %2747, %2750
  %2752 = fsub float %2751, %2747
  %2753 = fsub float %2750, %2752
  %2754 = fadd float %2751, 0x3FE5555540000000
  %2755 = fadd float %2754, 0xBFE5555540000000
  %2756 = fsub float %2751, %2755
  %2757 = fadd float %2753, 0x3E2E720200000000
  %2758 = fadd float %2757, %2756
  %2759 = fadd float %2754, %2758
  %2760 = fsub float %2759, %2754
  %2761 = fsub float %2758, %2760
  %2762 = fmul float %2744, %2759
  %2763 = fneg float %2762
  %2764 = tail call float @llvm.fma.f32(float %2744, float %2759, float %2763)
  %2765 = tail call float @llvm.fma.f32(float %2744, float %2761, float %2764)
  %2766 = tail call float @llvm.fma.f32(float %2746, float %2759, float %2765)
  %2767 = tail call float @llvm.amdgcn.ldexp.f32(float %2719, i32 1)
  %2768 = fadd float %2762, %2766
  %2769 = fsub float %2768, %2762
  %2770 = fsub float %2766, %2769
  %2771 = fadd float %2738, %2768
  %2772 = fsub float %2771, %2738
  %2773 = fsub float %2768, %2772
  %2774 = fadd float %2767, %2770
  %2775 = fadd float %2774, %2773
  %2776 = fadd float %2771, %2775
  %2777 = fsub float %2776, %2771
  %2778 = fsub float %2775, %2777
  %2779 = fadd float %2735, %2776
  %2780 = fsub float %2779, %2735
  %2781 = fsub float %2779, %2780
  %2782 = fsub float %2735, %2781
  %2783 = fsub float %2776, %2780
  %2784 = fadd float %2783, %2782
  %2785 = fadd float %2737, %2778
  %2786 = fsub float %2785, %2737
  %2787 = fsub float %2785, %2786
  %2788 = fsub float %2737, %2787
  %2789 = fsub float %2778, %2786
  %2790 = fadd float %2789, %2788
  %2791 = fadd float %2785, %2784
  %2792 = fadd float %2779, %2791
  %2793 = fsub float %2792, %2779
  %2794 = fsub float %2791, %2793
  %2795 = fadd float %2790, %2794
  %2796 = fadd float %2792, %2795
  %2797 = fsub float %2796, %2792
  %2798 = fsub float %2795, %2797
  %2799 = fmul float %2796, 3.000000e+00
  %2800 = fneg float %2799
  %2801 = tail call float @llvm.fma.f32(float %2796, float 3.000000e+00, float %2800)
  %2802 = fmul float %2796, 0.000000e+00
  %2803 = tail call float @llvm.fma.f32(float %2798, float 3.000000e+00, float %2802)
  %2804 = fadd float %2801, %2803
  %2805 = fadd float %2799, %2804
  %2806 = fsub float %2805, %2799
  %2807 = fsub float %2804, %2806
  %2808 = tail call float @llvm.fabs.f32(float %2799) #3
  %2809 = fcmp oeq float %2808, 0x7FF0000000000000
  %2810 = select i1 %2809, float %2799, float %2805
  %2811 = tail call float @llvm.fabs.f32(float %2810) #3
  %2812 = fcmp oeq float %2811, 0x7FF0000000000000
  %2813 = select i1 %2812, float 0.000000e+00, float %2807
  %2814 = fcmp oeq float %2810, 0x40562E4300000000
  %2815 = select i1 %2814, float 0x3EE0000000000000, float 0.000000e+00
  %2816 = fsub float %2810, %2815
  %2817 = fadd float %2815, %2813
  %2818 = fmul float %2816, 0x3FF7154760000000
  %2819 = tail call float @llvm.rint.f32(float %2818)
  %2820 = fcmp ogt float %2816, 0x40562E4300000000
  %2821 = fcmp olt float %2816, 0xC059D1DA00000000
  %2822 = fneg float %2818
  %2823 = tail call float @llvm.fma.f32(float %2816, float 0x3FF7154760000000, float %2822)
  %2824 = tail call float @llvm.fma.f32(float %2816, float 0x3E54AE0BE0000000, float %2823)
  %2825 = fsub float %2818, %2819
  %2826 = fadd float %2824, %2825
  %2827 = tail call float @llvm.exp2.f32(float %2826)
  %2828 = fptosi float %2819 to i32
  %2829 = tail call float @llvm.amdgcn.ldexp.f32(float %2827, i32 %2828)
  %2830 = select i1 %2821, float 0.000000e+00, float %2829
  %2831 = select i1 %2820, float 0x7FF0000000000000, float %2830
  %2832 = tail call float @llvm.fma.f32(float %2831, float %2817, float %2831)
  %2833 = tail call float @llvm.fabs.f32(float %2831) #3
  %2834 = fcmp oeq float %2833, 0x7FF0000000000000
  %2835 = select i1 %2834, float %2831, float %2832
  %2836 = fcmp uge float %77, 0.000000e+00
  %2837 = select i1 %2836, float 0.000000e+00, float -0.000000e+00
  %2838 = tail call float @llvm.copysign.f32(float %2835, float %2837)
  %2839 = fcmp oeq float %2691, 0x7FF0000000000000
  %2840 = fcmp oeq float %77, 0.000000e+00
  %2841 = or i1 %2840, %2839
  %2842 = select i1 %2840, float 0.000000e+00, float 0x7FF0000000000000
  %2843 = tail call float @llvm.copysign.f32(float %2842, float %77)
  %2844 = select i1 %2841, float %2843, float %2838
  %2845 = fcmp uno float %77, 0.000000e+00
  %2846 = select i1 %2845, float 0x7FF8000000000000, float %2844
  %2847 = fmul contract float %2532, %2846
  %2848 = fmul contract float %2847, 0x3FFCCCCCC0000000
  %2849 = fmul contract float %89, 0xBFE4CCCCC0000000
  %2850 = fmul contract float %2849, 0x3FA32ACBC0000000
  %2851 = fmul float %2850, 0x3FF7154760000000
  %2852 = tail call float @llvm.rint.f32(float %2851)
  %2853 = fcmp ogt float %2850, 0x40562E4300000000
  %2854 = fcmp olt float %2850, 0xC059D1DA00000000
  %2855 = fneg float %2851
  %2856 = tail call float @llvm.fma.f32(float %2850, float 0x3FF7154760000000, float %2855)
  %2857 = tail call float @llvm.fma.f32(float %2850, float 0x3E54AE0BE0000000, float %2856)
  %2858 = fsub float %2851, %2852
  %2859 = fadd float %2857, %2858
  %2860 = tail call float @llvm.exp2.f32(float %2859)
  %2861 = fptosi float %2852 to i32
  %2862 = tail call float @llvm.amdgcn.ldexp.f32(float %2860, i32 %2861)
  %2863 = select i1 %2854, float 0.000000e+00, float %2862
  %2864 = select i1 %2853, float 0x7FF0000000000000, float %2863
  %2865 = fmul contract float %2864, 2.744000e+06
  %2866 = fmul contract float %83, %2865
  %2867 = fdiv contract float %75, 0x4028947AE0000000
  %2868 = tail call float @llvm.fabs.f32(float %2867)
  %2869 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2868)
  %2870 = fcmp olt float %2869, 0x3FE5555560000000
  %2871 = zext i1 %2870 to i32
  %2872 = tail call float @llvm.amdgcn.ldexp.f32(float %2869, i32 %2871)
  %2873 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2868)
  %2874 = sub nsw i32 %2873, %2871
  %2875 = fadd float %2872, -1.000000e+00
  %2876 = fadd float %2872, 1.000000e+00
  %2877 = fadd float %2876, -1.000000e+00
  %2878 = fsub float %2872, %2877
  %2879 = tail call float @llvm.amdgcn.rcp.f32(float %2876)
  %2880 = fmul float %2875, %2879
  %2881 = fmul float %2876, %2880
  %2882 = fneg float %2881
  %2883 = tail call float @llvm.fma.f32(float %2880, float %2876, float %2882)
  %2884 = tail call float @llvm.fma.f32(float %2880, float %2878, float %2883)
  %2885 = fadd float %2881, %2884
  %2886 = fsub float %2885, %2881
  %2887 = fsub float %2884, %2886
  %2888 = fsub float %2875, %2885
  %2889 = fsub float %2875, %2888
  %2890 = fsub float %2889, %2885
  %2891 = fsub float %2890, %2887
  %2892 = fadd float %2888, %2891
  %2893 = fmul float %2879, %2892
  %2894 = fadd float %2880, %2893
  %2895 = fsub float %2894, %2880
  %2896 = fsub float %2893, %2895
  %2897 = fmul float %2894, %2894
  %2898 = fneg float %2897
  %2899 = tail call float @llvm.fma.f32(float %2894, float %2894, float %2898)
  %2900 = fmul float %2896, 2.000000e+00
  %2901 = tail call float @llvm.fma.f32(float %2894, float %2900, float %2899)
  %2902 = fadd float %2897, %2901
  %2903 = fsub float %2902, %2897
  %2904 = fsub float %2901, %2903
  %2905 = tail call float @llvm.fmuladd.f32(float %2902, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2906 = tail call float @llvm.fmuladd.f32(float %2902, float %2905, float 0x3FD999BDE0000000)
  %2907 = sitofp i32 %2874 to float
  %2908 = fmul float %2907, 0x3FE62E4300000000
  %2909 = fneg float %2908
  %2910 = tail call float @llvm.fma.f32(float %2907, float 0x3FE62E4300000000, float %2909)
  %2911 = tail call float @llvm.fma.f32(float %2907, float 0xBE205C6100000000, float %2910)
  %2912 = fadd float %2908, %2911
  %2913 = fsub float %2912, %2908
  %2914 = fsub float %2911, %2913
  %2915 = tail call float @llvm.amdgcn.ldexp.f32(float %2894, i32 1)
  %2916 = fmul float %2894, %2902
  %2917 = fneg float %2916
  %2918 = tail call float @llvm.fma.f32(float %2902, float %2894, float %2917)
  %2919 = tail call float @llvm.fma.f32(float %2902, float %2896, float %2918)
  %2920 = tail call float @llvm.fma.f32(float %2904, float %2894, float %2919)
  %2921 = fadd float %2916, %2920
  %2922 = fsub float %2921, %2916
  %2923 = fsub float %2920, %2922
  %2924 = fmul float %2902, %2906
  %2925 = fneg float %2924
  %2926 = tail call float @llvm.fma.f32(float %2902, float %2906, float %2925)
  %2927 = tail call float @llvm.fma.f32(float %2904, float %2906, float %2926)
  %2928 = fadd float %2924, %2927
  %2929 = fsub float %2928, %2924
  %2930 = fsub float %2927, %2929
  %2931 = fadd float %2928, 0x3FE5555540000000
  %2932 = fadd float %2931, 0xBFE5555540000000
  %2933 = fsub float %2928, %2932
  %2934 = fadd float %2930, 0x3E2E720200000000
  %2935 = fadd float %2934, %2933
  %2936 = fadd float %2931, %2935
  %2937 = fsub float %2936, %2931
  %2938 = fsub float %2935, %2937
  %2939 = fmul float %2921, %2936
  %2940 = fneg float %2939
  %2941 = tail call float @llvm.fma.f32(float %2921, float %2936, float %2940)
  %2942 = tail call float @llvm.fma.f32(float %2921, float %2938, float %2941)
  %2943 = tail call float @llvm.fma.f32(float %2923, float %2936, float %2942)
  %2944 = tail call float @llvm.amdgcn.ldexp.f32(float %2896, i32 1)
  %2945 = fadd float %2939, %2943
  %2946 = fsub float %2945, %2939
  %2947 = fsub float %2943, %2946
  %2948 = fadd float %2915, %2945
  %2949 = fsub float %2948, %2915
  %2950 = fsub float %2945, %2949
  %2951 = fadd float %2944, %2947
  %2952 = fadd float %2951, %2950
  %2953 = fadd float %2948, %2952
  %2954 = fsub float %2953, %2948
  %2955 = fsub float %2952, %2954
  %2956 = fadd float %2912, %2953
  %2957 = fsub float %2956, %2912
  %2958 = fsub float %2956, %2957
  %2959 = fsub float %2912, %2958
  %2960 = fsub float %2953, %2957
  %2961 = fadd float %2960, %2959
  %2962 = fadd float %2914, %2955
  %2963 = fsub float %2962, %2914
  %2964 = fsub float %2962, %2963
  %2965 = fsub float %2914, %2964
  %2966 = fsub float %2955, %2963
  %2967 = fadd float %2966, %2965
  %2968 = fadd float %2962, %2961
  %2969 = fadd float %2956, %2968
  %2970 = fsub float %2969, %2956
  %2971 = fsub float %2968, %2970
  %2972 = fadd float %2967, %2971
  %2973 = fadd float %2969, %2972
  %2974 = fsub float %2973, %2969
  %2975 = fsub float %2972, %2974
  %2976 = fmul float %2973, 3.000000e+00
  %2977 = fneg float %2976
  %2978 = tail call float @llvm.fma.f32(float %2973, float 3.000000e+00, float %2977)
  %2979 = fmul float %2973, 0.000000e+00
  %2980 = tail call float @llvm.fma.f32(float %2975, float 3.000000e+00, float %2979)
  %2981 = fadd float %2978, %2980
  %2982 = fadd float %2976, %2981
  %2983 = fsub float %2982, %2976
  %2984 = fsub float %2981, %2983
  %2985 = tail call float @llvm.fabs.f32(float %2976) #3
  %2986 = fcmp oeq float %2985, 0x7FF0000000000000
  %2987 = select i1 %2986, float %2976, float %2982
  %2988 = tail call float @llvm.fabs.f32(float %2987) #3
  %2989 = fcmp oeq float %2988, 0x7FF0000000000000
  %2990 = select i1 %2989, float 0.000000e+00, float %2984
  %2991 = fcmp oeq float %2987, 0x40562E4300000000
  %2992 = select i1 %2991, float 0x3EE0000000000000, float 0.000000e+00
  %2993 = fsub float %2987, %2992
  %2994 = fadd float %2992, %2990
  %2995 = fmul float %2993, 0x3FF7154760000000
  %2996 = tail call float @llvm.rint.f32(float %2995)
  %2997 = fcmp ogt float %2993, 0x40562E4300000000
  %2998 = fcmp olt float %2993, 0xC059D1DA00000000
  %2999 = fneg float %2995
  %3000 = tail call float @llvm.fma.f32(float %2993, float 0x3FF7154760000000, float %2999)
  %3001 = tail call float @llvm.fma.f32(float %2993, float 0x3E54AE0BE0000000, float %3000)
  %3002 = fsub float %2995, %2996
  %3003 = fadd float %3001, %3002
  %3004 = tail call float @llvm.exp2.f32(float %3003)
  %3005 = fptosi float %2996 to i32
  %3006 = tail call float @llvm.amdgcn.ldexp.f32(float %3004, i32 %3005)
  %3007 = select i1 %2998, float 0.000000e+00, float %3006
  %3008 = select i1 %2997, float 0x7FF0000000000000, float %3007
  %3009 = tail call float @llvm.fma.f32(float %3008, float %2994, float %3008)
  %3010 = tail call float @llvm.fabs.f32(float %3008) #3
  %3011 = fcmp oeq float %3010, 0x7FF0000000000000
  %3012 = select i1 %3011, float %3008, float %3009
  %3013 = fcmp uge float %2867, 0.000000e+00
  %3014 = select i1 %3013, float 0.000000e+00, float -0.000000e+00
  %3015 = tail call float @llvm.copysign.f32(float %3012, float %3014)
  %3016 = fcmp oeq float %2868, 0x7FF0000000000000
  %3017 = fcmp oeq float %2867, 0.000000e+00
  %3018 = or i1 %3017, %3016
  %3019 = select i1 %3017, float 0.000000e+00, float 0x7FF0000000000000
  %3020 = tail call float @llvm.copysign.f32(float %3019, float %2867)
  %3021 = select i1 %3018, float %3020, float %3015
  %3022 = fcmp uno float %2867, 0.000000e+00
  %3023 = fadd contract float %3021, 1.000000e+00
  %3024 = fmul contract float %3023, 0x40C33D7AE0000000
  %3025 = select i1 %3022, float 0x7FF8000000000000, float %3024
  %3026 = fmul contract float %83, 0x412471C3C0000000
  %3027 = fadd contract float %3026, %3025
  %3028 = fdiv contract float %83, 0x3F6D68C6A0000000
  %3029 = fadd contract float %3028, 1.000000e+00
  %3030 = fmul contract float %3029, 0x40AA1ACB80000000
  %3031 = fadd contract float %3030, %3027
  %3032 = fmul contract float %2688, 0x3FF4CCCCC0000000
  %3033 = fadd contract float %3032, %3031
  %3034 = fmul contract float %2688, 0x3FFCCCCCC0000000
  %3035 = fadd contract float %3034, %3033
  %3036 = fmul contract float %83, 2.744000e+06
  %3037 = fadd contract float %3036, %3035
  %3038 = fmul contract float %2864, 0x3FD147AE20000000
  %3039 = fadd contract float %3038, 1.000000e+00
  %3040 = fmul contract float %3039, %3037
  %3041 = fmul contract float %85, %2865
  %3042 = fdiv contract float %77, 0x4028947AE0000000
  %3043 = tail call float @llvm.fabs.f32(float %3042)
  %3044 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3043)
  %3045 = fcmp olt float %3044, 0x3FE5555560000000
  %3046 = zext i1 %3045 to i32
  %3047 = tail call float @llvm.amdgcn.ldexp.f32(float %3044, i32 %3046)
  %3048 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3043)
  %3049 = sub nsw i32 %3048, %3046
  %3050 = fadd float %3047, -1.000000e+00
  %3051 = fadd float %3047, 1.000000e+00
  %3052 = fadd float %3051, -1.000000e+00
  %3053 = fsub float %3047, %3052
  %3054 = tail call float @llvm.amdgcn.rcp.f32(float %3051)
  %3055 = fmul float %3050, %3054
  %3056 = fmul float %3051, %3055
  %3057 = fneg float %3056
  %3058 = tail call float @llvm.fma.f32(float %3055, float %3051, float %3057)
  %3059 = tail call float @llvm.fma.f32(float %3055, float %3053, float %3058)
  %3060 = fadd float %3056, %3059
  %3061 = fsub float %3060, %3056
  %3062 = fsub float %3059, %3061
  %3063 = fsub float %3050, %3060
  %3064 = fsub float %3050, %3063
  %3065 = fsub float %3064, %3060
  %3066 = fsub float %3065, %3062
  %3067 = fadd float %3063, %3066
  %3068 = fmul float %3054, %3067
  %3069 = fadd float %3055, %3068
  %3070 = fsub float %3069, %3055
  %3071 = fsub float %3068, %3070
  %3072 = fmul float %3069, %3069
  %3073 = fneg float %3072
  %3074 = tail call float @llvm.fma.f32(float %3069, float %3069, float %3073)
  %3075 = fmul float %3071, 2.000000e+00
  %3076 = tail call float @llvm.fma.f32(float %3069, float %3075, float %3074)
  %3077 = fadd float %3072, %3076
  %3078 = fsub float %3077, %3072
  %3079 = fsub float %3076, %3078
  %3080 = tail call float @llvm.fmuladd.f32(float %3077, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3081 = tail call float @llvm.fmuladd.f32(float %3077, float %3080, float 0x3FD999BDE0000000)
  %3082 = sitofp i32 %3049 to float
  %3083 = fmul float %3082, 0x3FE62E4300000000
  %3084 = fneg float %3083
  %3085 = tail call float @llvm.fma.f32(float %3082, float 0x3FE62E4300000000, float %3084)
  %3086 = tail call float @llvm.fma.f32(float %3082, float 0xBE205C6100000000, float %3085)
  %3087 = fadd float %3083, %3086
  %3088 = fsub float %3087, %3083
  %3089 = fsub float %3086, %3088
  %3090 = tail call float @llvm.amdgcn.ldexp.f32(float %3069, i32 1)
  %3091 = fmul float %3069, %3077
  %3092 = fneg float %3091
  %3093 = tail call float @llvm.fma.f32(float %3077, float %3069, float %3092)
  %3094 = tail call float @llvm.fma.f32(float %3077, float %3071, float %3093)
  %3095 = tail call float @llvm.fma.f32(float %3079, float %3069, float %3094)
  %3096 = fadd float %3091, %3095
  %3097 = fsub float %3096, %3091
  %3098 = fsub float %3095, %3097
  %3099 = fmul float %3077, %3081
  %3100 = fneg float %3099
  %3101 = tail call float @llvm.fma.f32(float %3077, float %3081, float %3100)
  %3102 = tail call float @llvm.fma.f32(float %3079, float %3081, float %3101)
  %3103 = fadd float %3099, %3102
  %3104 = fsub float %3103, %3099
  %3105 = fsub float %3102, %3104
  %3106 = fadd float %3103, 0x3FE5555540000000
  %3107 = fadd float %3106, 0xBFE5555540000000
  %3108 = fsub float %3103, %3107
  %3109 = fadd float %3105, 0x3E2E720200000000
  %3110 = fadd float %3109, %3108
  %3111 = fadd float %3106, %3110
  %3112 = fsub float %3111, %3106
  %3113 = fsub float %3110, %3112
  %3114 = fmul float %3096, %3111
  %3115 = fneg float %3114
  %3116 = tail call float @llvm.fma.f32(float %3096, float %3111, float %3115)
  %3117 = tail call float @llvm.fma.f32(float %3096, float %3113, float %3116)
  %3118 = tail call float @llvm.fma.f32(float %3098, float %3111, float %3117)
  %3119 = tail call float @llvm.amdgcn.ldexp.f32(float %3071, i32 1)
  %3120 = fadd float %3114, %3118
  %3121 = fsub float %3120, %3114
  %3122 = fsub float %3118, %3121
  %3123 = fadd float %3090, %3120
  %3124 = fsub float %3123, %3090
  %3125 = fsub float %3120, %3124
  %3126 = fadd float %3119, %3122
  %3127 = fadd float %3126, %3125
  %3128 = fadd float %3123, %3127
  %3129 = fsub float %3128, %3123
  %3130 = fsub float %3127, %3129
  %3131 = fadd float %3087, %3128
  %3132 = fsub float %3131, %3087
  %3133 = fsub float %3131, %3132
  %3134 = fsub float %3087, %3133
  %3135 = fsub float %3128, %3132
  %3136 = fadd float %3135, %3134
  %3137 = fadd float %3089, %3130
  %3138 = fsub float %3137, %3089
  %3139 = fsub float %3137, %3138
  %3140 = fsub float %3089, %3139
  %3141 = fsub float %3130, %3138
  %3142 = fadd float %3141, %3140
  %3143 = fadd float %3137, %3136
  %3144 = fadd float %3131, %3143
  %3145 = fsub float %3144, %3131
  %3146 = fsub float %3143, %3145
  %3147 = fadd float %3142, %3146
  %3148 = fadd float %3144, %3147
  %3149 = fsub float %3148, %3144
  %3150 = fsub float %3147, %3149
  %3151 = fmul float %3148, 3.000000e+00
  %3152 = fneg float %3151
  %3153 = tail call float @llvm.fma.f32(float %3148, float 3.000000e+00, float %3152)
  %3154 = fmul float %3148, 0.000000e+00
  %3155 = tail call float @llvm.fma.f32(float %3150, float 3.000000e+00, float %3154)
  %3156 = fadd float %3153, %3155
  %3157 = fadd float %3151, %3156
  %3158 = fsub float %3157, %3151
  %3159 = fsub float %3156, %3158
  %3160 = tail call float @llvm.fabs.f32(float %3151) #3
  %3161 = fcmp oeq float %3160, 0x7FF0000000000000
  %3162 = select i1 %3161, float %3151, float %3157
  %3163 = tail call float @llvm.fabs.f32(float %3162) #3
  %3164 = fcmp oeq float %3163, 0x7FF0000000000000
  %3165 = select i1 %3164, float 0.000000e+00, float %3159
  %3166 = fcmp oeq float %3162, 0x40562E4300000000
  %3167 = select i1 %3166, float 0x3EE0000000000000, float 0.000000e+00
  %3168 = fsub float %3162, %3167
  %3169 = fadd float %3167, %3165
  %3170 = fmul float %3168, 0x3FF7154760000000
  %3171 = tail call float @llvm.rint.f32(float %3170)
  %3172 = fcmp ogt float %3168, 0x40562E4300000000
  %3173 = fcmp olt float %3168, 0xC059D1DA00000000
  %3174 = fneg float %3170
  %3175 = tail call float @llvm.fma.f32(float %3168, float 0x3FF7154760000000, float %3174)
  %3176 = tail call float @llvm.fma.f32(float %3168, float 0x3E54AE0BE0000000, float %3175)
  %3177 = fsub float %3170, %3171
  %3178 = fadd float %3176, %3177
  %3179 = tail call float @llvm.exp2.f32(float %3178)
  %3180 = fptosi float %3171 to i32
  %3181 = tail call float @llvm.amdgcn.ldexp.f32(float %3179, i32 %3180)
  %3182 = select i1 %3173, float 0.000000e+00, float %3181
  %3183 = select i1 %3172, float 0x7FF0000000000000, float %3182
  %3184 = tail call float @llvm.fma.f32(float %3183, float %3169, float %3183)
  %3185 = tail call float @llvm.fabs.f32(float %3183) #3
  %3186 = fcmp oeq float %3185, 0x7FF0000000000000
  %3187 = select i1 %3186, float %3183, float %3184
  %3188 = fcmp uge float %3042, 0.000000e+00
  %3189 = select i1 %3188, float 0.000000e+00, float -0.000000e+00
  %3190 = tail call float @llvm.copysign.f32(float %3187, float %3189)
  %3191 = fcmp oeq float %3043, 0x7FF0000000000000
  %3192 = fcmp oeq float %3042, 0.000000e+00
  %3193 = or i1 %3192, %3191
  %3194 = select i1 %3192, float 0.000000e+00, float 0x7FF0000000000000
  %3195 = tail call float @llvm.copysign.f32(float %3194, float %3042)
  %3196 = select i1 %3193, float %3195, float %3190
  %3197 = fcmp uno float %3042, 0.000000e+00
  %3198 = fadd contract float %3196, 1.000000e+00
  %3199 = fmul contract float %3198, 0x40C33D7AE0000000
  %3200 = select i1 %3197, float 0x7FF8000000000000, float %3199
  %3201 = fmul contract float %85, 0x412471C3C0000000
  %3202 = fadd contract float %3201, %3200
  %3203 = fdiv contract float %85, 0x3F6D68C6A0000000
  %3204 = fadd contract float %3203, 1.000000e+00
  %3205 = fmul contract float %3204, 0x40AA1ACB80000000
  %3206 = fadd contract float %3205, %3202
  %3207 = fmul contract float %2846, 0x3FF4CCCCC0000000
  %3208 = fadd contract float %3207, %3206
  %3209 = fmul contract float %2846, 0x3FFCCCCCC0000000
  %3210 = fadd contract float %3209, %3208
  %3211 = fmul contract float %85, 2.744000e+06
  %3212 = fadd contract float %3211, %3210
  %3213 = fmul contract float %3039, %3212
  %3214 = fmul contract float %2358, 0x3FEFAE1480000000
  %3215 = select i1 %2356, float 0x7FF8000000000000, float %3214
  %3216 = fsub contract float %2690, %2866
  %3217 = fmul contract float %3216, %3215
  %3218 = fdiv contract float %3217, %3040
  %3219 = fmul contract float %2516, 0x4020051EC0000000
  %3220 = select i1 %2514, float 0x7FF8000000000000, float %3219
  %3221 = fsub contract float %2848, %3041
  %3222 = fmul contract float %3221, %3220
  %3223 = fdiv contract float %3222, %3213
  %3224 = fadd contract float %3218, %3223
  %3225 = fmul contract float %3224, 2.000000e+00
  %3226 = fmul contract float %3225, 0x3DE2FAF640000000
  %3227 = fdiv contract float %3226, 0x3ED15D4E40000000
  %3228 = fmul contract float %3227, 1.000000e+03
  %3229 = getelementptr inbounds float, float addrspace(1)* %2, i64 44
  store float %3228, float addrspace(1)* %3229, align 4, !tbaa !6
  %3230 = tail call float @llvm.fabs.f32(float %83)
  %3231 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3230)
  %3232 = fcmp olt float %3231, 0x3FE5555560000000
  %3233 = zext i1 %3232 to i32
  %3234 = tail call float @llvm.amdgcn.ldexp.f32(float %3231, i32 %3233)
  %3235 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3230)
  %3236 = sub nsw i32 %3235, %3233
  %3237 = fadd float %3234, -1.000000e+00
  %3238 = fadd float %3234, 1.000000e+00
  %3239 = fadd float %3238, -1.000000e+00
  %3240 = fsub float %3234, %3239
  %3241 = tail call float @llvm.amdgcn.rcp.f32(float %3238)
  %3242 = fmul float %3237, %3241
  %3243 = fmul float %3238, %3242
  %3244 = fneg float %3243
  %3245 = tail call float @llvm.fma.f32(float %3242, float %3238, float %3244)
  %3246 = tail call float @llvm.fma.f32(float %3242, float %3240, float %3245)
  %3247 = fadd float %3243, %3246
  %3248 = fsub float %3247, %3243
  %3249 = fsub float %3246, %3248
  %3250 = fsub float %3237, %3247
  %3251 = fsub float %3237, %3250
  %3252 = fsub float %3251, %3247
  %3253 = fsub float %3252, %3249
  %3254 = fadd float %3250, %3253
  %3255 = fmul float %3241, %3254
  %3256 = fadd float %3242, %3255
  %3257 = fsub float %3256, %3242
  %3258 = fsub float %3255, %3257
  %3259 = fmul float %3256, %3256
  %3260 = fneg float %3259
  %3261 = tail call float @llvm.fma.f32(float %3256, float %3256, float %3260)
  %3262 = fmul float %3258, 2.000000e+00
  %3263 = tail call float @llvm.fma.f32(float %3256, float %3262, float %3261)
  %3264 = fadd float %3259, %3263
  %3265 = fsub float %3264, %3259
  %3266 = fsub float %3263, %3265
  %3267 = tail call float @llvm.fmuladd.f32(float %3264, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3268 = tail call float @llvm.fmuladd.f32(float %3264, float %3267, float 0x3FD999BDE0000000)
  %3269 = sitofp i32 %3236 to float
  %3270 = fmul float %3269, 0x3FE62E4300000000
  %3271 = fneg float %3270
  %3272 = tail call float @llvm.fma.f32(float %3269, float 0x3FE62E4300000000, float %3271)
  %3273 = tail call float @llvm.fma.f32(float %3269, float 0xBE205C6100000000, float %3272)
  %3274 = fadd float %3270, %3273
  %3275 = fsub float %3274, %3270
  %3276 = fsub float %3273, %3275
  %3277 = tail call float @llvm.amdgcn.ldexp.f32(float %3256, i32 1)
  %3278 = fmul float %3256, %3264
  %3279 = fneg float %3278
  %3280 = tail call float @llvm.fma.f32(float %3264, float %3256, float %3279)
  %3281 = tail call float @llvm.fma.f32(float %3264, float %3258, float %3280)
  %3282 = tail call float @llvm.fma.f32(float %3266, float %3256, float %3281)
  %3283 = fadd float %3278, %3282
  %3284 = fsub float %3283, %3278
  %3285 = fsub float %3282, %3284
  %3286 = fmul float %3264, %3268
  %3287 = fneg float %3286
  %3288 = tail call float @llvm.fma.f32(float %3264, float %3268, float %3287)
  %3289 = tail call float @llvm.fma.f32(float %3266, float %3268, float %3288)
  %3290 = fadd float %3286, %3289
  %3291 = fsub float %3290, %3286
  %3292 = fsub float %3289, %3291
  %3293 = fadd float %3290, 0x3FE5555540000000
  %3294 = fadd float %3293, 0xBFE5555540000000
  %3295 = fsub float %3290, %3294
  %3296 = fadd float %3292, 0x3E2E720200000000
  %3297 = fadd float %3296, %3295
  %3298 = fadd float %3293, %3297
  %3299 = fsub float %3298, %3293
  %3300 = fsub float %3297, %3299
  %3301 = fmul float %3283, %3298
  %3302 = fneg float %3301
  %3303 = tail call float @llvm.fma.f32(float %3283, float %3298, float %3302)
  %3304 = tail call float @llvm.fma.f32(float %3283, float %3300, float %3303)
  %3305 = tail call float @llvm.fma.f32(float %3285, float %3298, float %3304)
  %3306 = tail call float @llvm.amdgcn.ldexp.f32(float %3258, i32 1)
  %3307 = fadd float %3301, %3305
  %3308 = fsub float %3307, %3301
  %3309 = fsub float %3305, %3308
  %3310 = fadd float %3277, %3307
  %3311 = fsub float %3310, %3277
  %3312 = fsub float %3307, %3311
  %3313 = fadd float %3306, %3309
  %3314 = fadd float %3313, %3312
  %3315 = fadd float %3310, %3314
  %3316 = fsub float %3315, %3310
  %3317 = fsub float %3314, %3316
  %3318 = fadd float %3274, %3315
  %3319 = fsub float %3318, %3274
  %3320 = fsub float %3318, %3319
  %3321 = fsub float %3274, %3320
  %3322 = fsub float %3315, %3319
  %3323 = fadd float %3322, %3321
  %3324 = fadd float %3276, %3317
  %3325 = fsub float %3324, %3276
  %3326 = fsub float %3324, %3325
  %3327 = fsub float %3276, %3326
  %3328 = fsub float %3317, %3325
  %3329 = fadd float %3328, %3327
  %3330 = fadd float %3324, %3323
  %3331 = fadd float %3318, %3330
  %3332 = fsub float %3331, %3318
  %3333 = fsub float %3330, %3332
  %3334 = fadd float %3329, %3333
  %3335 = fadd float %3331, %3334
  %3336 = fsub float %3335, %3331
  %3337 = fsub float %3334, %3336
  %3338 = fmul float %3335, 0x3FF99999A0000000
  %3339 = fneg float %3338
  %3340 = tail call float @llvm.fma.f32(float %3335, float 0x3FF99999A0000000, float %3339)
  %3341 = tail call float @llvm.fma.f32(float %3337, float 0x3FF99999A0000000, float %3340)
  %3342 = fadd float %3338, %3341
  %3343 = fsub float %3342, %3338
  %3344 = fsub float %3341, %3343
  %3345 = tail call float @llvm.fabs.f32(float %3338) #3
  %3346 = fcmp oeq float %3345, 0x7FF0000000000000
  %3347 = select i1 %3346, float %3338, float %3342
  %3348 = tail call float @llvm.fabs.f32(float %3347) #3
  %3349 = fcmp oeq float %3348, 0x7FF0000000000000
  %3350 = select i1 %3349, float 0.000000e+00, float %3344
  %3351 = fcmp oeq float %3347, 0x40562E4300000000
  %3352 = select i1 %3351, float 0x3EE0000000000000, float 0.000000e+00
  %3353 = fsub float %3347, %3352
  %3354 = fadd float %3352, %3350
  %3355 = fmul float %3353, 0x3FF7154760000000
  %3356 = tail call float @llvm.rint.f32(float %3355)
  %3357 = fcmp ogt float %3353, 0x40562E4300000000
  %3358 = fcmp olt float %3353, 0xC059D1DA00000000
  %3359 = fneg float %3355
  %3360 = tail call float @llvm.fma.f32(float %3353, float 0x3FF7154760000000, float %3359)
  %3361 = tail call float @llvm.fma.f32(float %3353, float 0x3E54AE0BE0000000, float %3360)
  %3362 = fsub float %3355, %3356
  %3363 = fadd float %3361, %3362
  %3364 = tail call float @llvm.exp2.f32(float %3363)
  %3365 = fptosi float %3356 to i32
  %3366 = tail call float @llvm.amdgcn.ldexp.f32(float %3364, i32 %3365)
  %3367 = select i1 %3358, float 0.000000e+00, float %3366
  %3368 = select i1 %3357, float 0x7FF0000000000000, float %3367
  %3369 = tail call float @llvm.fma.f32(float %3368, float %3354, float %3368)
  %3370 = tail call float @llvm.fabs.f32(float %3368) #3
  %3371 = fcmp oeq float %3370, 0x7FF0000000000000
  %3372 = select i1 %3371, float %3368, float %3369
  %3373 = tail call float @llvm.fabs.f32(float %3372)
  %3374 = fcmp uge float %83, 0.000000e+00
  %3375 = select i1 %3374, float %3373, float 0x7FF8000000000000
  %3376 = fcmp oeq float %3230, 0x7FF0000000000000
  %3377 = fcmp oeq float %83, 0.000000e+00
  %3378 = or i1 %3377, %3376
  %3379 = select i1 %3377, float 0.000000e+00, float 0x7FF0000000000000
  %3380 = select i1 %3378, float %3379, float %3375
  %3381 = fcmp uno float %83, 0.000000e+00
  %3382 = select i1 %3381, float 0x7FF8000000000000, float %3380
  %3383 = fcmp oeq float %83, 1.000000e+00
  %3384 = select i1 %3383, float 1.000000e+00, float %3382
  %3385 = fmul contract float %3384, 0x3F7E529BA0000000
  %3386 = fadd contract float %3384, 0x3ED5EDBBE0000000
  %3387 = fdiv contract float %3385, %3386
  %3388 = tail call float @llvm.fabs.f32(float %85)
  %3389 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3388)
  %3390 = fcmp olt float %3389, 0x3FE5555560000000
  %3391 = zext i1 %3390 to i32
  %3392 = tail call float @llvm.amdgcn.ldexp.f32(float %3389, i32 %3391)
  %3393 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3388)
  %3394 = sub nsw i32 %3393, %3391
  %3395 = fadd float %3392, -1.000000e+00
  %3396 = fadd float %3392, 1.000000e+00
  %3397 = fadd float %3396, -1.000000e+00
  %3398 = fsub float %3392, %3397
  %3399 = tail call float @llvm.amdgcn.rcp.f32(float %3396)
  %3400 = fmul float %3395, %3399
  %3401 = fmul float %3396, %3400
  %3402 = fneg float %3401
  %3403 = tail call float @llvm.fma.f32(float %3400, float %3396, float %3402)
  %3404 = tail call float @llvm.fma.f32(float %3400, float %3398, float %3403)
  %3405 = fadd float %3401, %3404
  %3406 = fsub float %3405, %3401
  %3407 = fsub float %3404, %3406
  %3408 = fsub float %3395, %3405
  %3409 = fsub float %3395, %3408
  %3410 = fsub float %3409, %3405
  %3411 = fsub float %3410, %3407
  %3412 = fadd float %3408, %3411
  %3413 = fmul float %3399, %3412
  %3414 = fadd float %3400, %3413
  %3415 = fsub float %3414, %3400
  %3416 = fsub float %3413, %3415
  %3417 = fmul float %3414, %3414
  %3418 = fneg float %3417
  %3419 = tail call float @llvm.fma.f32(float %3414, float %3414, float %3418)
  %3420 = fmul float %3416, 2.000000e+00
  %3421 = tail call float @llvm.fma.f32(float %3414, float %3420, float %3419)
  %3422 = fadd float %3417, %3421
  %3423 = fsub float %3422, %3417
  %3424 = fsub float %3421, %3423
  %3425 = tail call float @llvm.fmuladd.f32(float %3422, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3426 = tail call float @llvm.fmuladd.f32(float %3422, float %3425, float 0x3FD999BDE0000000)
  %3427 = sitofp i32 %3394 to float
  %3428 = fmul float %3427, 0x3FE62E4300000000
  %3429 = fneg float %3428
  %3430 = tail call float @llvm.fma.f32(float %3427, float 0x3FE62E4300000000, float %3429)
  %3431 = tail call float @llvm.fma.f32(float %3427, float 0xBE205C6100000000, float %3430)
  %3432 = fadd float %3428, %3431
  %3433 = fsub float %3432, %3428
  %3434 = fsub float %3431, %3433
  %3435 = tail call float @llvm.amdgcn.ldexp.f32(float %3414, i32 1)
  %3436 = fmul float %3414, %3422
  %3437 = fneg float %3436
  %3438 = tail call float @llvm.fma.f32(float %3422, float %3414, float %3437)
  %3439 = tail call float @llvm.fma.f32(float %3422, float %3416, float %3438)
  %3440 = tail call float @llvm.fma.f32(float %3424, float %3414, float %3439)
  %3441 = fadd float %3436, %3440
  %3442 = fsub float %3441, %3436
  %3443 = fsub float %3440, %3442
  %3444 = fmul float %3422, %3426
  %3445 = fneg float %3444
  %3446 = tail call float @llvm.fma.f32(float %3422, float %3426, float %3445)
  %3447 = tail call float @llvm.fma.f32(float %3424, float %3426, float %3446)
  %3448 = fadd float %3444, %3447
  %3449 = fsub float %3448, %3444
  %3450 = fsub float %3447, %3449
  %3451 = fadd float %3448, 0x3FE5555540000000
  %3452 = fadd float %3451, 0xBFE5555540000000
  %3453 = fsub float %3448, %3452
  %3454 = fadd float %3450, 0x3E2E720200000000
  %3455 = fadd float %3454, %3453
  %3456 = fadd float %3451, %3455
  %3457 = fsub float %3456, %3451
  %3458 = fsub float %3455, %3457
  %3459 = fmul float %3441, %3456
  %3460 = fneg float %3459
  %3461 = tail call float @llvm.fma.f32(float %3441, float %3456, float %3460)
  %3462 = tail call float @llvm.fma.f32(float %3441, float %3458, float %3461)
  %3463 = tail call float @llvm.fma.f32(float %3443, float %3456, float %3462)
  %3464 = tail call float @llvm.amdgcn.ldexp.f32(float %3416, i32 1)
  %3465 = fadd float %3459, %3463
  %3466 = fsub float %3465, %3459
  %3467 = fsub float %3463, %3466
  %3468 = fadd float %3435, %3465
  %3469 = fsub float %3468, %3435
  %3470 = fsub float %3465, %3469
  %3471 = fadd float %3464, %3467
  %3472 = fadd float %3471, %3470
  %3473 = fadd float %3468, %3472
  %3474 = fsub float %3473, %3468
  %3475 = fsub float %3472, %3474
  %3476 = fadd float %3432, %3473
  %3477 = fsub float %3476, %3432
  %3478 = fsub float %3476, %3477
  %3479 = fsub float %3432, %3478
  %3480 = fsub float %3473, %3477
  %3481 = fadd float %3480, %3479
  %3482 = fadd float %3434, %3475
  %3483 = fsub float %3482, %3434
  %3484 = fsub float %3482, %3483
  %3485 = fsub float %3434, %3484
  %3486 = fsub float %3475, %3483
  %3487 = fadd float %3486, %3485
  %3488 = fadd float %3482, %3481
  %3489 = fadd float %3476, %3488
  %3490 = fsub float %3489, %3476
  %3491 = fsub float %3488, %3490
  %3492 = fadd float %3487, %3491
  %3493 = fadd float %3489, %3492
  %3494 = fsub float %3493, %3489
  %3495 = fsub float %3492, %3494
  %3496 = fmul float %3493, 0x3FF99999A0000000
  %3497 = fneg float %3496
  %3498 = tail call float @llvm.fma.f32(float %3493, float 0x3FF99999A0000000, float %3497)
  %3499 = tail call float @llvm.fma.f32(float %3495, float 0x3FF99999A0000000, float %3498)
  %3500 = fadd float %3496, %3499
  %3501 = fsub float %3500, %3496
  %3502 = fsub float %3499, %3501
  %3503 = tail call float @llvm.fabs.f32(float %3496) #3
  %3504 = fcmp oeq float %3503, 0x7FF0000000000000
  %3505 = select i1 %3504, float %3496, float %3500
  %3506 = tail call float @llvm.fabs.f32(float %3505) #3
  %3507 = fcmp oeq float %3506, 0x7FF0000000000000
  %3508 = select i1 %3507, float 0.000000e+00, float %3502
  %3509 = fcmp oeq float %3505, 0x40562E4300000000
  %3510 = select i1 %3509, float 0x3EE0000000000000, float 0.000000e+00
  %3511 = fsub float %3505, %3510
  %3512 = fadd float %3510, %3508
  %3513 = fmul float %3511, 0x3FF7154760000000
  %3514 = tail call float @llvm.rint.f32(float %3513)
  %3515 = fcmp ogt float %3511, 0x40562E4300000000
  %3516 = fcmp olt float %3511, 0xC059D1DA00000000
  %3517 = fneg float %3513
  %3518 = tail call float @llvm.fma.f32(float %3511, float 0x3FF7154760000000, float %3517)
  %3519 = tail call float @llvm.fma.f32(float %3511, float 0x3E54AE0BE0000000, float %3518)
  %3520 = fsub float %3513, %3514
  %3521 = fadd float %3519, %3520
  %3522 = tail call float @llvm.exp2.f32(float %3521)
  %3523 = fptosi float %3514 to i32
  %3524 = tail call float @llvm.amdgcn.ldexp.f32(float %3522, i32 %3523)
  %3525 = select i1 %3516, float 0.000000e+00, float %3524
  %3526 = select i1 %3515, float 0x7FF0000000000000, float %3525
  %3527 = tail call float @llvm.fma.f32(float %3526, float %3512, float %3526)
  %3528 = tail call float @llvm.fabs.f32(float %3526) #3
  %3529 = fcmp oeq float %3528, 0x7FF0000000000000
  %3530 = select i1 %3529, float %3526, float %3527
  %3531 = tail call float @llvm.fabs.f32(float %3530)
  %3532 = fcmp uge float %85, 0.000000e+00
  %3533 = select i1 %3532, float %3531, float 0x7FF8000000000000
  %3534 = fcmp oeq float %3388, 0x7FF0000000000000
  %3535 = fcmp oeq float %85, 0.000000e+00
  %3536 = or i1 %3535, %3534
  %3537 = select i1 %3535, float 0.000000e+00, float 0x7FF0000000000000
  %3538 = select i1 %3536, float %3537, float %3533
  %3539 = fcmp uno float %85, 0.000000e+00
  %3540 = select i1 %3539, float 0x7FF8000000000000, float %3538
  %3541 = fcmp oeq float %85, 1.000000e+00
  %3542 = select i1 %3541, float 1.000000e+00, float %3540
  %3543 = fmul contract float %3542, 0x3FAEAAD1C0000000
  %3544 = fadd contract float %3542, 0x3ED5EDBBE0000000
  %3545 = fdiv contract float %3543, %3544
  %3546 = fadd contract float %3387, %3545
  %3547 = fmul contract float %3546, 0xBDE2FAF640000000
  %3548 = fdiv contract float %3547, 0x3ED15D4E40000000
  %3549 = fmul contract float %3548, 1.000000e+03
  %3550 = getelementptr inbounds float, float addrspace(1)* %2, i64 43
  store float %3549, float addrspace(1)* %3550, align 4, !tbaa !6
  %3551 = fsub contract float %89, %151
  %3552 = fmul contract float %3551, 0x3EFCFC5C60000000
  %3553 = fsub contract float %89, %166
  %3554 = fmul contract float %3553, 0x3F2D50AEE0000000
  %3555 = fadd contract float %3552, %3554
  %3556 = fmul contract float %3555, 0xBDE2FAF640000000
  %3557 = fdiv contract float %3556, 0x3ED15D4E40000000
  %3558 = fmul contract float %3557, 1.000000e+03
  %3559 = getelementptr inbounds float, float addrspace(1)* %2, i64 45
  store float %3558, float addrspace(1)* %3559, align 4, !tbaa !6
  %3560 = fdiv contract float 0x3FDCCCCCC0000000, %73
  %3561 = tail call float @llvm.fabs.f32(float %3560)
  %3562 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3561)
  %3563 = fcmp olt float %3562, 0x3FE5555560000000
  %3564 = zext i1 %3563 to i32
  %3565 = tail call float @llvm.amdgcn.ldexp.f32(float %3562, i32 %3564)
  %3566 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3561)
  %3567 = sub nsw i32 %3566, %3564
  %3568 = fadd float %3565, -1.000000e+00
  %3569 = fadd float %3565, 1.000000e+00
  %3570 = fadd float %3569, -1.000000e+00
  %3571 = fsub float %3565, %3570
  %3572 = tail call float @llvm.amdgcn.rcp.f32(float %3569)
  %3573 = fmul float %3568, %3572
  %3574 = fmul float %3569, %3573
  %3575 = fneg float %3574
  %3576 = tail call float @llvm.fma.f32(float %3573, float %3569, float %3575)
  %3577 = tail call float @llvm.fma.f32(float %3573, float %3571, float %3576)
  %3578 = fadd float %3574, %3577
  %3579 = fsub float %3578, %3574
  %3580 = fsub float %3577, %3579
  %3581 = fsub float %3568, %3578
  %3582 = fsub float %3568, %3581
  %3583 = fsub float %3582, %3578
  %3584 = fsub float %3583, %3580
  %3585 = fadd float %3581, %3584
  %3586 = fmul float %3572, %3585
  %3587 = fadd float %3573, %3586
  %3588 = fsub float %3587, %3573
  %3589 = fsub float %3586, %3588
  %3590 = fmul float %3587, %3587
  %3591 = fneg float %3590
  %3592 = tail call float @llvm.fma.f32(float %3587, float %3587, float %3591)
  %3593 = fmul float %3589, 2.000000e+00
  %3594 = tail call float @llvm.fma.f32(float %3587, float %3593, float %3592)
  %3595 = fadd float %3590, %3594
  %3596 = fsub float %3595, %3590
  %3597 = fsub float %3594, %3596
  %3598 = tail call float @llvm.fmuladd.f32(float %3595, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3599 = tail call float @llvm.fmuladd.f32(float %3595, float %3598, float 0x3FD999BDE0000000)
  %3600 = sitofp i32 %3567 to float
  %3601 = fmul float %3600, 0x3FE62E4300000000
  %3602 = fneg float %3601
  %3603 = tail call float @llvm.fma.f32(float %3600, float 0x3FE62E4300000000, float %3602)
  %3604 = tail call float @llvm.fma.f32(float %3600, float 0xBE205C6100000000, float %3603)
  %3605 = fadd float %3601, %3604
  %3606 = fsub float %3605, %3601
  %3607 = fsub float %3604, %3606
  %3608 = tail call float @llvm.amdgcn.ldexp.f32(float %3587, i32 1)
  %3609 = fmul float %3587, %3595
  %3610 = fneg float %3609
  %3611 = tail call float @llvm.fma.f32(float %3595, float %3587, float %3610)
  %3612 = tail call float @llvm.fma.f32(float %3595, float %3589, float %3611)
  %3613 = tail call float @llvm.fma.f32(float %3597, float %3587, float %3612)
  %3614 = fadd float %3609, %3613
  %3615 = fsub float %3614, %3609
  %3616 = fsub float %3613, %3615
  %3617 = fmul float %3595, %3599
  %3618 = fneg float %3617
  %3619 = tail call float @llvm.fma.f32(float %3595, float %3599, float %3618)
  %3620 = tail call float @llvm.fma.f32(float %3597, float %3599, float %3619)
  %3621 = fadd float %3617, %3620
  %3622 = fsub float %3621, %3617
  %3623 = fsub float %3620, %3622
  %3624 = fadd float %3621, 0x3FE5555540000000
  %3625 = fadd float %3624, 0xBFE5555540000000
  %3626 = fsub float %3621, %3625
  %3627 = fadd float %3623, 0x3E2E720200000000
  %3628 = fadd float %3627, %3626
  %3629 = fadd float %3624, %3628
  %3630 = fsub float %3629, %3624
  %3631 = fsub float %3628, %3630
  %3632 = fmul float %3614, %3629
  %3633 = fneg float %3632
  %3634 = tail call float @llvm.fma.f32(float %3614, float %3629, float %3633)
  %3635 = tail call float @llvm.fma.f32(float %3614, float %3631, float %3634)
  %3636 = tail call float @llvm.fma.f32(float %3616, float %3629, float %3635)
  %3637 = tail call float @llvm.amdgcn.ldexp.f32(float %3589, i32 1)
  %3638 = fadd float %3632, %3636
  %3639 = fsub float %3638, %3632
  %3640 = fsub float %3636, %3639
  %3641 = fadd float %3608, %3638
  %3642 = fsub float %3641, %3608
  %3643 = fsub float %3638, %3642
  %3644 = fadd float %3637, %3640
  %3645 = fadd float %3644, %3643
  %3646 = fadd float %3641, %3645
  %3647 = fsub float %3646, %3641
  %3648 = fsub float %3645, %3647
  %3649 = fadd float %3605, %3646
  %3650 = fsub float %3649, %3605
  %3651 = fsub float %3649, %3650
  %3652 = fsub float %3605, %3651
  %3653 = fsub float %3646, %3650
  %3654 = fadd float %3653, %3652
  %3655 = fadd float %3607, %3648
  %3656 = fsub float %3655, %3607
  %3657 = fsub float %3655, %3656
  %3658 = fsub float %3607, %3657
  %3659 = fsub float %3648, %3656
  %3660 = fadd float %3659, %3658
  %3661 = fadd float %3655, %3654
  %3662 = fadd float %3649, %3661
  %3663 = fsub float %3662, %3649
  %3664 = fsub float %3661, %3663
  %3665 = fadd float %3660, %3664
  %3666 = fadd float %3662, %3665
  %3667 = fsub float %3666, %3662
  %3668 = fsub float %3665, %3667
  %3669 = fmul float %3666, 2.500000e+00
  %3670 = fneg float %3669
  %3671 = tail call float @llvm.fma.f32(float %3666, float 2.500000e+00, float %3670)
  %3672 = tail call float @llvm.fma.f32(float %3668, float 2.500000e+00, float %3671)
  %3673 = fadd float %3669, %3672
  %3674 = fsub float %3673, %3669
  %3675 = fsub float %3672, %3674
  %3676 = tail call float @llvm.fabs.f32(float %3669) #3
  %3677 = fcmp oeq float %3676, 0x7FF0000000000000
  %3678 = select i1 %3677, float %3669, float %3673
  %3679 = tail call float @llvm.fabs.f32(float %3678) #3
  %3680 = fcmp oeq float %3679, 0x7FF0000000000000
  %3681 = select i1 %3680, float 0.000000e+00, float %3675
  %3682 = fcmp oeq float %3678, 0x40562E4300000000
  %3683 = select i1 %3682, float 0x3EE0000000000000, float 0.000000e+00
  %3684 = fsub float %3678, %3683
  %3685 = fadd float %3683, %3681
  %3686 = fmul float %3684, 0x3FF7154760000000
  %3687 = tail call float @llvm.rint.f32(float %3686)
  %3688 = fcmp ogt float %3684, 0x40562E4300000000
  %3689 = fcmp olt float %3684, 0xC059D1DA00000000
  %3690 = fneg float %3686
  %3691 = tail call float @llvm.fma.f32(float %3684, float 0x3FF7154760000000, float %3690)
  %3692 = tail call float @llvm.fma.f32(float %3684, float 0x3E54AE0BE0000000, float %3691)
  %3693 = fsub float %3686, %3687
  %3694 = fadd float %3692, %3693
  %3695 = tail call float @llvm.exp2.f32(float %3694)
  %3696 = fptosi float %3687 to i32
  %3697 = tail call float @llvm.amdgcn.ldexp.f32(float %3695, i32 %3696)
  %3698 = select i1 %3689, float 0.000000e+00, float %3697
  %3699 = select i1 %3688, float 0x7FF0000000000000, float %3698
  %3700 = tail call float @llvm.fma.f32(float %3699, float %3685, float %3699)
  %3701 = tail call float @llvm.fabs.f32(float %3699) #3
  %3702 = fcmp oeq float %3701, 0x7FF0000000000000
  %3703 = select i1 %3702, float %3699, float %3700
  %3704 = tail call float @llvm.fabs.f32(float %3703)
  %3705 = fcmp uge float %3560, 0.000000e+00
  %3706 = select i1 %3705, float %3704, float 0x7FF8000000000000
  %3707 = fcmp oeq float %3561, 0x7FF0000000000000
  %3708 = fcmp oeq float %3560, 0.000000e+00
  %3709 = or i1 %3708, %3707
  %3710 = select i1 %3708, float 0.000000e+00, float 0x7FF0000000000000
  %3711 = select i1 %3709, float %3710, float %3706
  %3712 = fcmp uno float %3560, 0.000000e+00
  %3713 = fcmp oeq float %3560, 1.000000e+00
  %3714 = fadd contract float %3711, 1.000000e+00
  %3715 = fdiv contract float 1.400000e+01, %3714
  %3716 = fsub contract float 1.500000e+01, %3715
  %3717 = select i1 %3712, float 0x7FF8000000000000, float %3716
  %3718 = select i1 %3713, float 8.000000e+00, float %3717
  %3719 = fdiv contract float 1.000000e+01, %3718
  %3720 = fmul contract float %3718, 5.000000e-01
  %3721 = fsub contract float 1.000000e+00, %41
  %3722 = fsub contract float %3721, %43
  %3723 = fsub contract float %3722, %45
  %3724 = fmul contract float %3723, 0x3F747AE140000000
  %3725 = fmul contract float %83, %3720
  %3726 = fmul contract float %41, %3725
  %3727 = fsub contract float %3724, %3726
  %3728 = fmul float %3335, 2.000000e+00
  %3729 = fneg float %3728
  %3730 = tail call float @llvm.fma.f32(float %3335, float 2.000000e+00, float %3729)
  %3731 = fmul float %3335, 0.000000e+00
  %3732 = tail call float @llvm.fma.f32(float %3337, float 2.000000e+00, float %3731)
  %3733 = fadd float %3730, %3732
  %3734 = fadd float %3728, %3733
  %3735 = fsub float %3734, %3728
  %3736 = fsub float %3733, %3735
  %3737 = tail call float @llvm.fabs.f32(float %3728) #3
  %3738 = fcmp oeq float %3737, 0x7FF0000000000000
  %3739 = select i1 %3738, float %3728, float %3734
  %3740 = tail call float @llvm.fabs.f32(float %3739) #3
  %3741 = fcmp oeq float %3740, 0x7FF0000000000000
  %3742 = select i1 %3741, float 0.000000e+00, float %3736
  %3743 = fcmp oeq float %3739, 0x40562E4300000000
  %3744 = select i1 %3743, float 0x3EE0000000000000, float 0.000000e+00
  %3745 = fsub float %3739, %3744
  %3746 = fadd float %3744, %3742
  %3747 = fmul float %3745, 0x3FF7154760000000
  %3748 = tail call float @llvm.rint.f32(float %3747)
  %3749 = fcmp ogt float %3745, 0x40562E4300000000
  %3750 = fcmp olt float %3745, 0xC059D1DA00000000
  %3751 = fneg float %3747
  %3752 = tail call float @llvm.fma.f32(float %3745, float 0x3FF7154760000000, float %3751)
  %3753 = tail call float @llvm.fma.f32(float %3745, float 0x3E54AE0BE0000000, float %3752)
  %3754 = fsub float %3747, %3748
  %3755 = fadd float %3753, %3754
  %3756 = tail call float @llvm.exp2.f32(float %3755)
  %3757 = fptosi float %3748 to i32
  %3758 = tail call float @llvm.amdgcn.ldexp.f32(float %3756, i32 %3757)
  %3759 = select i1 %3750, float 0.000000e+00, float %3758
  %3760 = select i1 %3749, float 0x7FF0000000000000, float %3759
  %3761 = tail call float @llvm.fma.f32(float %3760, float %3746, float %3760)
  %3762 = tail call float @llvm.fabs.f32(float %3760) #3
  %3763 = fcmp oeq float %3762, 0x7FF0000000000000
  %3764 = select i1 %3763, float %3760, float %3761
  %3765 = tail call float @llvm.fabs.f32(float %3764)
  %3766 = select i1 %3378, float %3379, float %3765
  %3767 = select i1 %3381, float 0x7FF8000000000000, float %3766
  %3768 = fmul contract float %3767, %3719
  %3769 = fmul contract float %41, %3768
  %3770 = fmul contract float %43, 0x3FAEB851E0000000
  %3771 = fsub contract float %3769, %3770
  %3772 = fsub contract float %3727, %3771
  %3773 = getelementptr inbounds float, float addrspace(1)* %2, i64 13
  store float %3772, float addrspace(1)* %3773, align 4, !tbaa !6
  %3774 = fmul contract float %43, %3725
  %3775 = fmul contract float %45, 0x3F747AE140000000
  %3776 = fsub contract float %3774, %3775
  %3777 = fsub contract float %3771, %3776
  %3778 = getelementptr inbounds float, float addrspace(1)* %2, i64 14
  store float %3777, float addrspace(1)* %3778, align 4, !tbaa !6
  %3779 = fmul contract float %45, 0x3FAEB851E0000000
  %3780 = fmul contract float %3723, %3768
  %3781 = fsub contract float %3779, %3780
  %3782 = fsub contract float %3776, %3781
  %3783 = getelementptr inbounds float, float addrspace(1)* %2, i64 15
  store float %3782, float addrspace(1)* %3783, align 4, !tbaa !6
  %3784 = fmul contract float %43, 2.500000e+01
  %3785 = fsub contract float %73, %83
  %3786 = fmul contract float %3784, %3785
  %3787 = fdiv contract float %87, 0x3F301F3200000000
  %3788 = tail call float @llvm.fabs.f32(float %3787)
  %3789 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3788)
  %3790 = fcmp olt float %3789, 0x3FE5555560000000
  %3791 = zext i1 %3790 to i32
  %3792 = tail call float @llvm.amdgcn.ldexp.f32(float %3789, i32 %3791)
  %3793 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3788)
  %3794 = sub nsw i32 %3793, %3791
  %3795 = fadd float %3792, -1.000000e+00
  %3796 = fadd float %3792, 1.000000e+00
  %3797 = fadd float %3796, -1.000000e+00
  %3798 = fsub float %3792, %3797
  %3799 = tail call float @llvm.amdgcn.rcp.f32(float %3796)
  %3800 = fmul float %3795, %3799
  %3801 = fmul float %3796, %3800
  %3802 = fneg float %3801
  %3803 = tail call float @llvm.fma.f32(float %3800, float %3796, float %3802)
  %3804 = tail call float @llvm.fma.f32(float %3800, float %3798, float %3803)
  %3805 = fadd float %3801, %3804
  %3806 = fsub float %3805, %3801
  %3807 = fsub float %3804, %3806
  %3808 = fsub float %3795, %3805
  %3809 = fsub float %3795, %3808
  %3810 = fsub float %3809, %3805
  %3811 = fsub float %3810, %3807
  %3812 = fadd float %3808, %3811
  %3813 = fmul float %3799, %3812
  %3814 = fadd float %3800, %3813
  %3815 = fsub float %3814, %3800
  %3816 = fsub float %3813, %3815
  %3817 = fmul float %3814, %3814
  %3818 = fneg float %3817
  %3819 = tail call float @llvm.fma.f32(float %3814, float %3814, float %3818)
  %3820 = fmul float %3816, 2.000000e+00
  %3821 = tail call float @llvm.fma.f32(float %3814, float %3820, float %3819)
  %3822 = fadd float %3817, %3821
  %3823 = fsub float %3822, %3817
  %3824 = fsub float %3821, %3823
  %3825 = tail call float @llvm.fmuladd.f32(float %3822, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3826 = tail call float @llvm.fmuladd.f32(float %3822, float %3825, float 0x3FD999BDE0000000)
  %3827 = sitofp i32 %3794 to float
  %3828 = fmul float %3827, 0x3FE62E4300000000
  %3829 = fneg float %3828
  %3830 = tail call float @llvm.fma.f32(float %3827, float 0x3FE62E4300000000, float %3829)
  %3831 = tail call float @llvm.fma.f32(float %3827, float 0xBE205C6100000000, float %3830)
  %3832 = fadd float %3828, %3831
  %3833 = fsub float %3832, %3828
  %3834 = fsub float %3831, %3833
  %3835 = tail call float @llvm.amdgcn.ldexp.f32(float %3814, i32 1)
  %3836 = fmul float %3814, %3822
  %3837 = fneg float %3836
  %3838 = tail call float @llvm.fma.f32(float %3822, float %3814, float %3837)
  %3839 = tail call float @llvm.fma.f32(float %3822, float %3816, float %3838)
  %3840 = tail call float @llvm.fma.f32(float %3824, float %3814, float %3839)
  %3841 = fadd float %3836, %3840
  %3842 = fsub float %3841, %3836
  %3843 = fsub float %3840, %3842
  %3844 = fmul float %3822, %3826
  %3845 = fneg float %3844
  %3846 = tail call float @llvm.fma.f32(float %3822, float %3826, float %3845)
  %3847 = tail call float @llvm.fma.f32(float %3824, float %3826, float %3846)
  %3848 = fadd float %3844, %3847
  %3849 = fsub float %3848, %3844
  %3850 = fsub float %3847, %3849
  %3851 = fadd float %3848, 0x3FE5555540000000
  %3852 = fadd float %3851, 0xBFE5555540000000
  %3853 = fsub float %3848, %3852
  %3854 = fadd float %3850, 0x3E2E720200000000
  %3855 = fadd float %3854, %3853
  %3856 = fadd float %3851, %3855
  %3857 = fsub float %3856, %3851
  %3858 = fsub float %3855, %3857
  %3859 = fmul float %3841, %3856
  %3860 = fneg float %3859
  %3861 = tail call float @llvm.fma.f32(float %3841, float %3856, float %3860)
  %3862 = tail call float @llvm.fma.f32(float %3841, float %3858, float %3861)
  %3863 = tail call float @llvm.fma.f32(float %3843, float %3856, float %3862)
  %3864 = tail call float @llvm.amdgcn.ldexp.f32(float %3816, i32 1)
  %3865 = fadd float %3859, %3863
  %3866 = fsub float %3865, %3859
  %3867 = fsub float %3863, %3866
  %3868 = fadd float %3835, %3865
  %3869 = fsub float %3868, %3835
  %3870 = fsub float %3865, %3869
  %3871 = fadd float %3864, %3867
  %3872 = fadd float %3871, %3870
  %3873 = fadd float %3868, %3872
  %3874 = fsub float %3873, %3868
  %3875 = fsub float %3872, %3874
  %3876 = fadd float %3832, %3873
  %3877 = fsub float %3876, %3832
  %3878 = fsub float %3876, %3877
  %3879 = fsub float %3832, %3878
  %3880 = fsub float %3873, %3877
  %3881 = fadd float %3880, %3879
  %3882 = fadd float %3834, %3875
  %3883 = fsub float %3882, %3834
  %3884 = fsub float %3882, %3883
  %3885 = fsub float %3834, %3884
  %3886 = fsub float %3875, %3883
  %3887 = fadd float %3886, %3885
  %3888 = fadd float %3882, %3881
  %3889 = fadd float %3876, %3888
  %3890 = fsub float %3889, %3876
  %3891 = fsub float %3888, %3890
  %3892 = fadd float %3887, %3891
  %3893 = fadd float %3889, %3892
  %3894 = fsub float %3893, %3889
  %3895 = fsub float %3892, %3894
  %3896 = fmul float %3893, 0x3FFC978D40000000
  %3897 = fneg float %3896
  %3898 = tail call float @llvm.fma.f32(float %3893, float 0x3FFC978D40000000, float %3897)
  %3899 = tail call float @llvm.fma.f32(float %3895, float 0x3FFC978D40000000, float %3898)
  %3900 = fadd float %3896, %3899
  %3901 = fsub float %3900, %3896
  %3902 = fsub float %3899, %3901
  %3903 = tail call float @llvm.fabs.f32(float %3896) #3
  %3904 = fcmp oeq float %3903, 0x7FF0000000000000
  %3905 = select i1 %3904, float %3896, float %3900
  %3906 = tail call float @llvm.fabs.f32(float %3905) #3
  %3907 = fcmp oeq float %3906, 0x7FF0000000000000
  %3908 = select i1 %3907, float 0.000000e+00, float %3902
  %3909 = fcmp oeq float %3905, 0x40562E4300000000
  %3910 = select i1 %3909, float 0x3EE0000000000000, float 0.000000e+00
  %3911 = fsub float %3905, %3910
  %3912 = fadd float %3910, %3908
  %3913 = fmul float %3911, 0x3FF7154760000000
  %3914 = tail call float @llvm.rint.f32(float %3913)
  %3915 = fcmp ogt float %3911, 0x40562E4300000000
  %3916 = fcmp olt float %3911, 0xC059D1DA00000000
  %3917 = fneg float %3913
  %3918 = tail call float @llvm.fma.f32(float %3911, float 0x3FF7154760000000, float %3917)
  %3919 = tail call float @llvm.fma.f32(float %3911, float 0x3E54AE0BE0000000, float %3918)
  %3920 = fsub float %3913, %3914
  %3921 = fadd float %3919, %3920
  %3922 = tail call float @llvm.exp2.f32(float %3921)
  %3923 = fptosi float %3914 to i32
  %3924 = tail call float @llvm.amdgcn.ldexp.f32(float %3922, i32 %3923)
  %3925 = select i1 %3916, float 0.000000e+00, float %3924
  %3926 = select i1 %3915, float 0x7FF0000000000000, float %3925
  %3927 = tail call float @llvm.fma.f32(float %3926, float %3912, float %3926)
  %3928 = tail call float @llvm.fabs.f32(float %3926) #3
  %3929 = fcmp oeq float %3928, 0x7FF0000000000000
  %3930 = select i1 %3929, float %3926, float %3927
  %3931 = tail call float @llvm.fabs.f32(float %3930)
  %3932 = fcmp uge float %3787, 0.000000e+00
  %3933 = select i1 %3932, float %3931, float 0x7FF8000000000000
  %3934 = fcmp oeq float %3788, 0x7FF0000000000000
  %3935 = fcmp oeq float %3787, 0.000000e+00
  %3936 = or i1 %3935, %3934
  %3937 = select i1 %3935, float 0.000000e+00, float 0x7FF0000000000000
  %3938 = select i1 %3936, float %3937, float %3933
  %3939 = fcmp uno float %3787, 0.000000e+00
  %3940 = select i1 %3939, float 0x7FF8000000000000, float %3938
  %3941 = fcmp oeq float %3787, 1.000000e+00
  %3942 = select i1 %3941, float 1.000000e+00, float %3940
  %3943 = fdiv contract float %73, 0x3FFB333340000000
  %3944 = tail call float @llvm.fabs.f32(float %3943)
  %3945 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3944)
  %3946 = fcmp olt float %3945, 0x3FE5555560000000
  %3947 = zext i1 %3946 to i32
  %3948 = tail call float @llvm.amdgcn.ldexp.f32(float %3945, i32 %3947)
  %3949 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3944)
  %3950 = sub nsw i32 %3949, %3947
  %3951 = fadd float %3948, -1.000000e+00
  %3952 = fadd float %3948, 1.000000e+00
  %3953 = fadd float %3952, -1.000000e+00
  %3954 = fsub float %3948, %3953
  %3955 = tail call float @llvm.amdgcn.rcp.f32(float %3952)
  %3956 = fmul float %3951, %3955
  %3957 = fmul float %3952, %3956
  %3958 = fneg float %3957
  %3959 = tail call float @llvm.fma.f32(float %3956, float %3952, float %3958)
  %3960 = tail call float @llvm.fma.f32(float %3956, float %3954, float %3959)
  %3961 = fadd float %3957, %3960
  %3962 = fsub float %3961, %3957
  %3963 = fsub float %3960, %3962
  %3964 = fsub float %3951, %3961
  %3965 = fsub float %3951, %3964
  %3966 = fsub float %3965, %3961
  %3967 = fsub float %3966, %3963
  %3968 = fadd float %3964, %3967
  %3969 = fmul float %3955, %3968
  %3970 = fadd float %3956, %3969
  %3971 = fsub float %3970, %3956
  %3972 = fsub float %3969, %3971
  %3973 = fmul float %3970, %3970
  %3974 = fneg float %3973
  %3975 = tail call float @llvm.fma.f32(float %3970, float %3970, float %3974)
  %3976 = fmul float %3972, 2.000000e+00
  %3977 = tail call float @llvm.fma.f32(float %3970, float %3976, float %3975)
  %3978 = fadd float %3973, %3977
  %3979 = fsub float %3978, %3973
  %3980 = fsub float %3977, %3979
  %3981 = tail call float @llvm.fmuladd.f32(float %3978, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3982 = tail call float @llvm.fmuladd.f32(float %3978, float %3981, float 0x3FD999BDE0000000)
  %3983 = sitofp i32 %3950 to float
  %3984 = fmul float %3983, 0x3FE62E4300000000
  %3985 = fneg float %3984
  %3986 = tail call float @llvm.fma.f32(float %3983, float 0x3FE62E4300000000, float %3985)
  %3987 = tail call float @llvm.fma.f32(float %3983, float 0xBE205C6100000000, float %3986)
  %3988 = fadd float %3984, %3987
  %3989 = fsub float %3988, %3984
  %3990 = fsub float %3987, %3989
  %3991 = tail call float @llvm.amdgcn.ldexp.f32(float %3970, i32 1)
  %3992 = fmul float %3970, %3978
  %3993 = fneg float %3992
  %3994 = tail call float @llvm.fma.f32(float %3978, float %3970, float %3993)
  %3995 = tail call float @llvm.fma.f32(float %3978, float %3972, float %3994)
  %3996 = tail call float @llvm.fma.f32(float %3980, float %3970, float %3995)
  %3997 = fadd float %3992, %3996
  %3998 = fsub float %3997, %3992
  %3999 = fsub float %3996, %3998
  %4000 = fmul float %3978, %3982
  %4001 = fneg float %4000
  %4002 = tail call float @llvm.fma.f32(float %3978, float %3982, float %4001)
  %4003 = tail call float @llvm.fma.f32(float %3980, float %3982, float %4002)
  %4004 = fadd float %4000, %4003
  %4005 = fsub float %4004, %4000
  %4006 = fsub float %4003, %4005
  %4007 = fadd float %4004, 0x3FE5555540000000
  %4008 = fadd float %4007, 0xBFE5555540000000
  %4009 = fsub float %4004, %4008
  %4010 = fadd float %4006, 0x3E2E720200000000
  %4011 = fadd float %4010, %4009
  %4012 = fadd float %4007, %4011
  %4013 = fsub float %4012, %4007
  %4014 = fsub float %4011, %4013
  %4015 = fmul float %3997, %4012
  %4016 = fneg float %4015
  %4017 = tail call float @llvm.fma.f32(float %3997, float %4012, float %4016)
  %4018 = tail call float @llvm.fma.f32(float %3997, float %4014, float %4017)
  %4019 = tail call float @llvm.fma.f32(float %3999, float %4012, float %4018)
  %4020 = tail call float @llvm.amdgcn.ldexp.f32(float %3972, i32 1)
  %4021 = fadd float %4015, %4019
  %4022 = fsub float %4021, %4015
  %4023 = fsub float %4019, %4022
  %4024 = fadd float %3991, %4021
  %4025 = fsub float %4024, %3991
  %4026 = fsub float %4021, %4025
  %4027 = fadd float %4020, %4023
  %4028 = fadd float %4027, %4026
  %4029 = fadd float %4024, %4028
  %4030 = fsub float %4029, %4024
  %4031 = fsub float %4028, %4030
  %4032 = fadd float %3988, %4029
  %4033 = fsub float %4032, %3988
  %4034 = fsub float %4032, %4033
  %4035 = fsub float %3988, %4034
  %4036 = fsub float %4029, %4033
  %4037 = fadd float %4036, %4035
  %4038 = fadd float %3990, %4031
  %4039 = fsub float %4038, %3990
  %4040 = fsub float %4038, %4039
  %4041 = fsub float %3990, %4040
  %4042 = fsub float %4031, %4039
  %4043 = fadd float %4042, %4041
  %4044 = fadd float %4038, %4037
  %4045 = fadd float %4032, %4044
  %4046 = fsub float %4045, %4032
  %4047 = fsub float %4044, %4046
  %4048 = fadd float %4043, %4047
  %4049 = fadd float %4045, %4048
  %4050 = fsub float %4049, %4045
  %4051 = fsub float %4048, %4050
  %4052 = fmul float %4049, 0x3FFC978D40000000
  %4053 = fneg float %4052
  %4054 = tail call float @llvm.fma.f32(float %4049, float 0x3FFC978D40000000, float %4053)
  %4055 = tail call float @llvm.fma.f32(float %4051, float 0x3FFC978D40000000, float %4054)
  %4056 = fadd float %4052, %4055
  %4057 = fsub float %4056, %4052
  %4058 = fsub float %4055, %4057
  %4059 = tail call float @llvm.fabs.f32(float %4052) #3
  %4060 = fcmp oeq float %4059, 0x7FF0000000000000
  %4061 = select i1 %4060, float %4052, float %4056
  %4062 = tail call float @llvm.fabs.f32(float %4061) #3
  %4063 = fcmp oeq float %4062, 0x7FF0000000000000
  %4064 = select i1 %4063, float 0.000000e+00, float %4058
  %4065 = fcmp oeq float %4061, 0x40562E4300000000
  %4066 = select i1 %4065, float 0x3EE0000000000000, float 0.000000e+00
  %4067 = fsub float %4061, %4066
  %4068 = fadd float %4066, %4064
  %4069 = fmul float %4067, 0x3FF7154760000000
  %4070 = tail call float @llvm.rint.f32(float %4069)
  %4071 = fcmp ogt float %4067, 0x40562E4300000000
  %4072 = fcmp olt float %4067, 0xC059D1DA00000000
  %4073 = fneg float %4069
  %4074 = tail call float @llvm.fma.f32(float %4067, float 0x3FF7154760000000, float %4073)
  %4075 = tail call float @llvm.fma.f32(float %4067, float 0x3E54AE0BE0000000, float %4074)
  %4076 = fsub float %4069, %4070
  %4077 = fadd float %4075, %4076
  %4078 = tail call float @llvm.exp2.f32(float %4077)
  %4079 = fptosi float %4070 to i32
  %4080 = tail call float @llvm.amdgcn.ldexp.f32(float %4078, i32 %4079)
  %4081 = select i1 %4072, float 0.000000e+00, float %4080
  %4082 = select i1 %4071, float 0x7FF0000000000000, float %4081
  %4083 = tail call float @llvm.fma.f32(float %4082, float %4068, float %4082)
  %4084 = tail call float @llvm.fabs.f32(float %4082) #3
  %4085 = fcmp oeq float %4084, 0x7FF0000000000000
  %4086 = select i1 %4085, float %4082, float %4083
  %4087 = tail call float @llvm.fabs.f32(float %4086)
  %4088 = fcmp uge float %3943, 0.000000e+00
  %4089 = select i1 %4088, float %4087, float 0x7FF8000000000000
  %4090 = fcmp oeq float %3944, 0x7FF0000000000000
  %4091 = fcmp oeq float %3943, 0.000000e+00
  %4092 = or i1 %4091, %4090
  %4093 = select i1 %4091, float 0.000000e+00, float 0x7FF0000000000000
  %4094 = select i1 %4092, float %4093, float %4089
  %4095 = fcmp uno float %3943, 0.000000e+00
  %4096 = select i1 %4095, float 0x7FF8000000000000, float %4094
  %4097 = fcmp oeq float %3943, 1.000000e+00
  %4098 = select i1 %4097, float 1.000000e+00, float %4096
  %4099 = fsub contract float %3942, %4098
  %4100 = fmul contract float %4099, 0x3F32BE48A0000000
  %4101 = fadd contract float %3942, 1.000000e+00
  %4102 = fadd contract float %4098, %4101
  %4103 = fdiv contract float %4100, %4102
  %4104 = fpext float %3785 to double
  %4105 = fmul contract double %4104, 5.348000e-06
  %4106 = fptrunc double %4105 to float
  %4107 = fmul contract float %75, 0x3F1A36E2E0000000
  %4108 = fsub contract float 0x401E3E76C0000000, %47
  %4109 = fmul contract float %4108, %4107
  %4110 = fmul contract float %47, 0x3F50624DE0000000
  %4111 = fsub contract float %4109, %4110
  %4112 = getelementptr inbounds float, float addrspace(1)* %2, i64 16
  store float %4111, float addrspace(1)* %4112, align 4, !tbaa !6
  %4113 = fmul contract float %77, 0x3F1A36E2E0000000
  %4114 = fsub contract float 0x3FFA666660000000, %49
  %4115 = fmul contract float %4114, %4113
  %4116 = fmul contract float %49, 0x3F50624DE0000000
  %4117 = fsub contract float %4115, %4116
  %4118 = getelementptr inbounds float, float addrspace(1)* %2, i64 17
  store float %4117, float addrspace(1)* %4118, align 4, !tbaa !6
  %4119 = fmul contract float %87, 0x40405999A0000000
  %4120 = fsub contract float 0x3FB1EB8520000000, %51
  %4121 = fmul contract float %4120, %4119
  %4122 = fmul contract float %51, 0x3F941205C0000000
  %4123 = fsub contract float %4121, %4122
  %4124 = getelementptr inbounds float, float addrspace(1)* %2, i64 18
  store float %4123, float addrspace(1)* %4124, align 4, !tbaa !6
  %4125 = fmul contract float %87, 0x4002F5C280000000
  %4126 = fsub contract float 0x3FC1EB8520000000, %53
  %4127 = fsub contract float %4126, %55
  %4128 = fmul contract float %4127, %4125
  %4129 = fmul contract float %53, 0x3F00C6F7A0000000
  %4130 = fsub contract float %4128, %4129
  %4131 = getelementptr inbounds float, float addrspace(1)* %2, i64 19
  store float %4130, float addrspace(1)* %4131, align 4, !tbaa !6
  %4132 = fmul contract float %4127, 0x3F689374C0000000
  %4133 = fmul contract float %55, 0x3F6B478420000000
  %4134 = fsub contract float %4132, %4133
  %4135 = getelementptr inbounds float, float addrspace(1)* %2, i64 20
  store float %4134, float addrspace(1)* %4135, align 4, !tbaa !6
  %4136 = getelementptr inbounds float, float addrspace(1)* %2, i64 21
  store float 0.000000e+00, float addrspace(1)* %4136, align 4, !tbaa !6
  %4137 = fmul contract float %87, 0x402B9999A0000000
  %4138 = fsub contract float 0x3FC1EB8520000000, %57
  %4139 = fsub contract float %4138, %59
  %4140 = fmul contract float %4139, %4137
  %4141 = fmul contract float %57, 0x3F3E258500000000
  %4142 = fsub contract float %4140, %4141
  %4143 = getelementptr inbounds float, float addrspace(1)* %2, i64 22
  store float %4142, float addrspace(1)* %4143, align 4, !tbaa !6
  %4144 = fmul contract float %4139, 0x3F9013A920000000
  %4145 = fmul contract float %59, 0x3F0DE26920000000
  %4146 = fsub contract float %4144, %4145
  %4147 = getelementptr inbounds float, float addrspace(1)* %2, i64 23
  store float %4146, float addrspace(1)* %4147, align 4, !tbaa !6
  %4148 = fmul contract float %87, 1.000000e+02
  %4149 = fsub contract float 0x3F9182A9A0000000, %61
  %4150 = fmul contract float %4149, %4148
  %4151 = fmul contract float %61, 0x3FAEB851E0000000
  %4152 = fsub contract float %4150, %4151
  %4153 = getelementptr inbounds float, float addrspace(1)* %2, i64 24
  store float %4152, float addrspace(1)* %4153, align 4, !tbaa !6
  %4154 = fadd contract float %4123, %4130
  %4155 = fadd contract float %4134, %4154
  %4156 = fadd contract float %4155, 0.000000e+00
  %4157 = fadd contract float %4142, %4156
  %4158 = fadd contract float %4146, %4157
  %4159 = fadd contract float %4152, %4158
  %4160 = fmul contract float %83, 1.000000e+02
  %4161 = fsub contract float 0x3FE1D41D40000000, %63
  %4162 = fmul contract float %4161, %4160
  %4163 = fmul contract float %63, 0x3FF4CCCCC0000000
  %4164 = fsub contract float %4162, %4163
  %4165 = getelementptr inbounds float, float addrspace(1)* %2, i64 25
  store float %4164, float addrspace(1)* %4165, align 4, !tbaa !6
  %4166 = fmul contract float %85, 1.000000e+02
  %4167 = fsub contract float 0x3FF3700680000000, %65
  %4168 = fmul contract float %4167, %4166
  %4169 = fmul contract float %65, 0x3FF4CCCCC0000000
  %4170 = fsub contract float %4168, %4169
  %4171 = getelementptr inbounds float, float addrspace(1)* %2, i64 26
  store float %4170, float addrspace(1)* %4171, align 4, !tbaa !6
  %4172 = fsub contract float 0x3FC97829C0000000, %67
  %4173 = fmul contract float %4172, %4160
  %4174 = fmul contract float %67, 0x3F9EB851E0000000
  %4175 = fsub contract float %4173, %4174
  %4176 = getelementptr inbounds float, float addrspace(1)* %2, i64 27
  store float %4175, float addrspace(1)* %4176, align 4, !tbaa !6
  %4177 = fsub contract float 0x3FDBC49BA0000000, %69
  %4178 = fmul contract float %4177, %4166
  %4179 = fmul contract float %69, 0x3F9EB851E0000000
  %4180 = fsub contract float %4178, %4179
  %4181 = getelementptr inbounds float, float addrspace(1)* %2, i64 28
  store float %4180, float addrspace(1)* %4181, align 4, !tbaa !6
  %4182 = fadd contract float %4164, %4175
  %4183 = fadd contract float %4170, %4180
  %4184 = fmul contract float %73, 1.000000e+02
  %4185 = fsub contract float 0x40059999A0000000, %71
  %4186 = fmul contract float %4185, %4184
  %4187 = fmul contract float %71, 6.500000e+01
  %4188 = fsub contract float %4186, %4187
  %4189 = getelementptr inbounds float, float addrspace(1)* %2, i64 29
  store float %4188, float addrspace(1)* %4189, align 4, !tbaa !6
  %4190 = fmul contract float %4103, 0x3DB796D0C0000000
  %4191 = fmul contract float %4190, 0x4269317620000000
  %4192 = fmul contract float %4106, 0x3DB796D0C0000000
  %4193 = fmul contract float %4192, 0x4269317620000000
  %4194 = fadd contract float %3786, %4193
  %4195 = fsub contract float %4191, %4194
  %4196 = fsub contract float %4195, %4188
  %4197 = getelementptr inbounds float, float addrspace(1)* %2, i64 30
  store float %4196, float addrspace(1)* %4197, align 4, !tbaa !6
  %4198 = fadd contract float %671, %665
  %4199 = fmul contract float %3218, 3.000000e+00
  %4200 = fadd contract float %4198, %4199
  %4201 = fmul contract float %877, 3.000000e+00
  %4202 = fadd contract float %4201, %4200
  %4203 = fadd contract float %4202, %2193
  %4204 = fadd contract float %672, %670
  %4205 = fmul contract float %3223, 3.000000e+00
  %4206 = fadd contract float %4204, %4205
  %4207 = fmul contract float %1036, 3.000000e+00
  %4208 = fadd contract float %4207, %4206
  %4209 = fadd contract float %4208, %2200
  %4210 = fmul contract float %4203, 0x3DE2FAF640000000
  %4211 = fdiv contract float %4210, 0x3E1D7D4E40000000
  %4212 = fsub contract float %77, %75
  %4213 = fmul contract float %4212, 0x3FF0784160000000
  %4214 = fsub contract float %4213, %4211
  %4215 = fsub contract float %4214, %4111
  %4216 = getelementptr inbounds float, float addrspace(1)* %2, i64 31
  store float %4215, float addrspace(1)* %4216, align 4, !tbaa !6
  %4217 = fmul contract float %4209, 0x3DE2FAF640000000
  %4218 = fmul contract float %4217, 0x42760B4760000000
  %4219 = fdiv contract float %4218, 9.648500e+04
  %4220 = fsub contract float %75, %77
  %4221 = fmul contract float %4220, 0x3F9C683280000000
  %4222 = fsub contract float %4221, %4219
  %4223 = fsub contract float %79, %77
  %4224 = fmul contract float %4223, 0x4003DBB880000000
  %4225 = fadd contract float %4224, %4222
  %4226 = fsub contract float %4225, %4117
  %4227 = getelementptr inbounds float, float addrspace(1)* %2, i64 32
  store float %4226, float addrspace(1)* %4227, align 4, !tbaa !6
  %4228 = fsub contract float %77, %79
  %4229 = fmul contract float %4228, 0x3FB38D8280000000
  %4230 = getelementptr inbounds float, float addrspace(1)* %2, i64 33
  store float %4229, float addrspace(1)* %4230, align 4, !tbaa !6
  %4231 = getelementptr inbounds float, float addrspace(1)* %2, i64 34
  store float 0.000000e+00, float addrspace(1)* %4231, align 4, !tbaa !6
  %4232 = fadd contract float %3552, %2174
  %4233 = fadd contract float %4232, %3387
  %4234 = fmul contract float %3218, 2.000000e+00
  %4235 = fsub contract float %4233, %4234
  %4236 = fadd contract float %3554, %2181
  %4237 = fadd contract float %4236, %3545
  %4238 = fmul contract float %3223, 2.000000e+00
  %4239 = fsub contract float %4237, %4238
  %4240 = fmul contract float %4235, 0x3DE2FAF640000000
  %4241 = fdiv contract float %4240, 0x3E2D7D4E40000000
  %4242 = fsub contract float %85, %83
  %4243 = fmul contract float %4242, 0x40472981C0000000
  %4244 = fsub contract float %4243, %4241
  %4245 = fsub contract float %4244, %4182
  %4246 = fmul contract float %3786, 0x3D7452AC00000000
  %4247 = fdiv contract float %4246, 0x3D1407C0E0000000
  %4248 = fadd contract float %4247, %4245
  %4249 = fdiv contract float %4192, 0x3D1407C0E0000000
  %4250 = fadd contract float %4249, %4248
  %4251 = getelementptr inbounds float, float addrspace(1)* %2, i64 35
  store float %4250, float addrspace(1)* %4251, align 4, !tbaa !6
  %4252 = fmul contract float %4239, 0x3DE2FAF640000000
  %4253 = fdiv contract float %4252, 0x3E8118EAA0000000
  %4254 = fsub contract float %83, %85
  %4255 = fmul contract float %4254, 0x3FF3F99B60000000
  %4256 = fsub contract float %4255, %4253
  %4257 = fsub contract float %87, %85
  %4258 = fmul contract float %4257, 0x4016911D00000000
  %4259 = fadd contract float %4258, %4256
  %4260 = fsub contract float %4259, %4183
  %4261 = getelementptr inbounds float, float addrspace(1)* %2, i64 36
  store float %4260, float addrspace(1)* %4261, align 4, !tbaa !6
  %4262 = fneg contract float %4103
  %4263 = fsub contract float %4262, %4159
  %4264 = fsub contract float %85, %87
  %4265 = fmul contract float %4264, 0x3FC6383C20000000
  %4266 = fadd contract float %4265, %4263
  %4267 = getelementptr inbounds float, float addrspace(1)* %2, i64 37
  store float %4266, float addrspace(1)* %4267, align 4, !tbaa !6
  %4268 = tail call float @llvm.fabs.f32(float %12)
  %4269 = tail call float @llvm.fabs.f32(float %14)
  %4270 = fcmp ogt float %4268, %4269
  br i1 %4270, label %4271, label %4313

4271:                                             ; preds = %462
  %4272 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4268)
  %4273 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4268)
  %4274 = tail call float @llvm.amdgcn.ldexp.f32(float %4273, i32 12)
  %4275 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4269)
  %4276 = add nsw i32 %4275, -1
  %4277 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4269)
  %4278 = tail call float @llvm.amdgcn.ldexp.f32(float %4277, i32 1)
  %4279 = sub i32 %4272, %4275
  %4280 = tail call float @llvm.amdgcn.rcp.f32(float %4278)
  %4281 = icmp sgt i32 %4279, 12
  br i1 %4281, label %4282, label %4295

4282:                                             ; preds = %4271, %4282
  %4283 = phi float [ %4292, %4282 ], [ %4274, %4271 ]
  %4284 = phi i32 [ %4293, %4282 ], [ %4279, %4271 ]
  %4285 = fmul float %4280, %4283
  %4286 = tail call float @llvm.rint.f32(float %4285)
  %4287 = fneg float %4286
  %4288 = tail call float @llvm.fma.f32(float %4287, float %4278, float %4283)
  %4289 = fcmp olt float %4288, 0.000000e+00
  %4290 = select i1 %4289, float %4278, float -0.000000e+00
  %4291 = fadd float %4288, %4290
  %4292 = tail call float @llvm.amdgcn.ldexp.f32(float %4291, i32 12)
  %4293 = add nsw i32 %4284, -12
  %4294 = icmp ugt i32 %4284, 24
  br i1 %4294, label %4282, label %4295

4295:                                             ; preds = %4282, %4271
  %4296 = phi i32 [ %4279, %4271 ], [ %4293, %4282 ]
  %4297 = phi float [ %4274, %4271 ], [ %4292, %4282 ]
  %4298 = add nsw i32 %4296, -11
  %4299 = tail call float @llvm.amdgcn.ldexp.f32(float %4297, i32 %4298)
  %4300 = fmul float %4280, %4299
  %4301 = tail call float @llvm.rint.f32(float %4300)
  %4302 = fneg float %4301
  %4303 = tail call float @llvm.fma.f32(float %4302, float %4278, float %4299)
  %4304 = fcmp olt float %4303, 0.000000e+00
  %4305 = select i1 %4304, float %4278, float -0.000000e+00
  %4306 = fadd float %4303, %4305
  %4307 = tail call float @llvm.amdgcn.ldexp.f32(float %4306, i32 %4276)
  %4308 = bitcast float %12 to i32
  %4309 = and i32 %4308, -2147483648
  %4310 = bitcast float %4307 to i32
  %4311 = xor i32 %4309, %4310
  %4312 = bitcast i32 %4311 to float
  br label %4317

4313:                                             ; preds = %462
  %4314 = fcmp oeq float %4268, %4269
  %4315 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %12)
  %4316 = select i1 %4314, float %4315, float %12
  br label %4317

4317:                                             ; preds = %4295, %4313
  %4318 = phi float [ %4312, %4295 ], [ %4316, %4313 ]
  %4319 = fcmp olt double %1794, -1.075000e+03
  %4320 = fcmp ogt double %1794, 1.024000e+03
  %4321 = tail call double @llvm.fma.f64(double %1799, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4322 = tail call double @llvm.fma.f64(double %1799, double %4321, double 0x3EC71DEE623FDE64)
  %4323 = tail call double @llvm.fma.f64(double %1799, double %4322, double 0x3EFA01997C89E6B0)
  %4324 = tail call double @llvm.fma.f64(double %1799, double %4323, double 0x3F2A01A014761F6E)
  %4325 = tail call double @llvm.fma.f64(double %1799, double %4324, double 0x3F56C16C1852B7B0)
  %4326 = tail call double @llvm.fma.f64(double %1799, double %4325, double 0x3F81111111122322)
  %4327 = tail call double @llvm.fma.f64(double %1799, double %4326, double 0x3FA55555555502A1)
  %4328 = tail call double @llvm.fma.f64(double %1799, double %4327, double 0x3FC5555555555511)
  %4329 = tail call double @llvm.fma.f64(double %1799, double %4328, double 0x3FE000000000000B)
  %4330 = tail call double @llvm.fma.f64(double %1799, double %4329, double 1.000000e+00)
  %4331 = tail call double @llvm.fma.f64(double %1799, double %4330, double 1.000000e+00)
  %4332 = fptosi double %1796 to i32
  %4333 = tail call double @llvm.amdgcn.ldexp.f64(double %4331, i32 %4332)
  %4334 = fcmp olt double %1787, -1.075000e+03
  %4335 = fcmp ogt double %1787, 1.024000e+03
  %4336 = tail call double @llvm.fma.f64(double %1792, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4337 = tail call double @llvm.fma.f64(double %1792, double %4336, double 0x3EC71DEE623FDE64)
  %4338 = tail call double @llvm.fma.f64(double %1792, double %4337, double 0x3EFA01997C89E6B0)
  %4339 = tail call double @llvm.fma.f64(double %1792, double %4338, double 0x3F2A01A014761F6E)
  %4340 = tail call double @llvm.fma.f64(double %1792, double %4339, double 0x3F56C16C1852B7B0)
  %4341 = tail call double @llvm.fma.f64(double %1792, double %4340, double 0x3F81111111122322)
  %4342 = tail call double @llvm.fma.f64(double %1792, double %4341, double 0x3FA55555555502A1)
  %4343 = tail call double @llvm.fma.f64(double %1792, double %4342, double 0x3FC5555555555511)
  %4344 = tail call double @llvm.fma.f64(double %1792, double %4343, double 0x3FE000000000000B)
  %4345 = tail call double @llvm.fma.f64(double %1792, double %4344, double 1.000000e+00)
  %4346 = tail call double @llvm.fma.f64(double %1792, double %4345, double 1.000000e+00)
  %4347 = fptosi double %1789 to i32
  %4348 = tail call double @llvm.amdgcn.ldexp.f64(double %4346, i32 %4347)
  %4349 = select i1 %4335, double 0x7FF0000000000000, double %4348
  %4350 = select i1 %4334, double 0.000000e+00, double %4349
  %4351 = fcmp olt double %1780, -1.075000e+03
  %4352 = fcmp ogt double %1780, 1.024000e+03
  %4353 = tail call double @llvm.fma.f64(double %1785, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4354 = tail call double @llvm.fma.f64(double %1785, double %4353, double 0x3EC71DEE623FDE64)
  %4355 = tail call double @llvm.fma.f64(double %1785, double %4354, double 0x3EFA01997C89E6B0)
  %4356 = tail call double @llvm.fma.f64(double %1785, double %4355, double 0x3F2A01A014761F6E)
  %4357 = tail call double @llvm.fma.f64(double %1785, double %4356, double 0x3F56C16C1852B7B0)
  %4358 = tail call double @llvm.fma.f64(double %1785, double %4357, double 0x3F81111111122322)
  %4359 = tail call double @llvm.fma.f64(double %1785, double %4358, double 0x3FA55555555502A1)
  %4360 = tail call double @llvm.fma.f64(double %1785, double %4359, double 0x3FC5555555555511)
  %4361 = tail call double @llvm.fma.f64(double %1785, double %4360, double 0x3FE000000000000B)
  %4362 = tail call double @llvm.fma.f64(double %1785, double %4361, double 1.000000e+00)
  %4363 = tail call double @llvm.fma.f64(double %1785, double %4362, double 1.000000e+00)
  %4364 = fptosi double %1782 to i32
  %4365 = tail call double @llvm.amdgcn.ldexp.f64(double %4363, i32 %4364)
  %4366 = fcmp uno float %39, 0.000000e+00
  %4367 = fcmp oeq float %1435, 0x7FF0000000000000
  %4368 = or i1 %1570, %4367
  %4369 = select i1 %1570, float 0.000000e+00, float 0x7FF0000000000000
  %4370 = tail call float @llvm.fabs.f32(float %1569) #3
  %4371 = fcmp oeq float %4370, 0x7FF0000000000000
  %4372 = tail call float @llvm.fabs.f32(float %1552) #3
  %4373 = fcmp oeq float %4372, 0x7FF0000000000000
  %4374 = fsub float %1549, %1543
  %4375 = fsub float %1548, %4374
  %4376 = select i1 %4373, float 0.000000e+00, float %4375
  %4377 = fadd float %1554, %4376
  %4378 = tail call float @llvm.fma.f32(float %1569, float %4377, float %1569)
  %4379 = select i1 %4371, float %1569, float %4378
  %4380 = tail call float @llvm.fabs.f32(float %4379)
  %4381 = select i1 %4368, float %4369, float %4380
  %4382 = select i1 %4366, float 0x7FF8000000000000, float %4381
  %4383 = fcmp uno float %37, 0.000000e+00
  %4384 = fcmp oeq float %1298, 0x7FF0000000000000
  %4385 = or i1 %1433, %4384
  %4386 = select i1 %1433, float 0.000000e+00, float 0x7FF0000000000000
  %4387 = tail call float @llvm.fabs.f32(float %1432) #3
  %4388 = fcmp oeq float %4387, 0x7FF0000000000000
  %4389 = tail call float @llvm.fabs.f32(float %1415) #3
  %4390 = fcmp oeq float %4389, 0x7FF0000000000000
  %4391 = fsub float %1412, %1406
  %4392 = fsub float %1411, %4391
  %4393 = select i1 %4390, float 0.000000e+00, float %4392
  %4394 = fadd float %1417, %4393
  %4395 = tail call float @llvm.fma.f32(float %1432, float %4394, float %1432)
  %4396 = select i1 %4388, float %1432, float %4395
  %4397 = tail call float @llvm.fabs.f32(float %4396)
  %4398 = select i1 %4385, float %4386, float %4397
  %4399 = select i1 %4383, float 0x7FF8000000000000, float %4398
  %4400 = fcmp olt double %1188, -1.075000e+03
  %4401 = fcmp ogt double %1188, 1.024000e+03
  %4402 = tail call double @llvm.fma.f64(double %1193, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4403 = tail call double @llvm.fma.f64(double %1193, double %4402, double 0x3EC71DEE623FDE64)
  %4404 = tail call double @llvm.fma.f64(double %1193, double %4403, double 0x3EFA01997C89E6B0)
  %4405 = tail call double @llvm.fma.f64(double %1193, double %4404, double 0x3F2A01A014761F6E)
  %4406 = tail call double @llvm.fma.f64(double %1193, double %4405, double 0x3F56C16C1852B7B0)
  %4407 = tail call double @llvm.fma.f64(double %1193, double %4406, double 0x3F81111111122322)
  %4408 = tail call double @llvm.fma.f64(double %1193, double %4407, double 0x3FA55555555502A1)
  %4409 = tail call double @llvm.fma.f64(double %1193, double %4408, double 0x3FC5555555555511)
  %4410 = tail call double @llvm.fma.f64(double %1193, double %4409, double 0x3FE000000000000B)
  %4411 = tail call double @llvm.fma.f64(double %1193, double %4410, double 1.000000e+00)
  %4412 = tail call double @llvm.fma.f64(double %1193, double %4411, double 1.000000e+00)
  %4413 = fptosi double %1190 to i32
  %4414 = tail call double @llvm.amdgcn.ldexp.f64(double %4412, i32 %4413)
  %4415 = fcmp olt double %1180, -1.075000e+03
  %4416 = fcmp ogt double %1180, 1.024000e+03
  %4417 = tail call double @llvm.fma.f64(double %1185, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4418 = tail call double @llvm.fma.f64(double %1185, double %4417, double 0x3EC71DEE623FDE64)
  %4419 = tail call double @llvm.fma.f64(double %1185, double %4418, double 0x3EFA01997C89E6B0)
  %4420 = tail call double @llvm.fma.f64(double %1185, double %4419, double 0x3F2A01A014761F6E)
  %4421 = tail call double @llvm.fma.f64(double %1185, double %4420, double 0x3F56C16C1852B7B0)
  %4422 = tail call double @llvm.fma.f64(double %1185, double %4421, double 0x3F81111111122322)
  %4423 = tail call double @llvm.fma.f64(double %1185, double %4422, double 0x3FA55555555502A1)
  %4424 = tail call double @llvm.fma.f64(double %1185, double %4423, double 0x3FC5555555555511)
  %4425 = tail call double @llvm.fma.f64(double %1185, double %4424, double 0x3FE000000000000B)
  %4426 = tail call double @llvm.fma.f64(double %1185, double %4425, double 1.000000e+00)
  %4427 = tail call double @llvm.fma.f64(double %1185, double %4426, double 1.000000e+00)
  %4428 = fptosi double %1182 to i32
  %4429 = tail call double @llvm.amdgcn.ldexp.f64(double %4427, i32 %4428)
  %4430 = fcmp olt double %1143, -1.075000e+03
  %4431 = fcmp ogt double %1143, 1.024000e+03
  %4432 = tail call double @llvm.fma.f64(double %1148, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %4433 = tail call double @llvm.fma.f64(double %1148, double %4432, double 0x3EC71DEE623FDE64)
  %4434 = tail call double @llvm.fma.f64(double %1148, double %4433, double 0x3EFA01997C89E6B0)
  %4435 = tail call double @llvm.fma.f64(double %1148, double %4434, double 0x3F2A01A014761F6E)
  %4436 = tail call double @llvm.fma.f64(double %1148, double %4435, double 0x3F56C16C1852B7B0)
  %4437 = tail call double @llvm.fma.f64(double %1148, double %4436, double 0x3F81111111122322)
  %4438 = tail call double @llvm.fma.f64(double %1148, double %4437, double 0x3FA55555555502A1)
  %4439 = tail call double @llvm.fma.f64(double %1148, double %4438, double 0x3FC5555555555511)
  %4440 = tail call double @llvm.fma.f64(double %1148, double %4439, double 0x3FE000000000000B)
  %4441 = tail call double @llvm.fma.f64(double %1148, double %4440, double 1.000000e+00)
  %4442 = tail call double @llvm.fma.f64(double %1148, double %4441, double 1.000000e+00)
  %4443 = fptosi double %1145 to i32
  %4444 = tail call double @llvm.amdgcn.ldexp.f64(double %4442, i32 %4443)
  %4445 = fcmp oeq float %14, 0.000000e+00
  %4446 = select i1 %4445, float 0x7FF8000000000000, float %4318
  %4447 = fcmp ord float %14, 0.000000e+00
  %4448 = tail call i1 @llvm.amdgcn.class.f32(float %12, i32 504)
  %4449 = select i1 %4447, i1 %4448, i1 false
  %4450 = select i1 %4449, float %4446, float 0x7FF8000000000000
  %4451 = fcmp contract ugt float %4450, 5.000000e+00
  %4452 = select i1 %4451, float 0.000000e+00, float 9.500000e+00
  %4453 = fmul contract float %33, 0x3F947AE140000000
  %4454 = fmul contract float %4453, %35
  %4455 = fmul contract float %4454, %1149
  %4456 = fpext float %91 to double
  %4457 = fmul contract double %4456, 5.000000e-01
  %4458 = fpext float %31 to double
  %4459 = fadd contract double %4457, %4458
  %4460 = fmul contract float %29, 0x3FAEB851E0000000
  %4461 = fpext float %4460 to double
  %4462 = fmul contract double %4459, %4461
  %4463 = fmul contract double %4462, %1719
  %4464 = fptrunc double %4463 to float
  %4465 = fadd contract float %4455, %4464
  %4466 = fmul contract double %1049, 3.000000e-02
  %4467 = fptrunc double %4466 to float
  %4468 = fmul contract float %37, %4467
  %4469 = fadd contract double %4444, 1.000000e+00
  %4470 = fdiv contract double 1.000000e+00, %4469
  %4471 = select i1 %4431, double 0.000000e+00, double %4470
  %4472 = select i1 %4430, double 1.000000e+00, double %4471
  %4473 = fptrunc double %4472 to float
  %4474 = fmul contract float %4468, %4473
  %4475 = fmul contract float %1149, %4474
  %4476 = fadd contract float %4465, %4475
  %4477 = fadd contract double %4429, 1.000000e+00
  %4478 = fdiv contract double 1.900000e-01, %4477
  %4479 = fadd contract double %4478, 5.700000e-02
  %4480 = fmul contract double %4479, 7.000000e-02
  %4481 = select i1 %4416, double 0x3F7057D1782D3848, double %4480
  %4482 = select i1 %4415, double 1.729000e-02, double %4481
  %4483 = fptrunc double %4482 to float
  %4484 = fmul contract float %4483, 0x3FBC28F5C0000000
  %4485 = fmul contract float %4484, %4399
  %4486 = fmul contract float %1434, %4485
  %4487 = fadd contract double %4414, 1.000000e+00
  %4488 = fdiv contract double 1.900000e-01, %4487
  %4489 = fadd contract double %4488, 5.700000e-02
  %4490 = fmul contract double %4489, 7.000000e-02
  %4491 = select i1 %4401, double 0x3F7057D1782D3848, double %4490
  %4492 = select i1 %4400, double 1.729000e-02, double %4491
  %4493 = fptrunc double %4492 to float
  %4494 = fmul contract float %4493, 0x3FEC7AE140000000
  %4495 = fmul contract float %4494, %4382
  %4496 = fmul contract float %1434, %4495
  %4497 = fadd contract float %4486, %4496
  %4498 = fadd contract float %4476, %4497
  %4499 = fmul contract double %1049, 9.000000e-01
  %4500 = fmul contract double %4365, 4.912400e-01
  %4501 = select i1 %4352, double 0x7FF0000000000000, double %4500
  %4502 = select i1 %4351, double 0.000000e+00, double %4501
  %4503 = fadd contract double %4502, %4350
  %4504 = fadd contract double %4333, 1.000000e+00
  %4505 = select i1 %4320, double 0x7FF0000000000000, double %4504
  %4506 = select i1 %4319, double 1.000000e+00, double %4505
  %4507 = fdiv contract double %4503, %4506
  %4508 = fptrunc double %4507 to float
  %4509 = fadd contract float %1776, %4508
  %4510 = fdiv contract float %1776, %4509
  %4511 = fpext float %4510 to double
  %4512 = fmul contract double %4499, %4511
  %4513 = fmul contract double %4512, %1719
  %4514 = fptrunc double %4513 to float
  %4515 = fadd contract float %4498, %4514
  %4516 = fadd contract float %877, %1036
  %4517 = fmul contract float %4516, 2.000000e+00
  %4518 = fsub contract float %4515, %4517
  %4519 = fpext float %81 to double
  %4520 = fmul contract double %4519, 7.500000e-01
  %4521 = fmul contract double %4520, %2153
  %4522 = fadd contract double %4521, 0xC010333338000000
  %4523 = fmul contract float %2100, 0x3E921E9080000000
  %4524 = fpext float %4523 to double
  %4525 = fmul contract double %4522, %4524
  %4526 = fdiv contract double %4525, %2158
  %4527 = fptrunc double %4526 to float
  %4528 = fmul contract float %21, %4527
  %4529 = fmul contract float %23, %4528
  %4530 = fmul contract float %2081, 0x3FECCCCCC0000000
  %4531 = fmul contract float %2091, 0x3FB9999A00000000
  %4532 = fadd contract float %4530, %4531
  %4533 = fmul contract float %4532, %4529
  %4534 = fpext float %4533 to double
  %4535 = fmul contract double %4534, 4.500000e-01
  %4536 = fptrunc double %4535 to float
  %4537 = fadd contract float %4518, %4536
  %4538 = fmul contract float %1597, 0x3F1CD5F9C0000000
  %4539 = fmul contract float %1149, %4538
  %4540 = fmul contract float %1597, 0x3F4D29DC80000000
  %4541 = fmul contract float %1149, %4540
  %4542 = fadd contract float %4539, %4541
  %4543 = fadd contract float %4542, %4537
  %4544 = fmul contract float %1800, 0x3F826E9780000000
  %4545 = fdiv contract float 0x3FB99999A0000000, %83
  %4546 = fadd contract float %4545, 1.000000e+00
  %4547 = fdiv contract float 0x3F88B24200000000, %4546
  %4548 = fmul contract float %4547, %1800
  %4549 = fdiv contract float 0x3FB99999A0000000, %85
  %4550 = fadd contract float %4549, 1.000000e+00
  %4551 = fdiv contract float 0x3FB8FA1A00000000, %4550
  %4552 = fmul contract float %4551, %1800
  %4553 = fadd contract float %4548, %4552
  %4554 = fadd contract float %4203, %4209
  %4555 = fadd contract float %4544, %4553
  %4556 = fadd contract float %4235, %4239
  %4557 = fadd contract float %4555, %4554
  %4558 = fadd contract float %4556, %4557
  %4559 = fadd contract float %4543, %4558
  %4560 = fsub contract float %4559, %4452
  %4561 = fneg contract float %4560
  %4562 = getelementptr inbounds float, float addrspace(1)* %2, i64 38
  store float %4561, float addrspace(1)* %4562, align 4, !tbaa !6
  %4563 = getelementptr inbounds float, float addrspace(1)* %2, i64 40
  store float 0.000000e+00, float addrspace(1)* %4563, align 4, !tbaa !6
  br label %6558

4564:                                             ; preds = %5
  %4565 = icmp eq i32 %6, 1
  %4566 = icmp eq i32 %7, 0
  %4567 = select i1 %4565, i1 %4566, i1 false
  br i1 %4567, label %4568, label %6562

4568:                                             ; preds = %4564
  %4569 = getelementptr inbounds float, float addrspace(1)* %1, i64 35
  %4570 = load float, float addrspace(1)* %4569, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4571 = fmul contract float %4570, 1.000000e+03
  %4572 = getelementptr inbounds float, float addrspace(1)* %3, i64 1
  %4573 = load float, float addrspace(1)* %4572, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4574 = getelementptr inbounds float, float addrspace(1)* %3, i64 2
  %4575 = load float, float addrspace(1)* %4574, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4576 = getelementptr inbounds float, float addrspace(1)* %3, i64 3
  %4577 = load float, float addrspace(1)* %4576, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4578 = getelementptr inbounds float, float addrspace(1)* %3, i64 4
  %4579 = load float, float addrspace(1)* %4578, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4580 = getelementptr inbounds float, float addrspace(1)* %3, i64 16
  %4581 = load float, float addrspace(1)* %4580, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4582 = getelementptr inbounds float, float addrspace(1)* %3, i64 17
  %4583 = load float, float addrspace(1)* %4582, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4584 = getelementptr inbounds float, float addrspace(1)* %1, i64 46
  %4585 = load float, float addrspace(1)* %4584, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4586 = getelementptr inbounds float, float addrspace(1)* %1, i64 47
  %4587 = load float, float addrspace(1)* %4586, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4588 = getelementptr inbounds float, float addrspace(1)* %1, i64 48
  %4589 = load float, float addrspace(1)* %4588, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4590 = getelementptr inbounds float, float addrspace(1)* %1, i64 49
  %4591 = load float, float addrspace(1)* %4590, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4592 = getelementptr inbounds float, float addrspace(1)* %1, i64 50
  %4593 = load float, float addrspace(1)* %4592, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4594 = getelementptr inbounds float, float addrspace(1)* %1, i64 51
  %4595 = load float, float addrspace(1)* %4594, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4596 = getelementptr inbounds float, float addrspace(1)* %1, i64 52
  %4597 = load float, float addrspace(1)* %4596, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4598 = getelementptr inbounds float, float addrspace(1)* %1, i64 53
  %4599 = load float, float addrspace(1)* %4598, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4600 = getelementptr inbounds float, float addrspace(1)* %1, i64 54
  %4601 = load float, float addrspace(1)* %4600, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4602 = getelementptr inbounds float, float addrspace(1)* %1, i64 55
  %4603 = load float, float addrspace(1)* %4602, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4604 = getelementptr inbounds float, float addrspace(1)* %1, i64 56
  %4605 = load float, float addrspace(1)* %4604, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4606 = getelementptr inbounds float, float addrspace(1)* %1, i64 57
  %4607 = load float, float addrspace(1)* %4606, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4608 = getelementptr inbounds float, float addrspace(1)* %1, i64 58
  %4609 = load float, float addrspace(1)* %4608, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4610 = getelementptr inbounds float, float addrspace(1)* %1, i64 59
  %4611 = load float, float addrspace(1)* %4610, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4612 = getelementptr inbounds float, float addrspace(1)* %1, i64 60
  %4613 = load float, float addrspace(1)* %4612, align 4, !tbaa !6, !amdgpu.noclobber !10
  %4614 = fcmp contract ugt float %4583, 1.000000e+00
  %4615 = fpext float %4581 to double
  %4616 = fdiv contract double %4615, 0x3FEE147AE147AE14
  %4617 = fadd contract double %4616, 1.000000e+00
  br i1 %4614, label %4638, label %4618

4618:                                             ; preds = %4568
  %4619 = fpext float %4583 to double
  %4620 = fdiv contract double %4619, 1.200000e-02
  %4621 = fsub contract double %4617, %4620
  %4622 = fmul contract double %4621, 2.500000e-03
  %4623 = fdiv contract double %4615, 8.100000e+00
  %4624 = fadd contract double %4623, 1.000000e+00
  %4625 = fdiv contract double %4619, 2.200000e-02
  %4626 = fadd contract double %4624, %4625
  %4627 = fmul contract double %4626, %4622
  %4628 = fdiv contract double %4615, 6.400000e-01
  %4629 = fadd contract double %4628, 1.000000e+00
  %4630 = fdiv contract double %4619, 1.400000e-03
  %4631 = fadd contract double %4629, %4630
  %4632 = fmul contract double %4631, 1.280000e-01
  %4633 = fdiv contract double %4615, 1.300000e+01
  %4634 = fadd contract double %4633, 1.000000e+00
  %4635 = fdiv contract double %4619, 1.530000e-01
  %4636 = fsub contract double %4634, %4635
  %4637 = fmul contract double %4636, %4632
  br label %4663

4638:                                             ; preds = %4568
  %4639 = fadd contract double %4617, 0xC054D55555555555
  %4640 = fadd contract float %4583, -1.000000e+00
  %4641 = fpext float %4640 to double
  %4642 = fdiv contract double %4641, 6.000000e-02
  %4643 = fadd contract double %4639, %4642
  %4644 = fmul contract double %4643, 2.500000e-03
  %4645 = fdiv contract double %4615, 8.100000e+00
  %4646 = fadd contract double %4645, 1.000000e+00
  %4647 = fadd contract double %4646, 0x4046BA2E8BA2E8BB
  %4648 = fdiv contract double %4641, 6.800000e-02
  %4649 = fadd contract double %4647, %4648
  %4650 = fmul contract double %4649, %4644
  %4651 = fdiv contract double %4615, 6.400000e-01
  %4652 = fadd contract double %4651, 1.000000e+00
  %4653 = fadd contract double %4652, 0x4086524924924925
  %4654 = fdiv contract double %4641, 5.000000e-03
  %4655 = fadd contract double %4653, %4654
  %4656 = fmul contract double %4655, 1.280000e-01
  %4657 = fdiv contract double %4615, 1.300000e+01
  %4658 = fadd contract double %4657, 1.000000e+00
  %4659 = fadd contract double %4658, 0xC01A24CF7A24CF7A
  %4660 = fdiv contract double %4641, 1.500000e-01
  %4661 = fadd contract double %4659, %4660
  %4662 = fmul contract double %4661, %4656
  br label %4663

4663:                                             ; preds = %4618, %4638
  %4664 = phi double [ %4637, %4618 ], [ %4662, %4638 ]
  %4665 = phi double [ %4627, %4618 ], [ %4650, %4638 ]
  %4666 = fptrunc double %4665 to float
  %4667 = fptrunc double %4664 to float
  %4668 = fdiv contract float 1.000000e+01, %4666
  %4669 = fdiv contract float 5.000000e+02, %4667
  %4670 = tail call float @llvm.fabs.f32(float %4571)
  %4671 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4670)
  %4672 = fcmp olt float %4671, 0x3FE5555560000000
  %4673 = zext i1 %4672 to i32
  %4674 = tail call float @llvm.amdgcn.ldexp.f32(float %4671, i32 %4673)
  %4675 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4670)
  %4676 = sub nsw i32 %4675, %4673
  %4677 = fadd float %4674, -1.000000e+00
  %4678 = fadd float %4674, 1.000000e+00
  %4679 = fadd float %4678, -1.000000e+00
  %4680 = fsub float %4674, %4679
  %4681 = tail call float @llvm.amdgcn.rcp.f32(float %4678)
  %4682 = fmul float %4677, %4681
  %4683 = fmul float %4678, %4682
  %4684 = fneg float %4683
  %4685 = tail call float @llvm.fma.f32(float %4682, float %4678, float %4684)
  %4686 = tail call float @llvm.fma.f32(float %4682, float %4680, float %4685)
  %4687 = fadd float %4683, %4686
  %4688 = fsub float %4687, %4683
  %4689 = fsub float %4686, %4688
  %4690 = fsub float %4677, %4687
  %4691 = fsub float %4677, %4690
  %4692 = fsub float %4691, %4687
  %4693 = fsub float %4692, %4689
  %4694 = fadd float %4690, %4693
  %4695 = fmul float %4681, %4694
  %4696 = fadd float %4682, %4695
  %4697 = fsub float %4696, %4682
  %4698 = fsub float %4695, %4697
  %4699 = fmul float %4696, %4696
  %4700 = fneg float %4699
  %4701 = tail call float @llvm.fma.f32(float %4696, float %4696, float %4700)
  %4702 = fmul float %4698, 2.000000e+00
  %4703 = tail call float @llvm.fma.f32(float %4696, float %4702, float %4701)
  %4704 = fadd float %4699, %4703
  %4705 = fsub float %4704, %4699
  %4706 = fsub float %4703, %4705
  %4707 = tail call float @llvm.fmuladd.f32(float %4704, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4708 = tail call float @llvm.fmuladd.f32(float %4704, float %4707, float 0x3FD999BDE0000000)
  %4709 = sitofp i32 %4676 to float
  %4710 = fmul float %4709, 0x3FE62E4300000000
  %4711 = fneg float %4710
  %4712 = tail call float @llvm.fma.f32(float %4709, float 0x3FE62E4300000000, float %4711)
  %4713 = tail call float @llvm.fma.f32(float %4709, float 0xBE205C6100000000, float %4712)
  %4714 = fadd float %4710, %4713
  %4715 = fsub float %4714, %4710
  %4716 = fsub float %4713, %4715
  %4717 = tail call float @llvm.amdgcn.ldexp.f32(float %4696, i32 1)
  %4718 = fmul float %4696, %4704
  %4719 = fneg float %4718
  %4720 = tail call float @llvm.fma.f32(float %4704, float %4696, float %4719)
  %4721 = tail call float @llvm.fma.f32(float %4704, float %4698, float %4720)
  %4722 = tail call float @llvm.fma.f32(float %4706, float %4696, float %4721)
  %4723 = fadd float %4718, %4722
  %4724 = fsub float %4723, %4718
  %4725 = fsub float %4722, %4724
  %4726 = fmul float %4704, %4708
  %4727 = fneg float %4726
  %4728 = tail call float @llvm.fma.f32(float %4704, float %4708, float %4727)
  %4729 = tail call float @llvm.fma.f32(float %4706, float %4708, float %4728)
  %4730 = fadd float %4726, %4729
  %4731 = fsub float %4730, %4726
  %4732 = fsub float %4729, %4731
  %4733 = fadd float %4730, 0x3FE5555540000000
  %4734 = fadd float %4733, 0xBFE5555540000000
  %4735 = fsub float %4730, %4734
  %4736 = fadd float %4732, 0x3E2E720200000000
  %4737 = fadd float %4736, %4735
  %4738 = fadd float %4733, %4737
  %4739 = fsub float %4738, %4733
  %4740 = fsub float %4737, %4739
  %4741 = fmul float %4723, %4738
  %4742 = fneg float %4741
  %4743 = tail call float @llvm.fma.f32(float %4723, float %4738, float %4742)
  %4744 = tail call float @llvm.fma.f32(float %4723, float %4740, float %4743)
  %4745 = tail call float @llvm.fma.f32(float %4725, float %4738, float %4744)
  %4746 = tail call float @llvm.amdgcn.ldexp.f32(float %4698, i32 1)
  %4747 = fadd float %4741, %4745
  %4748 = fsub float %4747, %4741
  %4749 = fsub float %4745, %4748
  %4750 = fadd float %4717, %4747
  %4751 = fsub float %4750, %4717
  %4752 = fsub float %4747, %4751
  %4753 = fadd float %4746, %4749
  %4754 = fadd float %4753, %4752
  %4755 = fadd float %4750, %4754
  %4756 = fsub float %4755, %4750
  %4757 = fsub float %4754, %4756
  %4758 = fadd float %4714, %4755
  %4759 = fsub float %4758, %4714
  %4760 = fsub float %4758, %4759
  %4761 = fsub float %4714, %4760
  %4762 = fsub float %4755, %4759
  %4763 = fadd float %4762, %4761
  %4764 = fadd float %4716, %4757
  %4765 = fsub float %4764, %4716
  %4766 = fsub float %4764, %4765
  %4767 = fsub float %4716, %4766
  %4768 = fsub float %4757, %4765
  %4769 = fadd float %4768, %4767
  %4770 = fadd float %4764, %4763
  %4771 = fadd float %4758, %4770
  %4772 = fsub float %4771, %4758
  %4773 = fsub float %4770, %4772
  %4774 = fadd float %4769, %4773
  %4775 = fadd float %4771, %4774
  %4776 = fsub float %4775, %4771
  %4777 = fsub float %4774, %4776
  %4778 = fmul float %4775, 2.000000e+00
  %4779 = fneg float %4778
  %4780 = tail call float @llvm.fma.f32(float %4775, float 2.000000e+00, float %4779)
  %4781 = fmul float %4775, 0.000000e+00
  %4782 = tail call float @llvm.fma.f32(float %4777, float 2.000000e+00, float %4781)
  %4783 = fadd float %4780, %4782
  %4784 = fadd float %4778, %4783
  %4785 = fsub float %4784, %4778
  %4786 = fsub float %4783, %4785
  %4787 = tail call float @llvm.fabs.f32(float %4778) #3
  %4788 = fcmp oeq float %4787, 0x7FF0000000000000
  %4789 = select i1 %4788, float %4778, float %4784
  %4790 = tail call float @llvm.fabs.f32(float %4789) #3
  %4791 = fcmp oeq float %4790, 0x7FF0000000000000
  %4792 = select i1 %4791, float 0.000000e+00, float %4786
  %4793 = fcmp oeq float %4789, 0x40562E4300000000
  %4794 = select i1 %4793, float 0x3EE0000000000000, float 0.000000e+00
  %4795 = fsub float %4789, %4794
  %4796 = fadd float %4794, %4792
  %4797 = fmul float %4795, 0x3FF7154760000000
  %4798 = tail call float @llvm.rint.f32(float %4797)
  %4799 = fcmp ogt float %4795, 0x40562E4300000000
  %4800 = fcmp olt float %4795, 0xC059D1DA00000000
  %4801 = fneg float %4797
  %4802 = tail call float @llvm.fma.f32(float %4795, float 0x3FF7154760000000, float %4801)
  %4803 = tail call float @llvm.fma.f32(float %4795, float 0x3E54AE0BE0000000, float %4802)
  %4804 = fsub float %4797, %4798
  %4805 = fadd float %4803, %4804
  %4806 = tail call float @llvm.exp2.f32(float %4805)
  %4807 = fptosi float %4798 to i32
  %4808 = tail call float @llvm.amdgcn.ldexp.f32(float %4806, i32 %4807)
  %4809 = select i1 %4800, float 0.000000e+00, float %4808
  %4810 = select i1 %4799, float 0x7FF0000000000000, float %4809
  %4811 = tail call float @llvm.fma.f32(float %4810, float %4796, float %4810)
  %4812 = tail call float @llvm.fabs.f32(float %4810) #3
  %4813 = fcmp oeq float %4812, 0x7FF0000000000000
  %4814 = select i1 %4813, float %4810, float %4811
  %4815 = tail call float @llvm.fabs.f32(float %4814)
  %4816 = fcmp oeq float %4670, 0x7FF0000000000000
  %4817 = fcmp oeq float %4571, 0.000000e+00
  %4818 = or i1 %4817, %4816
  %4819 = select i1 %4817, float 0.000000e+00, float 0x7FF0000000000000
  %4820 = select i1 %4818, float %4819, float %4815
  %4821 = fcmp uno float %4571, 0.000000e+00
  %4822 = select i1 %4821, float 0x7FF8000000000000, float %4820
  %4823 = fmul contract float %4822, %4668
  %4824 = fmul contract float %4585, %4823
  %4825 = fmul contract float %4587, 1.000000e+01
  %4826 = fsub contract float %4824, %4825
  %4827 = fmul contract float %4822, %4669
  %4828 = fmul contract float %4587, %4827
  %4829 = fmul contract float %4589, 5.000000e+02
  %4830 = fsub contract float %4828, %4829
  %4831 = fsub contract float %4573, %4591
  %4832 = fsub contract float %4831, %4593
  %4833 = fsub contract float %4832, %4595
  %4834 = fmul contract float %4591, %4823
  %4835 = fmul contract float %4593, 0x3FB99999A0000000
  %4836 = fsub contract float %4834, %4835
  %4837 = fmul contract float %4593, %4827
  %4838 = fmul contract float %4595, 5.000000e+02
  %4839 = fsub contract float %4837, %4838
  %4840 = fmul contract float %4585, 0x3F7CAC0820000000
  %4841 = fmul contract float %4840, %4833
  %4842 = fmul contract float %4591, 0x3F56F00680000000
  %4843 = fsub contract float %4841, %4842
  %4844 = fmul contract float %4587, 0x3F7CAC0820000000
  %4845 = fmul contract float %4844, %4833
  %4846 = fmul contract float %4593, 0x3EED5C3140000000
  %4847 = fsub contract float %4845, %4846
  %4848 = fmul contract float %4589, 0x3F7CAC0820000000
  %4849 = fmul contract float %4848, %4833
  %4850 = fmul contract float %4595, 0x3EED5C3140000000
  %4851 = fsub contract float %4849, %4850
  %4852 = fsub contract float %4577, %4607
  %4853 = fsub contract float %4852, %4609
  %4854 = fsub contract float %4853, %4611
  %4855 = fsub contract float %4854, %4613
  %4856 = fmul contract float %4822, 2.000000e+00
  %4857 = fmul contract float %4855, %4856
  %4858 = fsub contract float %4857, %4607
  %4859 = fmul contract float %4609, %4823
  %4860 = fmul contract float %4611, 0x3FAF07C200000000
  %4861 = fsub contract float %4859, %4860
  %4862 = fmul contract float %4611, %4827
  %4863 = fmul contract float %4613, 0x3F7054ECC0000000
  %4864 = fsub contract float %4862, %4863
  %4865 = fmul contract float %4585, 4.600000e+01
  %4866 = fmul contract float %4865, %4607
  %4867 = fmul contract float %4609, 0x4080CFBA60000000
  %4868 = fsub contract float %4866, %4867
  %4869 = fmul contract float %4587, 4.600000e+01
  %4870 = fmul contract float %4869, %4607
  %4871 = fmul contract float %4611, 0x400A154CA0000000
  %4872 = fsub contract float %4870, %4871
  %4873 = fmul contract float %4589, 4.600000e+01
  %4874 = fmul contract float %4873, %4607
  %4875 = fmul contract float %4613, 0x3F554C9860000000
  %4876 = fsub contract float %4874, %4875
  %4877 = fsub contract float 1.000000e+00, %4597
  %4878 = fsub contract float %4877, %4599
  %4879 = fsub contract float %4878, %4601
  %4880 = fsub contract float %4879, %4603
  %4881 = fsub contract float %4880, %4605
  %4882 = fmul contract float %4587, 0x40506AFC40000000
  %4883 = fmul contract float %4882, %4881
  %4884 = fmul contract float %4597, 0x407485BB40000000
  %4885 = fsub contract float %4883, %4884
  %4886 = fmul contract float %4597, %4827
  %4887 = fmul contract float %4599, 0x400ACCCCC0000000
  %4888 = fsub contract float %4886, %4887
  %4889 = fmul contract float %4589, 0x40506AFC40000000
  %4890 = fmul contract float %4889, %4881
  %4891 = fmul contract float %4599, 0x40019999A0000000
  %4892 = fsub contract float %4890, %4891
  %4893 = fadd contract float %4599, %4601
  %4894 = fadd contract float %4893, %4603
  %4895 = fadd contract float %4894, %4605
  %4896 = fpext float %4895 to double
  %4897 = fmul contract double %4896, 5.500000e-02
  %4898 = tail call float @llvm.fabs.f32(float %4895)
  %4899 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4898)
  %4900 = fcmp olt float %4899, 0x3FE5555560000000
  %4901 = zext i1 %4900 to i32
  %4902 = tail call float @llvm.amdgcn.ldexp.f32(float %4899, i32 %4901)
  %4903 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4898)
  %4904 = sub nsw i32 %4903, %4901
  %4905 = fadd float %4902, -1.000000e+00
  %4906 = fadd float %4902, 1.000000e+00
  %4907 = fadd float %4906, -1.000000e+00
  %4908 = fsub float %4902, %4907
  %4909 = tail call float @llvm.amdgcn.rcp.f32(float %4906)
  %4910 = fmul float %4905, %4909
  %4911 = fmul float %4906, %4910
  %4912 = fneg float %4911
  %4913 = tail call float @llvm.fma.f32(float %4910, float %4906, float %4912)
  %4914 = tail call float @llvm.fma.f32(float %4910, float %4908, float %4913)
  %4915 = fadd float %4911, %4914
  %4916 = fsub float %4915, %4911
  %4917 = fsub float %4914, %4916
  %4918 = fsub float %4905, %4915
  %4919 = fsub float %4905, %4918
  %4920 = fsub float %4919, %4915
  %4921 = fsub float %4920, %4917
  %4922 = fadd float %4918, %4921
  %4923 = fmul float %4909, %4922
  %4924 = fadd float %4910, %4923
  %4925 = fsub float %4924, %4910
  %4926 = fsub float %4923, %4925
  %4927 = fmul float %4924, %4924
  %4928 = fneg float %4927
  %4929 = tail call float @llvm.fma.f32(float %4924, float %4924, float %4928)
  %4930 = fmul float %4926, 2.000000e+00
  %4931 = tail call float @llvm.fma.f32(float %4924, float %4930, float %4929)
  %4932 = fadd float %4927, %4931
  %4933 = fsub float %4932, %4927
  %4934 = fsub float %4931, %4933
  %4935 = tail call float @llvm.fmuladd.f32(float %4932, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4936 = tail call float @llvm.fmuladd.f32(float %4932, float %4935, float 0x3FD999BDE0000000)
  %4937 = sitofp i32 %4904 to float
  %4938 = fmul float %4937, 0x3FE62E4300000000
  %4939 = fneg float %4938
  %4940 = tail call float @llvm.fma.f32(float %4937, float 0x3FE62E4300000000, float %4939)
  %4941 = tail call float @llvm.fma.f32(float %4937, float 0xBE205C6100000000, float %4940)
  %4942 = fadd float %4938, %4941
  %4943 = fsub float %4942, %4938
  %4944 = fsub float %4941, %4943
  %4945 = tail call float @llvm.amdgcn.ldexp.f32(float %4924, i32 1)
  %4946 = fmul float %4924, %4932
  %4947 = fneg float %4946
  %4948 = tail call float @llvm.fma.f32(float %4932, float %4924, float %4947)
  %4949 = tail call float @llvm.fma.f32(float %4932, float %4926, float %4948)
  %4950 = tail call float @llvm.fma.f32(float %4934, float %4924, float %4949)
  %4951 = fadd float %4946, %4950
  %4952 = fsub float %4951, %4946
  %4953 = fsub float %4950, %4952
  %4954 = fmul float %4932, %4936
  %4955 = fneg float %4954
  %4956 = tail call float @llvm.fma.f32(float %4932, float %4936, float %4955)
  %4957 = tail call float @llvm.fma.f32(float %4934, float %4936, float %4956)
  %4958 = fadd float %4954, %4957
  %4959 = fsub float %4958, %4954
  %4960 = fsub float %4957, %4959
  %4961 = fadd float %4958, 0x3FE5555540000000
  %4962 = fadd float %4961, 0xBFE5555540000000
  %4963 = fsub float %4958, %4962
  %4964 = fadd float %4960, 0x3E2E720200000000
  %4965 = fadd float %4964, %4963
  %4966 = fadd float %4961, %4965
  %4967 = fsub float %4966, %4961
  %4968 = fsub float %4965, %4967
  %4969 = fmul float %4951, %4966
  %4970 = fneg float %4969
  %4971 = tail call float @llvm.fma.f32(float %4951, float %4966, float %4970)
  %4972 = tail call float @llvm.fma.f32(float %4951, float %4968, float %4971)
  %4973 = tail call float @llvm.fma.f32(float %4953, float %4966, float %4972)
  %4974 = tail call float @llvm.amdgcn.ldexp.f32(float %4926, i32 1)
  %4975 = fadd float %4969, %4973
  %4976 = fsub float %4975, %4969
  %4977 = fsub float %4973, %4976
  %4978 = fadd float %4945, %4975
  %4979 = fsub float %4978, %4945
  %4980 = fsub float %4975, %4979
  %4981 = fadd float %4974, %4977
  %4982 = fadd float %4981, %4980
  %4983 = fadd float %4978, %4982
  %4984 = fsub float %4983, %4978
  %4985 = fsub float %4982, %4984
  %4986 = fadd float %4942, %4983
  %4987 = fsub float %4986, %4942
  %4988 = fsub float %4986, %4987
  %4989 = fsub float %4942, %4988
  %4990 = fsub float %4983, %4987
  %4991 = fadd float %4990, %4989
  %4992 = fadd float %4944, %4985
  %4993 = fsub float %4992, %4944
  %4994 = fsub float %4992, %4993
  %4995 = fsub float %4944, %4994
  %4996 = fsub float %4985, %4993
  %4997 = fadd float %4996, %4995
  %4998 = fadd float %4992, %4991
  %4999 = fadd float %4986, %4998
  %5000 = fsub float %4999, %4986
  %5001 = fsub float %4998, %5000
  %5002 = fadd float %4997, %5001
  %5003 = fadd float %4999, %5002
  %5004 = fsub float %5003, %4999
  %5005 = fsub float %5002, %5004
  %5006 = fmul float %5003, 2.000000e+00
  %5007 = fneg float %5006
  %5008 = tail call float @llvm.fma.f32(float %5003, float 2.000000e+00, float %5007)
  %5009 = fmul float %5003, 0.000000e+00
  %5010 = tail call float @llvm.fma.f32(float %5005, float 2.000000e+00, float %5009)
  %5011 = fadd float %5008, %5010
  %5012 = fadd float %5006, %5011
  %5013 = fsub float %5012, %5006
  %5014 = fsub float %5011, %5013
  %5015 = tail call float @llvm.fabs.f32(float %5006) #3
  %5016 = fcmp oeq float %5015, 0x7FF0000000000000
  %5017 = select i1 %5016, float %5006, float %5012
  %5018 = tail call float @llvm.fabs.f32(float %5017) #3
  %5019 = fcmp oeq float %5018, 0x7FF0000000000000
  %5020 = select i1 %5019, float 0.000000e+00, float %5014
  %5021 = fcmp oeq float %5017, 0x40562E4300000000
  %5022 = select i1 %5021, float 0x3EE0000000000000, float 0.000000e+00
  %5023 = fsub float %5017, %5022
  %5024 = fadd float %5022, %5020
  %5025 = fmul float %5023, 0x3FF7154760000000
  %5026 = tail call float @llvm.rint.f32(float %5025)
  %5027 = fcmp ogt float %5023, 0x40562E4300000000
  %5028 = fcmp olt float %5023, 0xC059D1DA00000000
  %5029 = fneg float %5025
  %5030 = tail call float @llvm.fma.f32(float %5023, float 0x3FF7154760000000, float %5029)
  %5031 = tail call float @llvm.fma.f32(float %5023, float 0x3E54AE0BE0000000, float %5030)
  %5032 = fsub float %5025, %5026
  %5033 = fadd float %5031, %5032
  %5034 = tail call float @llvm.exp2.f32(float %5033)
  %5035 = fptosi float %5026 to i32
  %5036 = tail call float @llvm.amdgcn.ldexp.f32(float %5034, i32 %5035)
  %5037 = select i1 %5028, float 0.000000e+00, float %5036
  %5038 = select i1 %5027, float 0x7FF0000000000000, float %5037
  %5039 = tail call float @llvm.fma.f32(float %5038, float %5024, float %5038)
  %5040 = tail call float @llvm.fabs.f32(float %5038) #3
  %5041 = fcmp oeq float %5040, 0x7FF0000000000000
  %5042 = select i1 %5041, float %5038, float %5039
  %5043 = fcmp uge float %4895, 0.000000e+00
  %5044 = tail call float @llvm.fabs.f32(float %5042)
  %5045 = fcmp oeq float %4898, 0x7FF0000000000000
  %5046 = fcmp oeq float %4895, 0.000000e+00
  %5047 = or i1 %5046, %5045
  %5048 = select i1 %5046, float 0.000000e+00, float 0x7FF0000000000000
  %5049 = select i1 %5047, float %5048, float %5044
  %5050 = fcmp uno float %4895, 0.000000e+00
  %5051 = select i1 %5050, float 0x7FF8000000000000, float %5049
  %5052 = fpext float %5051 to double
  %5053 = fmul contract double %5052, 7.400000e-03
  %5054 = fadd contract double %4897, %5053
  %5055 = fmul float %5003, 3.000000e+00
  %5056 = fneg float %5055
  %5057 = tail call float @llvm.fma.f32(float %5003, float 3.000000e+00, float %5056)
  %5058 = tail call float @llvm.fma.f32(float %5005, float 3.000000e+00, float %5009)
  %5059 = fadd float %5057, %5058
  %5060 = fadd float %5055, %5059
  %5061 = fsub float %5060, %5055
  %5062 = fsub float %5059, %5061
  %5063 = tail call float @llvm.fabs.f32(float %5055) #3
  %5064 = fcmp oeq float %5063, 0x7FF0000000000000
  %5065 = select i1 %5064, float %5055, float %5060
  %5066 = tail call float @llvm.fabs.f32(float %5065) #3
  %5067 = fcmp oeq float %5066, 0x7FF0000000000000
  %5068 = select i1 %5067, float 0.000000e+00, float %5062
  %5069 = fcmp oeq float %5065, 0x40562E4300000000
  %5070 = select i1 %5069, float 0x3EE0000000000000, float 0.000000e+00
  %5071 = fsub float %5065, %5070
  %5072 = fadd float %5070, %5068
  %5073 = fmul float %5071, 0x3FF7154760000000
  %5074 = tail call float @llvm.rint.f32(float %5073)
  %5075 = fcmp ogt float %5071, 0x40562E4300000000
  %5076 = fcmp olt float %5071, 0xC059D1DA00000000
  %5077 = fneg float %5073
  %5078 = tail call float @llvm.fma.f32(float %5071, float 0x3FF7154760000000, float %5077)
  %5079 = tail call float @llvm.fma.f32(float %5071, float 0x3E54AE0BE0000000, float %5078)
  %5080 = fsub float %5073, %5074
  %5081 = fadd float %5079, %5080
  %5082 = tail call float @llvm.exp2.f32(float %5081)
  %5083 = fptosi float %5074 to i32
  %5084 = tail call float @llvm.amdgcn.ldexp.f32(float %5082, i32 %5083)
  %5085 = select i1 %5076, float 0.000000e+00, float %5084
  %5086 = select i1 %5075, float 0x7FF0000000000000, float %5085
  %5087 = tail call float @llvm.fma.f32(float %5086, float %5072, float %5086)
  %5088 = tail call float @llvm.fabs.f32(float %5086) #3
  %5089 = fcmp oeq float %5088, 0x7FF0000000000000
  %5090 = select i1 %5089, float %5086, float %5087
  %5091 = select i1 %5043, float 0.000000e+00, float -0.000000e+00
  %5092 = tail call float @llvm.copysign.f32(float %5090, float %5091)
  %5093 = tail call float @llvm.copysign.f32(float %5048, float %4895)
  %5094 = select i1 %5047, float %5093, float %5092
  %5095 = select i1 %5050, float 0x7FF8000000000000, float %5094
  %5096 = fpext float %5095 to double
  %5097 = fmul contract double %5096, 1.500000e-02
  %5098 = fadd contract double %5097, %5054
  %5099 = fptrunc double %5098 to float
  %5100 = fmul contract float %4599, %5099
  %5101 = fmul contract float %4579, 0x3FFB851EC0000000
  %5102 = fmul contract float %5101, %4601
  %5103 = fmul contract float %4575, %4601
  %5104 = fadd contract float %5103, 1.150000e+01
  %5105 = fdiv contract float %5102, %5104
  %5106 = fsub contract float %5100, %5105
  %5107 = fmul contract float %4601, 0x3F6B717580000000
  %5108 = fmul contract float %4603, %4827
  %5109 = fsub contract float %5107, %5108
  %5110 = fmul contract float %4601, 0x3F6205BC00000000
  %5111 = fmul contract float %4889, %4605
  %5112 = fsub contract float %5110, %5111
  %5113 = fmul contract float %4603, 0x407485BB40000000
  %5114 = fmul contract float %4882, %4605
  %5115 = fsub contract float %5113, %5114
  %5116 = fmul contract float %5101, %4603
  %5117 = fmul contract float %4575, %4603
  %5118 = fadd contract float %5117, 1.150000e+01
  %5119 = fdiv contract float %5116, %5118
  %5120 = fmul contract float %5101, %4605
  %5121 = fmul contract float %4575, %4605
  %5122 = fadd contract float %5121, 1.150000e+01
  %5123 = fdiv contract float %5120, %5122
  %5124 = fneg contract float %4826
  %5125 = fsub contract float %5124, %4843
  %5126 = fsub contract float %5125, %4868
  %5127 = fpext float %5126 to double
  %5128 = fmul contract double %5127, 1.000000e-03
  %5129 = fptrunc double %5128 to float
  %5130 = fsub contract float %4826, %4830
  %5131 = fsub contract float %5130, %4847
  %5132 = fsub contract float %5131, %4872
  %5133 = fsub contract float %5115, %4885
  %5134 = fmul contract float %4575, %5133
  %5135 = fadd contract float %5134, %5132
  %5136 = fpext float %5135 to double
  %5137 = fmul contract double %5136, 1.000000e-03
  %5138 = fptrunc double %5137 to float
  %5139 = fsub contract float %4830, %4851
  %5140 = fsub contract float %5139, %4876
  %5141 = fsub contract float %5112, %4892
  %5142 = fmul contract float %4575, %5141
  %5143 = fadd contract float %5142, %5140
  %5144 = fpext float %5143 to double
  %5145 = fmul contract double %5144, 1.000000e-03
  %5146 = fptrunc double %5145 to float
  %5147 = fsub contract float %4843, %4836
  %5148 = fpext float %5147 to double
  %5149 = fmul contract double %5148, 1.000000e-03
  %5150 = fptrunc double %5149 to float
  %5151 = fadd contract float %4847, %4836
  %5152 = fsub contract float %5151, %4839
  %5153 = fpext float %5152 to double
  %5154 = fmul contract double %5153, 1.000000e-03
  %5155 = fptrunc double %5154 to float
  %5156 = fadd contract float %4851, %4839
  %5157 = fpext float %5156 to double
  %5158 = fmul contract double %5157, 1.000000e-03
  %5159 = fptrunc double %5158 to float
  %5160 = fsub contract float %4885, %4888
  %5161 = fadd contract float %5119, %5160
  %5162 = fpext float %5161 to double
  %5163 = fmul contract double %5162, 1.000000e-03
  %5164 = fptrunc double %5163 to float
  %5165 = fadd contract float %4892, %4888
  %5166 = fsub contract float %5165, %5106
  %5167 = fpext float %5166 to double
  %5168 = fmul contract double %5167, 1.000000e-03
  %5169 = fptrunc double %5168 to float
  %5170 = fsub contract float %5106, %5112
  %5171 = fsub contract float %5170, %5109
  %5172 = fpext float %5171 to double
  %5173 = fmul contract double %5172, 1.000000e-03
  %5174 = fptrunc double %5173 to float
  %5175 = fsub contract float %5109, %5115
  %5176 = fsub contract float %5175, %5119
  %5177 = fpext float %5176 to double
  %5178 = fmul contract double %5177, 1.000000e-03
  %5179 = fptrunc double %5178 to float
  %5180 = fadd contract float %5112, %5115
  %5181 = fsub contract float %5180, %5123
  %5182 = fpext float %5181 to double
  %5183 = fmul contract double %5182, 1.000000e-03
  %5184 = fptrunc double %5183 to float
  %5185 = fsub contract float %4858, %4868
  %5186 = fsub contract float %5185, %4872
  %5187 = fsub contract float %5186, %4876
  %5188 = fpext float %5187 to double
  %5189 = fmul contract double %5188, 1.000000e-03
  %5190 = fptrunc double %5189 to float
  %5191 = fsub contract float %4868, %4861
  %5192 = fpext float %5191 to double
  %5193 = fmul contract double %5192, 1.000000e-03
  %5194 = fptrunc double %5193 to float
  %5195 = fadd contract float %4872, %4861
  %5196 = fsub contract float %5195, %4864
  %5197 = fpext float %5196 to double
  %5198 = fmul contract double %5197, 1.000000e-03
  %5199 = fptrunc double %5198 to float
  %5200 = fadd contract float %4876, %4864
  %5201 = fpext float %5200 to double
  %5202 = fmul contract double %5201, 1.000000e-03
  %5203 = fptrunc double %5202 to float
  %5204 = getelementptr inbounds float, float addrspace(1)* %2, i64 46
  store float %5129, float addrspace(1)* %5204, align 4, !tbaa !6
  %5205 = getelementptr inbounds float, float addrspace(1)* %2, i64 47
  store float %5138, float addrspace(1)* %5205, align 4, !tbaa !6
  %5206 = getelementptr inbounds float, float addrspace(1)* %2, i64 48
  store float %5146, float addrspace(1)* %5206, align 4, !tbaa !6
  %5207 = getelementptr inbounds float, float addrspace(1)* %2, i64 49
  store float %5150, float addrspace(1)* %5207, align 4, !tbaa !6
  %5208 = getelementptr inbounds float, float addrspace(1)* %2, i64 50
  store float %5155, float addrspace(1)* %5208, align 4, !tbaa !6
  %5209 = getelementptr inbounds float, float addrspace(1)* %2, i64 51
  store float %5159, float addrspace(1)* %5209, align 4, !tbaa !6
  %5210 = getelementptr inbounds float, float addrspace(1)* %2, i64 52
  store float %5164, float addrspace(1)* %5210, align 4, !tbaa !6
  %5211 = getelementptr inbounds float, float addrspace(1)* %2, i64 53
  store float %5169, float addrspace(1)* %5211, align 4, !tbaa !6
  %5212 = getelementptr inbounds float, float addrspace(1)* %2, i64 54
  store float %5174, float addrspace(1)* %5212, align 4, !tbaa !6
  %5213 = getelementptr inbounds float, float addrspace(1)* %2, i64 55
  store float %5179, float addrspace(1)* %5213, align 4, !tbaa !6
  %5214 = getelementptr inbounds float, float addrspace(1)* %2, i64 56
  store float %5184, float addrspace(1)* %5214, align 4, !tbaa !6
  %5215 = getelementptr inbounds float, float addrspace(1)* %2, i64 57
  store float %5190, float addrspace(1)* %5215, align 4, !tbaa !6
  %5216 = getelementptr inbounds float, float addrspace(1)* %2, i64 58
  store float %5194, float addrspace(1)* %5216, align 4, !tbaa !6
  %5217 = getelementptr inbounds float, float addrspace(1)* %2, i64 59
  store float %5199, float addrspace(1)* %5217, align 4, !tbaa !6
  %5218 = getelementptr inbounds float, float addrspace(1)* %2, i64 60
  store float %5203, float addrspace(1)* %5218, align 4, !tbaa !6
  %5219 = fmul contract float %4575, 2.000000e+00
  %5220 = fsub contract float %5109, %4888
  %5221 = fmul contract float %5219, %5220
  %5222 = fadd contract float %4830, %4826
  %5223 = fadd contract float %4836, %5222
  %5224 = fadd contract float %4839, %5223
  %5225 = fadd contract float %4858, %5224
  %5226 = fadd contract float %4861, %5225
  %5227 = fadd contract float %4864, %5226
  %5228 = fmul contract float %5227, 2.000000e+00
  %5229 = fsub contract float %5221, %5228
  %5230 = fpext float %5229 to double
  %5231 = fmul contract double %5230, 1.000000e-03
  %5232 = fptrunc double %5231 to float
  store float %5232, float addrspace(1)* %2, align 4, !tbaa !6
  %5233 = getelementptr inbounds float, float addrspace(1)* %1, i64 36
  %5234 = load float, float addrspace(1)* %5233, align 4, !tbaa !6
  %5235 = fmul contract float %5234, 1.000000e+03
  %5236 = getelementptr inbounds float, float addrspace(1)* %3, i64 6
  %5237 = load float, float addrspace(1)* %5236, align 4, !tbaa !6
  %5238 = getelementptr inbounds float, float addrspace(1)* %3, i64 7
  %5239 = load float, float addrspace(1)* %5238, align 4, !tbaa !6
  %5240 = getelementptr inbounds float, float addrspace(1)* %3, i64 8
  %5241 = load float, float addrspace(1)* %5240, align 4, !tbaa !6
  %5242 = getelementptr inbounds float, float addrspace(1)* %3, i64 9
  %5243 = load float, float addrspace(1)* %5242, align 4, !tbaa !6
  %5244 = load float, float addrspace(1)* %4580, align 4, !tbaa !6
  %5245 = load float, float addrspace(1)* %4582, align 4, !tbaa !6
  %5246 = getelementptr inbounds float, float addrspace(1)* %1, i64 61
  %5247 = load float, float addrspace(1)* %5246, align 4, !tbaa !6
  %5248 = getelementptr inbounds float, float addrspace(1)* %1, i64 62
  %5249 = load float, float addrspace(1)* %5248, align 4, !tbaa !6
  %5250 = getelementptr inbounds float, float addrspace(1)* %1, i64 63
  %5251 = load float, float addrspace(1)* %5250, align 4, !tbaa !6
  %5252 = getelementptr inbounds float, float addrspace(1)* %1, i64 64
  %5253 = load float, float addrspace(1)* %5252, align 4, !tbaa !6
  %5254 = getelementptr inbounds float, float addrspace(1)* %1, i64 65
  %5255 = load float, float addrspace(1)* %5254, align 4, !tbaa !6
  %5256 = getelementptr inbounds float, float addrspace(1)* %1, i64 66
  %5257 = load float, float addrspace(1)* %5256, align 4, !tbaa !6
  %5258 = getelementptr inbounds float, float addrspace(1)* %1, i64 67
  %5259 = load float, float addrspace(1)* %5258, align 4, !tbaa !6
  %5260 = getelementptr inbounds float, float addrspace(1)* %1, i64 68
  %5261 = load float, float addrspace(1)* %5260, align 4, !tbaa !6
  %5262 = getelementptr inbounds float, float addrspace(1)* %1, i64 69
  %5263 = load float, float addrspace(1)* %5262, align 4, !tbaa !6
  %5264 = getelementptr inbounds float, float addrspace(1)* %1, i64 70
  %5265 = load float, float addrspace(1)* %5264, align 4, !tbaa !6
  %5266 = getelementptr inbounds float, float addrspace(1)* %1, i64 71
  %5267 = load float, float addrspace(1)* %5266, align 4, !tbaa !6
  %5268 = getelementptr inbounds float, float addrspace(1)* %1, i64 72
  %5269 = load float, float addrspace(1)* %5268, align 4, !tbaa !6
  %5270 = getelementptr inbounds float, float addrspace(1)* %1, i64 73
  %5271 = load float, float addrspace(1)* %5270, align 4, !tbaa !6
  %5272 = getelementptr inbounds float, float addrspace(1)* %1, i64 74
  %5273 = load float, float addrspace(1)* %5272, align 4, !tbaa !6
  %5274 = getelementptr inbounds float, float addrspace(1)* %1, i64 75
  %5275 = load float, float addrspace(1)* %5274, align 4, !tbaa !6
  %5276 = fcmp contract ugt float %5245, 1.000000e+00
  %5277 = fpext float %5244 to double
  %5278 = fdiv contract double %5277, 0x3FEE147AE147AE14
  %5279 = fadd contract double %5278, 1.000000e+00
  br i1 %5276, label %5300, label %5280

5280:                                             ; preds = %4663
  %5281 = fpext float %5245 to double
  %5282 = fdiv contract double %5281, 1.200000e-02
  %5283 = fsub contract double %5279, %5282
  %5284 = fmul contract double %5283, 2.500000e-03
  %5285 = fdiv contract double %5277, 8.100000e+00
  %5286 = fadd contract double %5285, 1.000000e+00
  %5287 = fdiv contract double %5281, 2.200000e-02
  %5288 = fadd contract double %5286, %5287
  %5289 = fmul contract double %5288, %5284
  %5290 = fdiv contract double %5277, 6.400000e-01
  %5291 = fadd contract double %5290, 1.000000e+00
  %5292 = fdiv contract double %5281, 1.400000e-03
  %5293 = fadd contract double %5291, %5292
  %5294 = fmul contract double %5293, 1.280000e-01
  %5295 = fdiv contract double %5277, 1.300000e+01
  %5296 = fadd contract double %5295, 1.000000e+00
  %5297 = fdiv contract double %5281, 1.530000e-01
  %5298 = fsub contract double %5296, %5297
  %5299 = fmul contract double %5298, %5294
  br label %5325

5300:                                             ; preds = %4663
  %5301 = fadd contract double %5279, 0xC054D55555555555
  %5302 = fadd contract float %5245, -1.000000e+00
  %5303 = fpext float %5302 to double
  %5304 = fdiv contract double %5303, 6.000000e-02
  %5305 = fadd contract double %5301, %5304
  %5306 = fmul contract double %5305, 2.500000e-03
  %5307 = fdiv contract double %5277, 8.100000e+00
  %5308 = fadd contract double %5307, 1.000000e+00
  %5309 = fadd contract double %5308, 0x4046BA2E8BA2E8BB
  %5310 = fdiv contract double %5303, 6.800000e-02
  %5311 = fadd contract double %5309, %5310
  %5312 = fmul contract double %5311, %5306
  %5313 = fdiv contract double %5277, 6.400000e-01
  %5314 = fadd contract double %5313, 1.000000e+00
  %5315 = fadd contract double %5314, 0x4086524924924925
  %5316 = fdiv contract double %5303, 5.000000e-03
  %5317 = fadd contract double %5315, %5316
  %5318 = fmul contract double %5317, 1.280000e-01
  %5319 = fdiv contract double %5277, 1.300000e+01
  %5320 = fadd contract double %5319, 1.000000e+00
  %5321 = fadd contract double %5320, 0xC01A24CF7A24CF7A
  %5322 = fdiv contract double %5303, 1.500000e-01
  %5323 = fadd contract double %5321, %5322
  %5324 = fmul contract double %5323, %5318
  br label %5325

5325:                                             ; preds = %5280, %5300
  %5326 = phi double [ %5299, %5280 ], [ %5324, %5300 ]
  %5327 = phi double [ %5289, %5280 ], [ %5312, %5300 ]
  %5328 = fptrunc double %5327 to float
  %5329 = fptrunc double %5326 to float
  %5330 = fdiv contract float 1.000000e+01, %5328
  %5331 = fdiv contract float 5.000000e+02, %5329
  %5332 = tail call float @llvm.fabs.f32(float %5235)
  %5333 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5332)
  %5334 = fcmp olt float %5333, 0x3FE5555560000000
  %5335 = zext i1 %5334 to i32
  %5336 = tail call float @llvm.amdgcn.ldexp.f32(float %5333, i32 %5335)
  %5337 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5332)
  %5338 = sub nsw i32 %5337, %5335
  %5339 = fadd float %5336, -1.000000e+00
  %5340 = fadd float %5336, 1.000000e+00
  %5341 = fadd float %5340, -1.000000e+00
  %5342 = fsub float %5336, %5341
  %5343 = tail call float @llvm.amdgcn.rcp.f32(float %5340)
  %5344 = fmul float %5339, %5343
  %5345 = fmul float %5340, %5344
  %5346 = fneg float %5345
  %5347 = tail call float @llvm.fma.f32(float %5344, float %5340, float %5346)
  %5348 = tail call float @llvm.fma.f32(float %5344, float %5342, float %5347)
  %5349 = fadd float %5345, %5348
  %5350 = fsub float %5349, %5345
  %5351 = fsub float %5348, %5350
  %5352 = fsub float %5339, %5349
  %5353 = fsub float %5339, %5352
  %5354 = fsub float %5353, %5349
  %5355 = fsub float %5354, %5351
  %5356 = fadd float %5352, %5355
  %5357 = fmul float %5343, %5356
  %5358 = fadd float %5344, %5357
  %5359 = fsub float %5358, %5344
  %5360 = fsub float %5357, %5359
  %5361 = fmul float %5358, %5358
  %5362 = fneg float %5361
  %5363 = tail call float @llvm.fma.f32(float %5358, float %5358, float %5362)
  %5364 = fmul float %5360, 2.000000e+00
  %5365 = tail call float @llvm.fma.f32(float %5358, float %5364, float %5363)
  %5366 = fadd float %5361, %5365
  %5367 = fsub float %5366, %5361
  %5368 = fsub float %5365, %5367
  %5369 = tail call float @llvm.fmuladd.f32(float %5366, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5370 = tail call float @llvm.fmuladd.f32(float %5366, float %5369, float 0x3FD999BDE0000000)
  %5371 = sitofp i32 %5338 to float
  %5372 = fmul float %5371, 0x3FE62E4300000000
  %5373 = fneg float %5372
  %5374 = tail call float @llvm.fma.f32(float %5371, float 0x3FE62E4300000000, float %5373)
  %5375 = tail call float @llvm.fma.f32(float %5371, float 0xBE205C6100000000, float %5374)
  %5376 = fadd float %5372, %5375
  %5377 = fsub float %5376, %5372
  %5378 = fsub float %5375, %5377
  %5379 = tail call float @llvm.amdgcn.ldexp.f32(float %5358, i32 1)
  %5380 = fmul float %5358, %5366
  %5381 = fneg float %5380
  %5382 = tail call float @llvm.fma.f32(float %5366, float %5358, float %5381)
  %5383 = tail call float @llvm.fma.f32(float %5366, float %5360, float %5382)
  %5384 = tail call float @llvm.fma.f32(float %5368, float %5358, float %5383)
  %5385 = fadd float %5380, %5384
  %5386 = fsub float %5385, %5380
  %5387 = fsub float %5384, %5386
  %5388 = fmul float %5366, %5370
  %5389 = fneg float %5388
  %5390 = tail call float @llvm.fma.f32(float %5366, float %5370, float %5389)
  %5391 = tail call float @llvm.fma.f32(float %5368, float %5370, float %5390)
  %5392 = fadd float %5388, %5391
  %5393 = fsub float %5392, %5388
  %5394 = fsub float %5391, %5393
  %5395 = fadd float %5392, 0x3FE5555540000000
  %5396 = fadd float %5395, 0xBFE5555540000000
  %5397 = fsub float %5392, %5396
  %5398 = fadd float %5394, 0x3E2E720200000000
  %5399 = fadd float %5398, %5397
  %5400 = fadd float %5395, %5399
  %5401 = fsub float %5400, %5395
  %5402 = fsub float %5399, %5401
  %5403 = fmul float %5385, %5400
  %5404 = fneg float %5403
  %5405 = tail call float @llvm.fma.f32(float %5385, float %5400, float %5404)
  %5406 = tail call float @llvm.fma.f32(float %5385, float %5402, float %5405)
  %5407 = tail call float @llvm.fma.f32(float %5387, float %5400, float %5406)
  %5408 = tail call float @llvm.amdgcn.ldexp.f32(float %5360, i32 1)
  %5409 = fadd float %5403, %5407
  %5410 = fsub float %5409, %5403
  %5411 = fsub float %5407, %5410
  %5412 = fadd float %5379, %5409
  %5413 = fsub float %5412, %5379
  %5414 = fsub float %5409, %5413
  %5415 = fadd float %5408, %5411
  %5416 = fadd float %5415, %5414
  %5417 = fadd float %5412, %5416
  %5418 = fsub float %5417, %5412
  %5419 = fsub float %5416, %5418
  %5420 = fadd float %5376, %5417
  %5421 = fsub float %5420, %5376
  %5422 = fsub float %5420, %5421
  %5423 = fsub float %5376, %5422
  %5424 = fsub float %5417, %5421
  %5425 = fadd float %5424, %5423
  %5426 = fadd float %5378, %5419
  %5427 = fsub float %5426, %5378
  %5428 = fsub float %5426, %5427
  %5429 = fsub float %5378, %5428
  %5430 = fsub float %5419, %5427
  %5431 = fadd float %5430, %5429
  %5432 = fadd float %5426, %5425
  %5433 = fadd float %5420, %5432
  %5434 = fsub float %5433, %5420
  %5435 = fsub float %5432, %5434
  %5436 = fadd float %5431, %5435
  %5437 = fadd float %5433, %5436
  %5438 = fsub float %5437, %5433
  %5439 = fsub float %5436, %5438
  %5440 = fmul float %5437, 2.000000e+00
  %5441 = fneg float %5440
  %5442 = tail call float @llvm.fma.f32(float %5437, float 2.000000e+00, float %5441)
  %5443 = fmul float %5437, 0.000000e+00
  %5444 = tail call float @llvm.fma.f32(float %5439, float 2.000000e+00, float %5443)
  %5445 = fadd float %5442, %5444
  %5446 = fadd float %5440, %5445
  %5447 = fsub float %5446, %5440
  %5448 = fsub float %5445, %5447
  %5449 = tail call float @llvm.fabs.f32(float %5440) #3
  %5450 = fcmp oeq float %5449, 0x7FF0000000000000
  %5451 = select i1 %5450, float %5440, float %5446
  %5452 = tail call float @llvm.fabs.f32(float %5451) #3
  %5453 = fcmp oeq float %5452, 0x7FF0000000000000
  %5454 = select i1 %5453, float 0.000000e+00, float %5448
  %5455 = fcmp oeq float %5451, 0x40562E4300000000
  %5456 = select i1 %5455, float 0x3EE0000000000000, float 0.000000e+00
  %5457 = fsub float %5451, %5456
  %5458 = fadd float %5456, %5454
  %5459 = fmul float %5457, 0x3FF7154760000000
  %5460 = tail call float @llvm.rint.f32(float %5459)
  %5461 = fcmp ogt float %5457, 0x40562E4300000000
  %5462 = fcmp olt float %5457, 0xC059D1DA00000000
  %5463 = fneg float %5459
  %5464 = tail call float @llvm.fma.f32(float %5457, float 0x3FF7154760000000, float %5463)
  %5465 = tail call float @llvm.fma.f32(float %5457, float 0x3E54AE0BE0000000, float %5464)
  %5466 = fsub float %5459, %5460
  %5467 = fadd float %5465, %5466
  %5468 = tail call float @llvm.exp2.f32(float %5467)
  %5469 = fptosi float %5460 to i32
  %5470 = tail call float @llvm.amdgcn.ldexp.f32(float %5468, i32 %5469)
  %5471 = select i1 %5462, float 0.000000e+00, float %5470
  %5472 = select i1 %5461, float 0x7FF0000000000000, float %5471
  %5473 = tail call float @llvm.fma.f32(float %5472, float %5458, float %5472)
  %5474 = tail call float @llvm.fabs.f32(float %5472) #3
  %5475 = fcmp oeq float %5474, 0x7FF0000000000000
  %5476 = select i1 %5475, float %5472, float %5473
  %5477 = tail call float @llvm.fabs.f32(float %5476)
  %5478 = fcmp oeq float %5332, 0x7FF0000000000000
  %5479 = fcmp oeq float %5235, 0.000000e+00
  %5480 = or i1 %5479, %5478
  %5481 = select i1 %5479, float 0.000000e+00, float 0x7FF0000000000000
  %5482 = select i1 %5480, float %5481, float %5477
  %5483 = fcmp uno float %5235, 0.000000e+00
  %5484 = select i1 %5483, float 0x7FF8000000000000, float %5482
  %5485 = fmul contract float %5484, %5330
  %5486 = fmul contract float %5247, %5485
  %5487 = fmul contract float %5249, 1.000000e+01
  %5488 = fsub contract float %5486, %5487
  %5489 = fmul contract float %5484, %5331
  %5490 = fmul contract float %5249, %5489
  %5491 = fmul contract float %5251, 5.000000e+02
  %5492 = fsub contract float %5490, %5491
  %5493 = fsub contract float %5237, %5253
  %5494 = fsub contract float %5493, %5255
  %5495 = fsub contract float %5494, %5257
  %5496 = fmul contract float %5253, %5485
  %5497 = fmul contract float %5255, 0x3FB99999A0000000
  %5498 = fsub contract float %5496, %5497
  %5499 = fmul contract float %5255, %5489
  %5500 = fmul contract float %5257, 5.000000e+02
  %5501 = fsub contract float %5499, %5500
  %5502 = fmul contract float %5247, 0x3F7CAC0820000000
  %5503 = fmul contract float %5502, %5495
  %5504 = fmul contract float %5253, 0x3F56F00680000000
  %5505 = fsub contract float %5503, %5504
  %5506 = fmul contract float %5249, 0x3F7CAC0820000000
  %5507 = fmul contract float %5506, %5495
  %5508 = fmul contract float %5255, 0x3EED5C3140000000
  %5509 = fsub contract float %5507, %5508
  %5510 = fmul contract float %5251, 0x3F7CAC0820000000
  %5511 = fmul contract float %5510, %5495
  %5512 = fmul contract float %5257, 0x3EED5C3140000000
  %5513 = fsub contract float %5511, %5512
  %5514 = fsub contract float %5241, %5269
  %5515 = fsub contract float %5514, %5271
  %5516 = fsub contract float %5515, %5273
  %5517 = fsub contract float %5516, %5275
  %5518 = fmul contract float %5484, 2.000000e+00
  %5519 = fmul contract float %5517, %5518
  %5520 = fsub contract float %5519, %5269
  %5521 = fmul contract float %5271, %5485
  %5522 = fmul contract float %5273, 0x3FAF07C200000000
  %5523 = fsub contract float %5521, %5522
  %5524 = fmul contract float %5273, %5489
  %5525 = fmul contract float %5275, 0x3F7054ECC0000000
  %5526 = fsub contract float %5524, %5525
  %5527 = fmul contract float %5247, 4.600000e+01
  %5528 = fmul contract float %5527, %5269
  %5529 = fmul contract float %5271, 0x4080CFBA60000000
  %5530 = fsub contract float %5528, %5529
  %5531 = fmul contract float %5249, 4.600000e+01
  %5532 = fmul contract float %5531, %5269
  %5533 = fmul contract float %5273, 0x400A154CA0000000
  %5534 = fsub contract float %5532, %5533
  %5535 = fmul contract float %5251, 4.600000e+01
  %5536 = fmul contract float %5535, %5269
  %5537 = fmul contract float %5275, 0x3F554C9860000000
  %5538 = fsub contract float %5536, %5537
  %5539 = fsub contract float 1.000000e+00, %5259
  %5540 = fsub contract float %5539, %5261
  %5541 = fsub contract float %5540, %5263
  %5542 = fsub contract float %5541, %5265
  %5543 = fsub contract float %5542, %5267
  %5544 = fmul contract float %5249, 0x40506AFC40000000
  %5545 = fmul contract float %5544, %5543
  %5546 = fmul contract float %5259, 0x407485BB40000000
  %5547 = fsub contract float %5545, %5546
  %5548 = fmul contract float %5259, %5489
  %5549 = fmul contract float %5261, 0x400ACCCCC0000000
  %5550 = fsub contract float %5548, %5549
  %5551 = fmul contract float %5251, 0x40506AFC40000000
  %5552 = fmul contract float %5551, %5543
  %5553 = fmul contract float %5261, 0x40019999A0000000
  %5554 = fsub contract float %5552, %5553
  %5555 = fadd contract float %5261, %5263
  %5556 = fadd contract float %5555, %5265
  %5557 = fadd contract float %5556, %5267
  %5558 = fpext float %5557 to double
  %5559 = fmul contract double %5558, 5.500000e-02
  %5560 = tail call float @llvm.fabs.f32(float %5557)
  %5561 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5560)
  %5562 = fcmp olt float %5561, 0x3FE5555560000000
  %5563 = zext i1 %5562 to i32
  %5564 = tail call float @llvm.amdgcn.ldexp.f32(float %5561, i32 %5563)
  %5565 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5560)
  %5566 = sub nsw i32 %5565, %5563
  %5567 = fadd float %5564, -1.000000e+00
  %5568 = fadd float %5564, 1.000000e+00
  %5569 = fadd float %5568, -1.000000e+00
  %5570 = fsub float %5564, %5569
  %5571 = tail call float @llvm.amdgcn.rcp.f32(float %5568)
  %5572 = fmul float %5567, %5571
  %5573 = fmul float %5568, %5572
  %5574 = fneg float %5573
  %5575 = tail call float @llvm.fma.f32(float %5572, float %5568, float %5574)
  %5576 = tail call float @llvm.fma.f32(float %5572, float %5570, float %5575)
  %5577 = fadd float %5573, %5576
  %5578 = fsub float %5577, %5573
  %5579 = fsub float %5576, %5578
  %5580 = fsub float %5567, %5577
  %5581 = fsub float %5567, %5580
  %5582 = fsub float %5581, %5577
  %5583 = fsub float %5582, %5579
  %5584 = fadd float %5580, %5583
  %5585 = fmul float %5571, %5584
  %5586 = fadd float %5572, %5585
  %5587 = fsub float %5586, %5572
  %5588 = fsub float %5585, %5587
  %5589 = fmul float %5586, %5586
  %5590 = fneg float %5589
  %5591 = tail call float @llvm.fma.f32(float %5586, float %5586, float %5590)
  %5592 = fmul float %5588, 2.000000e+00
  %5593 = tail call float @llvm.fma.f32(float %5586, float %5592, float %5591)
  %5594 = fadd float %5589, %5593
  %5595 = fsub float %5594, %5589
  %5596 = fsub float %5593, %5595
  %5597 = tail call float @llvm.fmuladd.f32(float %5594, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5598 = tail call float @llvm.fmuladd.f32(float %5594, float %5597, float 0x3FD999BDE0000000)
  %5599 = sitofp i32 %5566 to float
  %5600 = fmul float %5599, 0x3FE62E4300000000
  %5601 = fneg float %5600
  %5602 = tail call float @llvm.fma.f32(float %5599, float 0x3FE62E4300000000, float %5601)
  %5603 = tail call float @llvm.fma.f32(float %5599, float 0xBE205C6100000000, float %5602)
  %5604 = fadd float %5600, %5603
  %5605 = fsub float %5604, %5600
  %5606 = fsub float %5603, %5605
  %5607 = tail call float @llvm.amdgcn.ldexp.f32(float %5586, i32 1)
  %5608 = fmul float %5586, %5594
  %5609 = fneg float %5608
  %5610 = tail call float @llvm.fma.f32(float %5594, float %5586, float %5609)
  %5611 = tail call float @llvm.fma.f32(float %5594, float %5588, float %5610)
  %5612 = tail call float @llvm.fma.f32(float %5596, float %5586, float %5611)
  %5613 = fadd float %5608, %5612
  %5614 = fsub float %5613, %5608
  %5615 = fsub float %5612, %5614
  %5616 = fmul float %5594, %5598
  %5617 = fneg float %5616
  %5618 = tail call float @llvm.fma.f32(float %5594, float %5598, float %5617)
  %5619 = tail call float @llvm.fma.f32(float %5596, float %5598, float %5618)
  %5620 = fadd float %5616, %5619
  %5621 = fsub float %5620, %5616
  %5622 = fsub float %5619, %5621
  %5623 = fadd float %5620, 0x3FE5555540000000
  %5624 = fadd float %5623, 0xBFE5555540000000
  %5625 = fsub float %5620, %5624
  %5626 = fadd float %5622, 0x3E2E720200000000
  %5627 = fadd float %5626, %5625
  %5628 = fadd float %5623, %5627
  %5629 = fsub float %5628, %5623
  %5630 = fsub float %5627, %5629
  %5631 = fmul float %5613, %5628
  %5632 = fneg float %5631
  %5633 = tail call float @llvm.fma.f32(float %5613, float %5628, float %5632)
  %5634 = tail call float @llvm.fma.f32(float %5613, float %5630, float %5633)
  %5635 = tail call float @llvm.fma.f32(float %5615, float %5628, float %5634)
  %5636 = tail call float @llvm.amdgcn.ldexp.f32(float %5588, i32 1)
  %5637 = fadd float %5631, %5635
  %5638 = fsub float %5637, %5631
  %5639 = fsub float %5635, %5638
  %5640 = fadd float %5607, %5637
  %5641 = fsub float %5640, %5607
  %5642 = fsub float %5637, %5641
  %5643 = fadd float %5636, %5639
  %5644 = fadd float %5643, %5642
  %5645 = fadd float %5640, %5644
  %5646 = fsub float %5645, %5640
  %5647 = fsub float %5644, %5646
  %5648 = fadd float %5604, %5645
  %5649 = fsub float %5648, %5604
  %5650 = fsub float %5648, %5649
  %5651 = fsub float %5604, %5650
  %5652 = fsub float %5645, %5649
  %5653 = fadd float %5652, %5651
  %5654 = fadd float %5606, %5647
  %5655 = fsub float %5654, %5606
  %5656 = fsub float %5654, %5655
  %5657 = fsub float %5606, %5656
  %5658 = fsub float %5647, %5655
  %5659 = fadd float %5658, %5657
  %5660 = fadd float %5654, %5653
  %5661 = fadd float %5648, %5660
  %5662 = fsub float %5661, %5648
  %5663 = fsub float %5660, %5662
  %5664 = fadd float %5659, %5663
  %5665 = fadd float %5661, %5664
  %5666 = fsub float %5665, %5661
  %5667 = fsub float %5664, %5666
  %5668 = fmul float %5665, 2.000000e+00
  %5669 = fneg float %5668
  %5670 = tail call float @llvm.fma.f32(float %5665, float 2.000000e+00, float %5669)
  %5671 = fmul float %5665, 0.000000e+00
  %5672 = tail call float @llvm.fma.f32(float %5667, float 2.000000e+00, float %5671)
  %5673 = fadd float %5670, %5672
  %5674 = fadd float %5668, %5673
  %5675 = fsub float %5674, %5668
  %5676 = fsub float %5673, %5675
  %5677 = tail call float @llvm.fabs.f32(float %5668) #3
  %5678 = fcmp oeq float %5677, 0x7FF0000000000000
  %5679 = select i1 %5678, float %5668, float %5674
  %5680 = tail call float @llvm.fabs.f32(float %5679) #3
  %5681 = fcmp oeq float %5680, 0x7FF0000000000000
  %5682 = select i1 %5681, float 0.000000e+00, float %5676
  %5683 = fcmp oeq float %5679, 0x40562E4300000000
  %5684 = select i1 %5683, float 0x3EE0000000000000, float 0.000000e+00
  %5685 = fsub float %5679, %5684
  %5686 = fadd float %5684, %5682
  %5687 = fmul float %5685, 0x3FF7154760000000
  %5688 = tail call float @llvm.rint.f32(float %5687)
  %5689 = fcmp ogt float %5685, 0x40562E4300000000
  %5690 = fcmp olt float %5685, 0xC059D1DA00000000
  %5691 = fneg float %5687
  %5692 = tail call float @llvm.fma.f32(float %5685, float 0x3FF7154760000000, float %5691)
  %5693 = tail call float @llvm.fma.f32(float %5685, float 0x3E54AE0BE0000000, float %5692)
  %5694 = fsub float %5687, %5688
  %5695 = fadd float %5693, %5694
  %5696 = tail call float @llvm.exp2.f32(float %5695)
  %5697 = fptosi float %5688 to i32
  %5698 = tail call float @llvm.amdgcn.ldexp.f32(float %5696, i32 %5697)
  %5699 = select i1 %5690, float 0.000000e+00, float %5698
  %5700 = select i1 %5689, float 0x7FF0000000000000, float %5699
  %5701 = tail call float @llvm.fma.f32(float %5700, float %5686, float %5700)
  %5702 = tail call float @llvm.fabs.f32(float %5700) #3
  %5703 = fcmp oeq float %5702, 0x7FF0000000000000
  %5704 = select i1 %5703, float %5700, float %5701
  %5705 = fcmp uge float %5557, 0.000000e+00
  %5706 = tail call float @llvm.fabs.f32(float %5704)
  %5707 = fcmp oeq float %5560, 0x7FF0000000000000
  %5708 = fcmp oeq float %5557, 0.000000e+00
  %5709 = or i1 %5708, %5707
  %5710 = select i1 %5708, float 0.000000e+00, float 0x7FF0000000000000
  %5711 = select i1 %5709, float %5710, float %5706
  %5712 = fcmp uno float %5557, 0.000000e+00
  %5713 = select i1 %5712, float 0x7FF8000000000000, float %5711
  %5714 = fpext float %5713 to double
  %5715 = fmul contract double %5714, 7.400000e-03
  %5716 = fadd contract double %5559, %5715
  %5717 = fmul float %5665, 3.000000e+00
  %5718 = fneg float %5717
  %5719 = tail call float @llvm.fma.f32(float %5665, float 3.000000e+00, float %5718)
  %5720 = tail call float @llvm.fma.f32(float %5667, float 3.000000e+00, float %5671)
  %5721 = fadd float %5719, %5720
  %5722 = fadd float %5717, %5721
  %5723 = fsub float %5722, %5717
  %5724 = fsub float %5721, %5723
  %5725 = tail call float @llvm.fabs.f32(float %5717) #3
  %5726 = fcmp oeq float %5725, 0x7FF0000000000000
  %5727 = select i1 %5726, float %5717, float %5722
  %5728 = tail call float @llvm.fabs.f32(float %5727) #3
  %5729 = fcmp oeq float %5728, 0x7FF0000000000000
  %5730 = select i1 %5729, float 0.000000e+00, float %5724
  %5731 = fcmp oeq float %5727, 0x40562E4300000000
  %5732 = select i1 %5731, float 0x3EE0000000000000, float 0.000000e+00
  %5733 = fsub float %5727, %5732
  %5734 = fadd float %5732, %5730
  %5735 = fmul float %5733, 0x3FF7154760000000
  %5736 = tail call float @llvm.rint.f32(float %5735)
  %5737 = fcmp ogt float %5733, 0x40562E4300000000
  %5738 = fcmp olt float %5733, 0xC059D1DA00000000
  %5739 = fneg float %5735
  %5740 = tail call float @llvm.fma.f32(float %5733, float 0x3FF7154760000000, float %5739)
  %5741 = tail call float @llvm.fma.f32(float %5733, float 0x3E54AE0BE0000000, float %5740)
  %5742 = fsub float %5735, %5736
  %5743 = fadd float %5741, %5742
  %5744 = tail call float @llvm.exp2.f32(float %5743)
  %5745 = fptosi float %5736 to i32
  %5746 = tail call float @llvm.amdgcn.ldexp.f32(float %5744, i32 %5745)
  %5747 = select i1 %5738, float 0.000000e+00, float %5746
  %5748 = select i1 %5737, float 0x7FF0000000000000, float %5747
  %5749 = tail call float @llvm.fma.f32(float %5748, float %5734, float %5748)
  %5750 = tail call float @llvm.fabs.f32(float %5748) #3
  %5751 = fcmp oeq float %5750, 0x7FF0000000000000
  %5752 = select i1 %5751, float %5748, float %5749
  %5753 = select i1 %5705, float 0.000000e+00, float -0.000000e+00
  %5754 = tail call float @llvm.copysign.f32(float %5752, float %5753)
  %5755 = tail call float @llvm.copysign.f32(float %5710, float %5557)
  %5756 = select i1 %5709, float %5755, float %5754
  %5757 = select i1 %5712, float 0x7FF8000000000000, float %5756
  %5758 = fpext float %5757 to double
  %5759 = fmul contract double %5758, 1.500000e-02
  %5760 = fadd contract double %5759, %5716
  %5761 = fptrunc double %5760 to float
  %5762 = fmul contract float %5261, %5761
  %5763 = fmul contract float %5243, 0x3FFB851EC0000000
  %5764 = fmul contract float %5763, %5263
  %5765 = fmul contract float %5239, %5263
  %5766 = fadd contract float %5765, 1.150000e+01
  %5767 = fdiv contract float %5764, %5766
  %5768 = fsub contract float %5762, %5767
  %5769 = fmul contract float %5263, 0x3F6B717580000000
  %5770 = fmul contract float %5265, %5489
  %5771 = fsub contract float %5769, %5770
  %5772 = fmul contract float %5263, 0x3F6205BC00000000
  %5773 = fmul contract float %5551, %5267
  %5774 = fsub contract float %5772, %5773
  %5775 = fmul contract float %5265, 0x407485BB40000000
  %5776 = fmul contract float %5544, %5267
  %5777 = fsub contract float %5775, %5776
  %5778 = fmul contract float %5763, %5265
  %5779 = fmul contract float %5239, %5265
  %5780 = fadd contract float %5779, 1.150000e+01
  %5781 = fdiv contract float %5778, %5780
  %5782 = fmul contract float %5763, %5267
  %5783 = fmul contract float %5239, %5267
  %5784 = fadd contract float %5783, 1.150000e+01
  %5785 = fdiv contract float %5782, %5784
  %5786 = fneg contract float %5488
  %5787 = fsub contract float %5786, %5505
  %5788 = fsub contract float %5787, %5530
  %5789 = fpext float %5788 to double
  %5790 = fmul contract double %5789, 1.000000e-03
  %5791 = fptrunc double %5790 to float
  %5792 = fsub contract float %5488, %5492
  %5793 = fsub contract float %5792, %5509
  %5794 = fsub contract float %5793, %5534
  %5795 = fsub contract float %5777, %5547
  %5796 = fmul contract float %5239, %5795
  %5797 = fadd contract float %5796, %5794
  %5798 = fpext float %5797 to double
  %5799 = fmul contract double %5798, 1.000000e-03
  %5800 = fptrunc double %5799 to float
  %5801 = fsub contract float %5492, %5513
  %5802 = fsub contract float %5801, %5538
  %5803 = fsub contract float %5774, %5554
  %5804 = fmul contract float %5239, %5803
  %5805 = fadd contract float %5804, %5802
  %5806 = fpext float %5805 to double
  %5807 = fmul contract double %5806, 1.000000e-03
  %5808 = fptrunc double %5807 to float
  %5809 = fsub contract float %5505, %5498
  %5810 = fpext float %5809 to double
  %5811 = fmul contract double %5810, 1.000000e-03
  %5812 = fptrunc double %5811 to float
  %5813 = fadd contract float %5509, %5498
  %5814 = fsub contract float %5813, %5501
  %5815 = fpext float %5814 to double
  %5816 = fmul contract double %5815, 1.000000e-03
  %5817 = fptrunc double %5816 to float
  %5818 = fadd contract float %5513, %5501
  %5819 = fpext float %5818 to double
  %5820 = fmul contract double %5819, 1.000000e-03
  %5821 = fptrunc double %5820 to float
  %5822 = fsub contract float %5547, %5550
  %5823 = fadd contract float %5781, %5822
  %5824 = fpext float %5823 to double
  %5825 = fmul contract double %5824, 1.000000e-03
  %5826 = fptrunc double %5825 to float
  %5827 = fadd contract float %5554, %5550
  %5828 = fsub contract float %5827, %5768
  %5829 = fpext float %5828 to double
  %5830 = fmul contract double %5829, 1.000000e-03
  %5831 = fptrunc double %5830 to float
  %5832 = fsub contract float %5768, %5774
  %5833 = fsub contract float %5832, %5771
  %5834 = fpext float %5833 to double
  %5835 = fmul contract double %5834, 1.000000e-03
  %5836 = fptrunc double %5835 to float
  %5837 = fsub contract float %5771, %5777
  %5838 = fsub contract float %5837, %5781
  %5839 = fpext float %5838 to double
  %5840 = fmul contract double %5839, 1.000000e-03
  %5841 = fptrunc double %5840 to float
  %5842 = fadd contract float %5774, %5777
  %5843 = fsub contract float %5842, %5785
  %5844 = fpext float %5843 to double
  %5845 = fmul contract double %5844, 1.000000e-03
  %5846 = fptrunc double %5845 to float
  %5847 = fsub contract float %5520, %5530
  %5848 = fsub contract float %5847, %5534
  %5849 = fsub contract float %5848, %5538
  %5850 = fpext float %5849 to double
  %5851 = fmul contract double %5850, 1.000000e-03
  %5852 = fptrunc double %5851 to float
  %5853 = fsub contract float %5530, %5523
  %5854 = fpext float %5853 to double
  %5855 = fmul contract double %5854, 1.000000e-03
  %5856 = fptrunc double %5855 to float
  %5857 = fadd contract float %5534, %5523
  %5858 = fsub contract float %5857, %5526
  %5859 = fpext float %5858 to double
  %5860 = fmul contract double %5859, 1.000000e-03
  %5861 = fptrunc double %5860 to float
  %5862 = fadd contract float %5538, %5526
  %5863 = fpext float %5862 to double
  %5864 = fmul contract double %5863, 1.000000e-03
  %5865 = fptrunc double %5864 to float
  %5866 = getelementptr inbounds float, float addrspace(1)* %2, i64 61
  store float %5791, float addrspace(1)* %5866, align 4, !tbaa !6
  %5867 = getelementptr inbounds float, float addrspace(1)* %2, i64 62
  store float %5800, float addrspace(1)* %5867, align 4, !tbaa !6
  %5868 = getelementptr inbounds float, float addrspace(1)* %2, i64 63
  store float %5808, float addrspace(1)* %5868, align 4, !tbaa !6
  %5869 = getelementptr inbounds float, float addrspace(1)* %2, i64 64
  store float %5812, float addrspace(1)* %5869, align 4, !tbaa !6
  %5870 = getelementptr inbounds float, float addrspace(1)* %2, i64 65
  store float %5817, float addrspace(1)* %5870, align 4, !tbaa !6
  %5871 = getelementptr inbounds float, float addrspace(1)* %2, i64 66
  store float %5821, float addrspace(1)* %5871, align 4, !tbaa !6
  %5872 = getelementptr inbounds float, float addrspace(1)* %2, i64 67
  store float %5826, float addrspace(1)* %5872, align 4, !tbaa !6
  %5873 = getelementptr inbounds float, float addrspace(1)* %2, i64 68
  store float %5831, float addrspace(1)* %5873, align 4, !tbaa !6
  %5874 = getelementptr inbounds float, float addrspace(1)* %2, i64 69
  store float %5836, float addrspace(1)* %5874, align 4, !tbaa !6
  %5875 = getelementptr inbounds float, float addrspace(1)* %2, i64 70
  store float %5841, float addrspace(1)* %5875, align 4, !tbaa !6
  %5876 = getelementptr inbounds float, float addrspace(1)* %2, i64 71
  store float %5846, float addrspace(1)* %5876, align 4, !tbaa !6
  %5877 = getelementptr inbounds float, float addrspace(1)* %2, i64 72
  store float %5852, float addrspace(1)* %5877, align 4, !tbaa !6
  %5878 = getelementptr inbounds float, float addrspace(1)* %2, i64 73
  store float %5856, float addrspace(1)* %5878, align 4, !tbaa !6
  %5879 = getelementptr inbounds float, float addrspace(1)* %2, i64 74
  store float %5861, float addrspace(1)* %5879, align 4, !tbaa !6
  %5880 = getelementptr inbounds float, float addrspace(1)* %2, i64 75
  store float %5865, float addrspace(1)* %5880, align 4, !tbaa !6
  %5881 = fmul contract float %5239, 2.000000e+00
  %5882 = fsub contract float %5771, %5550
  %5883 = fmul contract float %5881, %5882
  %5884 = fadd contract float %5492, %5488
  %5885 = fadd contract float %5498, %5884
  %5886 = fadd contract float %5501, %5885
  %5887 = fadd contract float %5520, %5886
  %5888 = fadd contract float %5523, %5887
  %5889 = fadd contract float %5526, %5888
  %5890 = fmul contract float %5889, 2.000000e+00
  %5891 = fsub contract float %5883, %5890
  %5892 = fpext float %5891 to double
  %5893 = fmul contract double %5892, 1.000000e-03
  %5894 = fptrunc double %5893 to float
  %5895 = getelementptr inbounds float, float addrspace(1)* %2, i64 1
  store float %5894, float addrspace(1)* %5895, align 4, !tbaa !6
  %5896 = getelementptr inbounds float, float addrspace(1)* %1, i64 37
  %5897 = load float, float addrspace(1)* %5896, align 4, !tbaa !6
  %5898 = fmul contract float %5897, 1.000000e+03
  %5899 = getelementptr inbounds float, float addrspace(1)* %3, i64 11
  %5900 = load float, float addrspace(1)* %5899, align 4, !tbaa !6
  %5901 = getelementptr inbounds float, float addrspace(1)* %3, i64 12
  %5902 = load float, float addrspace(1)* %5901, align 4, !tbaa !6
  %5903 = getelementptr inbounds float, float addrspace(1)* %3, i64 13
  %5904 = load float, float addrspace(1)* %5903, align 4, !tbaa !6
  %5905 = getelementptr inbounds float, float addrspace(1)* %3, i64 14
  %5906 = load float, float addrspace(1)* %5905, align 4, !tbaa !6
  %5907 = load float, float addrspace(1)* %4580, align 4, !tbaa !6
  %5908 = load float, float addrspace(1)* %4582, align 4, !tbaa !6
  %5909 = getelementptr inbounds float, float addrspace(1)* %1, i64 76
  %5910 = load float, float addrspace(1)* %5909, align 4, !tbaa !6
  %5911 = getelementptr inbounds float, float addrspace(1)* %1, i64 77
  %5912 = load float, float addrspace(1)* %5911, align 4, !tbaa !6
  %5913 = getelementptr inbounds float, float addrspace(1)* %1, i64 78
  %5914 = load float, float addrspace(1)* %5913, align 4, !tbaa !6
  %5915 = getelementptr inbounds float, float addrspace(1)* %1, i64 79
  %5916 = load float, float addrspace(1)* %5915, align 4, !tbaa !6
  %5917 = getelementptr inbounds float, float addrspace(1)* %1, i64 80
  %5918 = load float, float addrspace(1)* %5917, align 4, !tbaa !6
  %5919 = getelementptr inbounds float, float addrspace(1)* %1, i64 81
  %5920 = load float, float addrspace(1)* %5919, align 4, !tbaa !6
  %5921 = getelementptr inbounds float, float addrspace(1)* %1, i64 82
  %5922 = load float, float addrspace(1)* %5921, align 4, !tbaa !6
  %5923 = getelementptr inbounds float, float addrspace(1)* %1, i64 83
  %5924 = load float, float addrspace(1)* %5923, align 4, !tbaa !6
  %5925 = getelementptr inbounds float, float addrspace(1)* %1, i64 84
  %5926 = load float, float addrspace(1)* %5925, align 4, !tbaa !6
  %5927 = getelementptr inbounds float, float addrspace(1)* %1, i64 85
  %5928 = load float, float addrspace(1)* %5927, align 4, !tbaa !6
  %5929 = getelementptr inbounds float, float addrspace(1)* %1, i64 86
  %5930 = load float, float addrspace(1)* %5929, align 4, !tbaa !6
  %5931 = getelementptr inbounds float, float addrspace(1)* %1, i64 87
  %5932 = load float, float addrspace(1)* %5931, align 4, !tbaa !6
  %5933 = getelementptr inbounds float, float addrspace(1)* %1, i64 88
  %5934 = load float, float addrspace(1)* %5933, align 4, !tbaa !6
  %5935 = getelementptr inbounds float, float addrspace(1)* %1, i64 89
  %5936 = load float, float addrspace(1)* %5935, align 4, !tbaa !6
  %5937 = getelementptr inbounds float, float addrspace(1)* %1, i64 90
  %5938 = load float, float addrspace(1)* %5937, align 4, !tbaa !6
  %5939 = fcmp contract ugt float %5908, 1.000000e+00
  %5940 = fpext float %5907 to double
  %5941 = fdiv contract double %5940, 0x3FEE147AE147AE14
  %5942 = fadd contract double %5941, 1.000000e+00
  br i1 %5939, label %5963, label %5943

5943:                                             ; preds = %5325
  %5944 = fpext float %5908 to double
  %5945 = fdiv contract double %5944, 1.200000e-02
  %5946 = fsub contract double %5942, %5945
  %5947 = fmul contract double %5946, 2.500000e-03
  %5948 = fdiv contract double %5940, 8.100000e+00
  %5949 = fadd contract double %5948, 1.000000e+00
  %5950 = fdiv contract double %5944, 2.200000e-02
  %5951 = fadd contract double %5949, %5950
  %5952 = fmul contract double %5951, %5947
  %5953 = fdiv contract double %5940, 6.400000e-01
  %5954 = fadd contract double %5953, 1.000000e+00
  %5955 = fdiv contract double %5944, 1.400000e-03
  %5956 = fadd contract double %5954, %5955
  %5957 = fmul contract double %5956, 1.280000e-01
  %5958 = fdiv contract double %5940, 1.300000e+01
  %5959 = fadd contract double %5958, 1.000000e+00
  %5960 = fdiv contract double %5944, 1.530000e-01
  %5961 = fsub contract double %5959, %5960
  %5962 = fmul contract double %5961, %5957
  br label %5988

5963:                                             ; preds = %5325
  %5964 = fadd contract double %5942, 0xC054D55555555555
  %5965 = fadd contract float %5908, -1.000000e+00
  %5966 = fpext float %5965 to double
  %5967 = fdiv contract double %5966, 6.000000e-02
  %5968 = fadd contract double %5964, %5967
  %5969 = fmul contract double %5968, 2.500000e-03
  %5970 = fdiv contract double %5940, 8.100000e+00
  %5971 = fadd contract double %5970, 1.000000e+00
  %5972 = fadd contract double %5971, 0x4046BA2E8BA2E8BB
  %5973 = fdiv contract double %5966, 6.800000e-02
  %5974 = fadd contract double %5972, %5973
  %5975 = fmul contract double %5974, %5969
  %5976 = fdiv contract double %5940, 6.400000e-01
  %5977 = fadd contract double %5976, 1.000000e+00
  %5978 = fadd contract double %5977, 0x4086524924924925
  %5979 = fdiv contract double %5966, 5.000000e-03
  %5980 = fadd contract double %5978, %5979
  %5981 = fmul contract double %5980, 1.280000e-01
  %5982 = fdiv contract double %5940, 1.300000e+01
  %5983 = fadd contract double %5982, 1.000000e+00
  %5984 = fadd contract double %5983, 0xC01A24CF7A24CF7A
  %5985 = fdiv contract double %5966, 1.500000e-01
  %5986 = fadd contract double %5984, %5985
  %5987 = fmul contract double %5986, %5981
  br label %5988

5988:                                             ; preds = %5943, %5963
  %5989 = phi double [ %5962, %5943 ], [ %5987, %5963 ]
  %5990 = phi double [ %5952, %5943 ], [ %5975, %5963 ]
  %5991 = fptrunc double %5990 to float
  %5992 = fptrunc double %5989 to float
  %5993 = fdiv contract float 1.000000e+01, %5991
  %5994 = fdiv contract float 5.000000e+02, %5992
  %5995 = tail call float @llvm.fabs.f32(float %5898)
  %5996 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5995)
  %5997 = fcmp olt float %5996, 0x3FE5555560000000
  %5998 = zext i1 %5997 to i32
  %5999 = tail call float @llvm.amdgcn.ldexp.f32(float %5996, i32 %5998)
  %6000 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5995)
  %6001 = sub nsw i32 %6000, %5998
  %6002 = fadd float %5999, -1.000000e+00
  %6003 = fadd float %5999, 1.000000e+00
  %6004 = fadd float %6003, -1.000000e+00
  %6005 = fsub float %5999, %6004
  %6006 = tail call float @llvm.amdgcn.rcp.f32(float %6003)
  %6007 = fmul float %6002, %6006
  %6008 = fmul float %6003, %6007
  %6009 = fneg float %6008
  %6010 = tail call float @llvm.fma.f32(float %6007, float %6003, float %6009)
  %6011 = tail call float @llvm.fma.f32(float %6007, float %6005, float %6010)
  %6012 = fadd float %6008, %6011
  %6013 = fsub float %6012, %6008
  %6014 = fsub float %6011, %6013
  %6015 = fsub float %6002, %6012
  %6016 = fsub float %6002, %6015
  %6017 = fsub float %6016, %6012
  %6018 = fsub float %6017, %6014
  %6019 = fadd float %6015, %6018
  %6020 = fmul float %6006, %6019
  %6021 = fadd float %6007, %6020
  %6022 = fsub float %6021, %6007
  %6023 = fsub float %6020, %6022
  %6024 = fmul float %6021, %6021
  %6025 = fneg float %6024
  %6026 = tail call float @llvm.fma.f32(float %6021, float %6021, float %6025)
  %6027 = fmul float %6023, 2.000000e+00
  %6028 = tail call float @llvm.fma.f32(float %6021, float %6027, float %6026)
  %6029 = fadd float %6024, %6028
  %6030 = fsub float %6029, %6024
  %6031 = fsub float %6028, %6030
  %6032 = tail call float @llvm.fmuladd.f32(float %6029, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6033 = tail call float @llvm.fmuladd.f32(float %6029, float %6032, float 0x3FD999BDE0000000)
  %6034 = sitofp i32 %6001 to float
  %6035 = fmul float %6034, 0x3FE62E4300000000
  %6036 = fneg float %6035
  %6037 = tail call float @llvm.fma.f32(float %6034, float 0x3FE62E4300000000, float %6036)
  %6038 = tail call float @llvm.fma.f32(float %6034, float 0xBE205C6100000000, float %6037)
  %6039 = fadd float %6035, %6038
  %6040 = fsub float %6039, %6035
  %6041 = fsub float %6038, %6040
  %6042 = tail call float @llvm.amdgcn.ldexp.f32(float %6021, i32 1)
  %6043 = fmul float %6021, %6029
  %6044 = fneg float %6043
  %6045 = tail call float @llvm.fma.f32(float %6029, float %6021, float %6044)
  %6046 = tail call float @llvm.fma.f32(float %6029, float %6023, float %6045)
  %6047 = tail call float @llvm.fma.f32(float %6031, float %6021, float %6046)
  %6048 = fadd float %6043, %6047
  %6049 = fsub float %6048, %6043
  %6050 = fsub float %6047, %6049
  %6051 = fmul float %6029, %6033
  %6052 = fneg float %6051
  %6053 = tail call float @llvm.fma.f32(float %6029, float %6033, float %6052)
  %6054 = tail call float @llvm.fma.f32(float %6031, float %6033, float %6053)
  %6055 = fadd float %6051, %6054
  %6056 = fsub float %6055, %6051
  %6057 = fsub float %6054, %6056
  %6058 = fadd float %6055, 0x3FE5555540000000
  %6059 = fadd float %6058, 0xBFE5555540000000
  %6060 = fsub float %6055, %6059
  %6061 = fadd float %6057, 0x3E2E720200000000
  %6062 = fadd float %6061, %6060
  %6063 = fadd float %6058, %6062
  %6064 = fsub float %6063, %6058
  %6065 = fsub float %6062, %6064
  %6066 = fmul float %6048, %6063
  %6067 = fneg float %6066
  %6068 = tail call float @llvm.fma.f32(float %6048, float %6063, float %6067)
  %6069 = tail call float @llvm.fma.f32(float %6048, float %6065, float %6068)
  %6070 = tail call float @llvm.fma.f32(float %6050, float %6063, float %6069)
  %6071 = tail call float @llvm.amdgcn.ldexp.f32(float %6023, i32 1)
  %6072 = fadd float %6066, %6070
  %6073 = fsub float %6072, %6066
  %6074 = fsub float %6070, %6073
  %6075 = fadd float %6042, %6072
  %6076 = fsub float %6075, %6042
  %6077 = fsub float %6072, %6076
  %6078 = fadd float %6071, %6074
  %6079 = fadd float %6078, %6077
  %6080 = fadd float %6075, %6079
  %6081 = fsub float %6080, %6075
  %6082 = fsub float %6079, %6081
  %6083 = fadd float %6039, %6080
  %6084 = fsub float %6083, %6039
  %6085 = fsub float %6083, %6084
  %6086 = fsub float %6039, %6085
  %6087 = fsub float %6080, %6084
  %6088 = fadd float %6087, %6086
  %6089 = fadd float %6041, %6082
  %6090 = fsub float %6089, %6041
  %6091 = fsub float %6089, %6090
  %6092 = fsub float %6041, %6091
  %6093 = fsub float %6082, %6090
  %6094 = fadd float %6093, %6092
  %6095 = fadd float %6089, %6088
  %6096 = fadd float %6083, %6095
  %6097 = fsub float %6096, %6083
  %6098 = fsub float %6095, %6097
  %6099 = fadd float %6094, %6098
  %6100 = fadd float %6096, %6099
  %6101 = fsub float %6100, %6096
  %6102 = fsub float %6099, %6101
  %6103 = fmul float %6100, 2.000000e+00
  %6104 = fneg float %6103
  %6105 = tail call float @llvm.fma.f32(float %6100, float 2.000000e+00, float %6104)
  %6106 = fmul float %6100, 0.000000e+00
  %6107 = tail call float @llvm.fma.f32(float %6102, float 2.000000e+00, float %6106)
  %6108 = fadd float %6105, %6107
  %6109 = fadd float %6103, %6108
  %6110 = fsub float %6109, %6103
  %6111 = fsub float %6108, %6110
  %6112 = tail call float @llvm.fabs.f32(float %6103) #3
  %6113 = fcmp oeq float %6112, 0x7FF0000000000000
  %6114 = select i1 %6113, float %6103, float %6109
  %6115 = tail call float @llvm.fabs.f32(float %6114) #3
  %6116 = fcmp oeq float %6115, 0x7FF0000000000000
  %6117 = select i1 %6116, float 0.000000e+00, float %6111
  %6118 = fcmp oeq float %6114, 0x40562E4300000000
  %6119 = select i1 %6118, float 0x3EE0000000000000, float 0.000000e+00
  %6120 = fsub float %6114, %6119
  %6121 = fadd float %6119, %6117
  %6122 = fmul float %6120, 0x3FF7154760000000
  %6123 = tail call float @llvm.rint.f32(float %6122)
  %6124 = fcmp ogt float %6120, 0x40562E4300000000
  %6125 = fcmp olt float %6120, 0xC059D1DA00000000
  %6126 = fneg float %6122
  %6127 = tail call float @llvm.fma.f32(float %6120, float 0x3FF7154760000000, float %6126)
  %6128 = tail call float @llvm.fma.f32(float %6120, float 0x3E54AE0BE0000000, float %6127)
  %6129 = fsub float %6122, %6123
  %6130 = fadd float %6128, %6129
  %6131 = tail call float @llvm.exp2.f32(float %6130)
  %6132 = fptosi float %6123 to i32
  %6133 = tail call float @llvm.amdgcn.ldexp.f32(float %6131, i32 %6132)
  %6134 = select i1 %6125, float 0.000000e+00, float %6133
  %6135 = select i1 %6124, float 0x7FF0000000000000, float %6134
  %6136 = tail call float @llvm.fma.f32(float %6135, float %6121, float %6135)
  %6137 = tail call float @llvm.fabs.f32(float %6135) #3
  %6138 = fcmp oeq float %6137, 0x7FF0000000000000
  %6139 = select i1 %6138, float %6135, float %6136
  %6140 = tail call float @llvm.fabs.f32(float %6139)
  %6141 = fcmp oeq float %5995, 0x7FF0000000000000
  %6142 = fcmp oeq float %5898, 0.000000e+00
  %6143 = or i1 %6142, %6141
  %6144 = select i1 %6142, float 0.000000e+00, float 0x7FF0000000000000
  %6145 = select i1 %6143, float %6144, float %6140
  %6146 = fcmp uno float %5898, 0.000000e+00
  %6147 = select i1 %6146, float 0x7FF8000000000000, float %6145
  %6148 = fmul contract float %6147, %5993
  %6149 = fmul contract float %5910, %6148
  %6150 = fmul contract float %5912, 1.000000e+01
  %6151 = fsub contract float %6149, %6150
  %6152 = fmul contract float %6147, %5994
  %6153 = fmul contract float %5912, %6152
  %6154 = fmul contract float %5914, 5.000000e+02
  %6155 = fsub contract float %6153, %6154
  %6156 = fsub contract float %5900, %5916
  %6157 = fsub contract float %6156, %5918
  %6158 = fsub contract float %6157, %5920
  %6159 = fmul contract float %5916, %6148
  %6160 = fmul contract float %5918, 0x3FB99999A0000000
  %6161 = fsub contract float %6159, %6160
  %6162 = fmul contract float %5918, %6152
  %6163 = fmul contract float %5920, 5.000000e+02
  %6164 = fsub contract float %6162, %6163
  %6165 = fmul contract float %5910, 0x3F7CAC0820000000
  %6166 = fmul contract float %6165, %6158
  %6167 = fmul contract float %5916, 0x3F56F00680000000
  %6168 = fsub contract float %6166, %6167
  %6169 = fmul contract float %5912, 0x3F7CAC0820000000
  %6170 = fmul contract float %6169, %6158
  %6171 = fmul contract float %5918, 0x3EED5C3140000000
  %6172 = fsub contract float %6170, %6171
  %6173 = fmul contract float %5914, 0x3F7CAC0820000000
  %6174 = fmul contract float %6173, %6158
  %6175 = fmul contract float %5920, 0x3EED5C3140000000
  %6176 = fsub contract float %6174, %6175
  %6177 = fsub contract float %5904, %5932
  %6178 = fsub contract float %6177, %5934
  %6179 = fsub contract float %6178, %5936
  %6180 = fsub contract float %6179, %5938
  %6181 = fmul contract float %6147, 2.000000e+00
  %6182 = fmul contract float %6180, %6181
  %6183 = fsub contract float %6182, %5932
  %6184 = fmul contract float %5934, %6148
  %6185 = fmul contract float %5936, 0x3FAF07C200000000
  %6186 = fsub contract float %6184, %6185
  %6187 = fmul contract float %5936, %6152
  %6188 = fmul contract float %5938, 0x3F7054ECC0000000
  %6189 = fsub contract float %6187, %6188
  %6190 = fmul contract float %5910, 4.600000e+01
  %6191 = fmul contract float %6190, %5932
  %6192 = fmul contract float %5934, 0x4080CFBA60000000
  %6193 = fsub contract float %6191, %6192
  %6194 = fmul contract float %5912, 4.600000e+01
  %6195 = fmul contract float %6194, %5932
  %6196 = fmul contract float %5936, 0x400A154CA0000000
  %6197 = fsub contract float %6195, %6196
  %6198 = fmul contract float %5914, 4.600000e+01
  %6199 = fmul contract float %6198, %5932
  %6200 = fmul contract float %5938, 0x3F554C9860000000
  %6201 = fsub contract float %6199, %6200
  %6202 = fsub contract float 1.000000e+00, %5922
  %6203 = fsub contract float %6202, %5924
  %6204 = fsub contract float %6203, %5926
  %6205 = fsub contract float %6204, %5928
  %6206 = fsub contract float %6205, %5930
  %6207 = fmul contract float %5912, 0x40506AFC40000000
  %6208 = fmul contract float %6207, %6206
  %6209 = fmul contract float %5922, 0x407485BB40000000
  %6210 = fsub contract float %6208, %6209
  %6211 = fmul contract float %5922, %6152
  %6212 = fmul contract float %5924, 0x400ACCCCC0000000
  %6213 = fsub contract float %6211, %6212
  %6214 = fmul contract float %5914, 0x40506AFC40000000
  %6215 = fmul contract float %6214, %6206
  %6216 = fmul contract float %5924, 0x40019999A0000000
  %6217 = fsub contract float %6215, %6216
  %6218 = fadd contract float %5924, %5926
  %6219 = fadd contract float %6218, %5928
  %6220 = fadd contract float %6219, %5930
  %6221 = fpext float %6220 to double
  %6222 = fmul contract double %6221, 5.500000e-02
  %6223 = tail call float @llvm.fabs.f32(float %6220)
  %6224 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6223)
  %6225 = fcmp olt float %6224, 0x3FE5555560000000
  %6226 = zext i1 %6225 to i32
  %6227 = tail call float @llvm.amdgcn.ldexp.f32(float %6224, i32 %6226)
  %6228 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6223)
  %6229 = sub nsw i32 %6228, %6226
  %6230 = fadd float %6227, -1.000000e+00
  %6231 = fadd float %6227, 1.000000e+00
  %6232 = fadd float %6231, -1.000000e+00
  %6233 = fsub float %6227, %6232
  %6234 = tail call float @llvm.amdgcn.rcp.f32(float %6231)
  %6235 = fmul float %6230, %6234
  %6236 = fmul float %6231, %6235
  %6237 = fneg float %6236
  %6238 = tail call float @llvm.fma.f32(float %6235, float %6231, float %6237)
  %6239 = tail call float @llvm.fma.f32(float %6235, float %6233, float %6238)
  %6240 = fadd float %6236, %6239
  %6241 = fsub float %6240, %6236
  %6242 = fsub float %6239, %6241
  %6243 = fsub float %6230, %6240
  %6244 = fsub float %6230, %6243
  %6245 = fsub float %6244, %6240
  %6246 = fsub float %6245, %6242
  %6247 = fadd float %6243, %6246
  %6248 = fmul float %6234, %6247
  %6249 = fadd float %6235, %6248
  %6250 = fsub float %6249, %6235
  %6251 = fsub float %6248, %6250
  %6252 = fmul float %6249, %6249
  %6253 = fneg float %6252
  %6254 = tail call float @llvm.fma.f32(float %6249, float %6249, float %6253)
  %6255 = fmul float %6251, 2.000000e+00
  %6256 = tail call float @llvm.fma.f32(float %6249, float %6255, float %6254)
  %6257 = fadd float %6252, %6256
  %6258 = fsub float %6257, %6252
  %6259 = fsub float %6256, %6258
  %6260 = tail call float @llvm.fmuladd.f32(float %6257, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6261 = tail call float @llvm.fmuladd.f32(float %6257, float %6260, float 0x3FD999BDE0000000)
  %6262 = sitofp i32 %6229 to float
  %6263 = fmul float %6262, 0x3FE62E4300000000
  %6264 = fneg float %6263
  %6265 = tail call float @llvm.fma.f32(float %6262, float 0x3FE62E4300000000, float %6264)
  %6266 = tail call float @llvm.fma.f32(float %6262, float 0xBE205C6100000000, float %6265)
  %6267 = fadd float %6263, %6266
  %6268 = fsub float %6267, %6263
  %6269 = fsub float %6266, %6268
  %6270 = tail call float @llvm.amdgcn.ldexp.f32(float %6249, i32 1)
  %6271 = fmul float %6249, %6257
  %6272 = fneg float %6271
  %6273 = tail call float @llvm.fma.f32(float %6257, float %6249, float %6272)
  %6274 = tail call float @llvm.fma.f32(float %6257, float %6251, float %6273)
  %6275 = tail call float @llvm.fma.f32(float %6259, float %6249, float %6274)
  %6276 = fadd float %6271, %6275
  %6277 = fsub float %6276, %6271
  %6278 = fsub float %6275, %6277
  %6279 = fmul float %6257, %6261
  %6280 = fneg float %6279
  %6281 = tail call float @llvm.fma.f32(float %6257, float %6261, float %6280)
  %6282 = tail call float @llvm.fma.f32(float %6259, float %6261, float %6281)
  %6283 = fadd float %6279, %6282
  %6284 = fsub float %6283, %6279
  %6285 = fsub float %6282, %6284
  %6286 = fadd float %6283, 0x3FE5555540000000
  %6287 = fadd float %6286, 0xBFE5555540000000
  %6288 = fsub float %6283, %6287
  %6289 = fadd float %6285, 0x3E2E720200000000
  %6290 = fadd float %6289, %6288
  %6291 = fadd float %6286, %6290
  %6292 = fsub float %6291, %6286
  %6293 = fsub float %6290, %6292
  %6294 = fmul float %6276, %6291
  %6295 = fneg float %6294
  %6296 = tail call float @llvm.fma.f32(float %6276, float %6291, float %6295)
  %6297 = tail call float @llvm.fma.f32(float %6276, float %6293, float %6296)
  %6298 = tail call float @llvm.fma.f32(float %6278, float %6291, float %6297)
  %6299 = tail call float @llvm.amdgcn.ldexp.f32(float %6251, i32 1)
  %6300 = fadd float %6294, %6298
  %6301 = fsub float %6300, %6294
  %6302 = fsub float %6298, %6301
  %6303 = fadd float %6270, %6300
  %6304 = fsub float %6303, %6270
  %6305 = fsub float %6300, %6304
  %6306 = fadd float %6299, %6302
  %6307 = fadd float %6306, %6305
  %6308 = fadd float %6303, %6307
  %6309 = fsub float %6308, %6303
  %6310 = fsub float %6307, %6309
  %6311 = fadd float %6267, %6308
  %6312 = fsub float %6311, %6267
  %6313 = fsub float %6311, %6312
  %6314 = fsub float %6267, %6313
  %6315 = fsub float %6308, %6312
  %6316 = fadd float %6315, %6314
  %6317 = fadd float %6269, %6310
  %6318 = fsub float %6317, %6269
  %6319 = fsub float %6317, %6318
  %6320 = fsub float %6269, %6319
  %6321 = fsub float %6310, %6318
  %6322 = fadd float %6321, %6320
  %6323 = fadd float %6317, %6316
  %6324 = fadd float %6311, %6323
  %6325 = fsub float %6324, %6311
  %6326 = fsub float %6323, %6325
  %6327 = fadd float %6322, %6326
  %6328 = fadd float %6324, %6327
  %6329 = fsub float %6328, %6324
  %6330 = fsub float %6327, %6329
  %6331 = fmul float %6328, 2.000000e+00
  %6332 = fneg float %6331
  %6333 = tail call float @llvm.fma.f32(float %6328, float 2.000000e+00, float %6332)
  %6334 = fmul float %6328, 0.000000e+00
  %6335 = tail call float @llvm.fma.f32(float %6330, float 2.000000e+00, float %6334)
  %6336 = fadd float %6333, %6335
  %6337 = fadd float %6331, %6336
  %6338 = fsub float %6337, %6331
  %6339 = fsub float %6336, %6338
  %6340 = tail call float @llvm.fabs.f32(float %6331) #3
  %6341 = fcmp oeq float %6340, 0x7FF0000000000000
  %6342 = select i1 %6341, float %6331, float %6337
  %6343 = tail call float @llvm.fabs.f32(float %6342) #3
  %6344 = fcmp oeq float %6343, 0x7FF0000000000000
  %6345 = select i1 %6344, float 0.000000e+00, float %6339
  %6346 = fcmp oeq float %6342, 0x40562E4300000000
  %6347 = select i1 %6346, float 0x3EE0000000000000, float 0.000000e+00
  %6348 = fsub float %6342, %6347
  %6349 = fadd float %6347, %6345
  %6350 = fmul float %6348, 0x3FF7154760000000
  %6351 = tail call float @llvm.rint.f32(float %6350)
  %6352 = fcmp ogt float %6348, 0x40562E4300000000
  %6353 = fcmp olt float %6348, 0xC059D1DA00000000
  %6354 = fneg float %6350
  %6355 = tail call float @llvm.fma.f32(float %6348, float 0x3FF7154760000000, float %6354)
  %6356 = tail call float @llvm.fma.f32(float %6348, float 0x3E54AE0BE0000000, float %6355)
  %6357 = fsub float %6350, %6351
  %6358 = fadd float %6356, %6357
  %6359 = tail call float @llvm.exp2.f32(float %6358)
  %6360 = fptosi float %6351 to i32
  %6361 = tail call float @llvm.amdgcn.ldexp.f32(float %6359, i32 %6360)
  %6362 = select i1 %6353, float 0.000000e+00, float %6361
  %6363 = select i1 %6352, float 0x7FF0000000000000, float %6362
  %6364 = tail call float @llvm.fma.f32(float %6363, float %6349, float %6363)
  %6365 = tail call float @llvm.fabs.f32(float %6363) #3
  %6366 = fcmp oeq float %6365, 0x7FF0000000000000
  %6367 = select i1 %6366, float %6363, float %6364
  %6368 = fcmp uge float %6220, 0.000000e+00
  %6369 = tail call float @llvm.fabs.f32(float %6367)
  %6370 = fcmp oeq float %6223, 0x7FF0000000000000
  %6371 = fcmp oeq float %6220, 0.000000e+00
  %6372 = or i1 %6371, %6370
  %6373 = select i1 %6371, float 0.000000e+00, float 0x7FF0000000000000
  %6374 = select i1 %6372, float %6373, float %6369
  %6375 = fcmp uno float %6220, 0.000000e+00
  %6376 = select i1 %6375, float 0x7FF8000000000000, float %6374
  %6377 = fpext float %6376 to double
  %6378 = fmul contract double %6377, 7.400000e-03
  %6379 = fadd contract double %6222, %6378
  %6380 = fmul float %6328, 3.000000e+00
  %6381 = fneg float %6380
  %6382 = tail call float @llvm.fma.f32(float %6328, float 3.000000e+00, float %6381)
  %6383 = tail call float @llvm.fma.f32(float %6330, float 3.000000e+00, float %6334)
  %6384 = fadd float %6382, %6383
  %6385 = fadd float %6380, %6384
  %6386 = fsub float %6385, %6380
  %6387 = fsub float %6384, %6386
  %6388 = tail call float @llvm.fabs.f32(float %6380) #3
  %6389 = fcmp oeq float %6388, 0x7FF0000000000000
  %6390 = select i1 %6389, float %6380, float %6385
  %6391 = tail call float @llvm.fabs.f32(float %6390) #3
  %6392 = fcmp oeq float %6391, 0x7FF0000000000000
  %6393 = select i1 %6392, float 0.000000e+00, float %6387
  %6394 = fcmp oeq float %6390, 0x40562E4300000000
  %6395 = select i1 %6394, float 0x3EE0000000000000, float 0.000000e+00
  %6396 = fsub float %6390, %6395
  %6397 = fadd float %6395, %6393
  %6398 = fmul float %6396, 0x3FF7154760000000
  %6399 = tail call float @llvm.rint.f32(float %6398)
  %6400 = fcmp ogt float %6396, 0x40562E4300000000
  %6401 = fcmp olt float %6396, 0xC059D1DA00000000
  %6402 = fneg float %6398
  %6403 = tail call float @llvm.fma.f32(float %6396, float 0x3FF7154760000000, float %6402)
  %6404 = tail call float @llvm.fma.f32(float %6396, float 0x3E54AE0BE0000000, float %6403)
  %6405 = fsub float %6398, %6399
  %6406 = fadd float %6404, %6405
  %6407 = tail call float @llvm.exp2.f32(float %6406)
  %6408 = fptosi float %6399 to i32
  %6409 = tail call float @llvm.amdgcn.ldexp.f32(float %6407, i32 %6408)
  %6410 = select i1 %6401, float 0.000000e+00, float %6409
  %6411 = select i1 %6400, float 0x7FF0000000000000, float %6410
  %6412 = tail call float @llvm.fma.f32(float %6411, float %6397, float %6411)
  %6413 = tail call float @llvm.fabs.f32(float %6411) #3
  %6414 = fcmp oeq float %6413, 0x7FF0000000000000
  %6415 = select i1 %6414, float %6411, float %6412
  %6416 = select i1 %6368, float 0.000000e+00, float -0.000000e+00
  %6417 = tail call float @llvm.copysign.f32(float %6415, float %6416)
  %6418 = tail call float @llvm.copysign.f32(float %6373, float %6220)
  %6419 = select i1 %6372, float %6418, float %6417
  %6420 = select i1 %6375, float 0x7FF8000000000000, float %6419
  %6421 = fpext float %6420 to double
  %6422 = fmul contract double %6421, 1.500000e-02
  %6423 = fadd contract double %6422, %6379
  %6424 = fptrunc double %6423 to float
  %6425 = fmul contract float %5924, %6424
  %6426 = fmul contract float %5906, 0x3FFB851EC0000000
  %6427 = fmul contract float %6426, %5926
  %6428 = fmul contract float %5902, %5926
  %6429 = fadd contract float %6428, 1.150000e+01
  %6430 = fdiv contract float %6427, %6429
  %6431 = fsub contract float %6425, %6430
  %6432 = fmul contract float %5926, 0x3F6B717580000000
  %6433 = fmul contract float %5928, %6152
  %6434 = fsub contract float %6432, %6433
  %6435 = fmul contract float %5926, 0x3F6205BC00000000
  %6436 = fmul contract float %6214, %5930
  %6437 = fsub contract float %6435, %6436
  %6438 = fmul contract float %5928, 0x407485BB40000000
  %6439 = fmul contract float %6207, %5930
  %6440 = fsub contract float %6438, %6439
  %6441 = fmul contract float %6426, %5928
  %6442 = fmul contract float %5902, %5928
  %6443 = fadd contract float %6442, 1.150000e+01
  %6444 = fdiv contract float %6441, %6443
  %6445 = fmul contract float %6426, %5930
  %6446 = fmul contract float %5902, %5930
  %6447 = fadd contract float %6446, 1.150000e+01
  %6448 = fdiv contract float %6445, %6447
  %6449 = fneg contract float %6151
  %6450 = fsub contract float %6449, %6168
  %6451 = fsub contract float %6450, %6193
  %6452 = fpext float %6451 to double
  %6453 = fmul contract double %6452, 1.000000e-03
  %6454 = fptrunc double %6453 to float
  %6455 = fsub contract float %6151, %6155
  %6456 = fsub contract float %6455, %6172
  %6457 = fsub contract float %6456, %6197
  %6458 = fsub contract float %6440, %6210
  %6459 = fmul contract float %5902, %6458
  %6460 = fadd contract float %6459, %6457
  %6461 = fpext float %6460 to double
  %6462 = fmul contract double %6461, 1.000000e-03
  %6463 = fptrunc double %6462 to float
  %6464 = fsub contract float %6155, %6176
  %6465 = fsub contract float %6464, %6201
  %6466 = fsub contract float %6437, %6217
  %6467 = fmul contract float %5902, %6466
  %6468 = fadd contract float %6467, %6465
  %6469 = fpext float %6468 to double
  %6470 = fmul contract double %6469, 1.000000e-03
  %6471 = fptrunc double %6470 to float
  %6472 = fsub contract float %6168, %6161
  %6473 = fpext float %6472 to double
  %6474 = fmul contract double %6473, 1.000000e-03
  %6475 = fptrunc double %6474 to float
  %6476 = fadd contract float %6172, %6161
  %6477 = fsub contract float %6476, %6164
  %6478 = fpext float %6477 to double
  %6479 = fmul contract double %6478, 1.000000e-03
  %6480 = fptrunc double %6479 to float
  %6481 = fadd contract float %6176, %6164
  %6482 = fpext float %6481 to double
  %6483 = fmul contract double %6482, 1.000000e-03
  %6484 = fptrunc double %6483 to float
  %6485 = fsub contract float %6210, %6213
  %6486 = fadd contract float %6444, %6485
  %6487 = fpext float %6486 to double
  %6488 = fmul contract double %6487, 1.000000e-03
  %6489 = fptrunc double %6488 to float
  %6490 = fadd contract float %6217, %6213
  %6491 = fsub contract float %6490, %6431
  %6492 = fpext float %6491 to double
  %6493 = fmul contract double %6492, 1.000000e-03
  %6494 = fptrunc double %6493 to float
  %6495 = fsub contract float %6431, %6437
  %6496 = fsub contract float %6495, %6434
  %6497 = fpext float %6496 to double
  %6498 = fmul contract double %6497, 1.000000e-03
  %6499 = fptrunc double %6498 to float
  %6500 = fsub contract float %6434, %6440
  %6501 = fsub contract float %6500, %6444
  %6502 = fpext float %6501 to double
  %6503 = fmul contract double %6502, 1.000000e-03
  %6504 = fptrunc double %6503 to float
  %6505 = fadd contract float %6437, %6440
  %6506 = fsub contract float %6505, %6448
  %6507 = fpext float %6506 to double
  %6508 = fmul contract double %6507, 1.000000e-03
  %6509 = fptrunc double %6508 to float
  %6510 = fsub contract float %6183, %6193
  %6511 = fsub contract float %6510, %6197
  %6512 = fsub contract float %6511, %6201
  %6513 = fpext float %6512 to double
  %6514 = fmul contract double %6513, 1.000000e-03
  %6515 = fptrunc double %6514 to float
  %6516 = fsub contract float %6193, %6186
  %6517 = fpext float %6516 to double
  %6518 = fmul contract double %6517, 1.000000e-03
  %6519 = fptrunc double %6518 to float
  %6520 = fadd contract float %6197, %6186
  %6521 = fsub contract float %6520, %6189
  %6522 = fpext float %6521 to double
  %6523 = fmul contract double %6522, 1.000000e-03
  %6524 = fptrunc double %6523 to float
  %6525 = fadd contract float %6201, %6189
  %6526 = fpext float %6525 to double
  %6527 = fmul contract double %6526, 1.000000e-03
  %6528 = fptrunc double %6527 to float
  %6529 = getelementptr inbounds float, float addrspace(1)* %2, i64 76
  store float %6454, float addrspace(1)* %6529, align 4, !tbaa !6
  %6530 = getelementptr inbounds float, float addrspace(1)* %2, i64 77
  store float %6463, float addrspace(1)* %6530, align 4, !tbaa !6
  %6531 = getelementptr inbounds float, float addrspace(1)* %2, i64 78
  store float %6471, float addrspace(1)* %6531, align 4, !tbaa !6
  %6532 = getelementptr inbounds float, float addrspace(1)* %2, i64 79
  store float %6475, float addrspace(1)* %6532, align 4, !tbaa !6
  %6533 = getelementptr inbounds float, float addrspace(1)* %2, i64 80
  store float %6480, float addrspace(1)* %6533, align 4, !tbaa !6
  %6534 = getelementptr inbounds float, float addrspace(1)* %2, i64 81
  store float %6484, float addrspace(1)* %6534, align 4, !tbaa !6
  %6535 = getelementptr inbounds float, float addrspace(1)* %2, i64 82
  store float %6489, float addrspace(1)* %6535, align 4, !tbaa !6
  %6536 = getelementptr inbounds float, float addrspace(1)* %2, i64 83
  store float %6494, float addrspace(1)* %6536, align 4, !tbaa !6
  %6537 = getelementptr inbounds float, float addrspace(1)* %2, i64 84
  store float %6499, float addrspace(1)* %6537, align 4, !tbaa !6
  %6538 = getelementptr inbounds float, float addrspace(1)* %2, i64 85
  store float %6504, float addrspace(1)* %6538, align 4, !tbaa !6
  %6539 = getelementptr inbounds float, float addrspace(1)* %2, i64 86
  store float %6509, float addrspace(1)* %6539, align 4, !tbaa !6
  %6540 = getelementptr inbounds float, float addrspace(1)* %2, i64 87
  store float %6515, float addrspace(1)* %6540, align 4, !tbaa !6
  %6541 = getelementptr inbounds float, float addrspace(1)* %2, i64 88
  store float %6519, float addrspace(1)* %6541, align 4, !tbaa !6
  %6542 = getelementptr inbounds float, float addrspace(1)* %2, i64 89
  store float %6524, float addrspace(1)* %6542, align 4, !tbaa !6
  %6543 = getelementptr inbounds float, float addrspace(1)* %2, i64 90
  store float %6528, float addrspace(1)* %6543, align 4, !tbaa !6
  %6544 = fmul contract float %5902, 2.000000e+00
  %6545 = fsub contract float %6434, %6213
  %6546 = fmul contract float %6544, %6545
  %6547 = fadd contract float %6155, %6151
  %6548 = fadd contract float %6161, %6547
  %6549 = fadd contract float %6164, %6548
  %6550 = fadd contract float %6183, %6549
  %6551 = fadd contract float %6186, %6550
  %6552 = fadd contract float %6189, %6551
  %6553 = fmul contract float %6552, 2.000000e+00
  %6554 = fsub contract float %6546, %6553
  %6555 = fpext float %6554 to double
  %6556 = fmul contract double %6555, 1.000000e-03
  %6557 = fptrunc double %6556 to float
  br label %6558

6558:                                             ; preds = %4317, %5988
  %6559 = phi i64 [ 2, %5988 ], [ 41, %4317 ]
  %6560 = phi float [ %6557, %5988 ], [ 0.000000e+00, %4317 ]
  %6561 = getelementptr inbounds float, float addrspace(1)* %2, i64 %6559
  store float %6560, float addrspace(1)* %6561, align 4, !tbaa !6
  br label %6562

6562:                                             ; preds = %6558, %4564, %9
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z8solver_2iiPfS_S_S_S_S_S_S_S_(i32 %0, i32 %1, float addrspace(1)* nocapture %2, float addrspace(1)* nocapture %3, float addrspace(1)* nocapture readonly %4, float addrspace(1)* nocapture readonly %5, float addrspace(1)* nocapture %6, float addrspace(1)* nocapture writeonly %7, float addrspace(1)* nocapture %8, float addrspace(1)* %9, float addrspace(1)* %10) local_unnamed_addr #0 {
  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !5
  %14 = shl nsw i32 %12, 5
  %15 = add nsw i32 %14, %13
  %16 = mul i32 %15, 91
  %17 = sitofp i32 %1 to float
  %18 = fdiv contract float 1.000000e+01, %17
  %19 = icmp sgt i32 %1, 0
  %20 = icmp slt i32 %15, %0
  %21 = select i1 %19, i1 %20, i1 false
  br i1 %21, label %22, label %9230

22:                                               ; preds = %11
  %23 = mul nsw i32 %15, 3
  %24 = mul i32 %15, 1183
  %25 = mul nsw i32 %15, 18
  %26 = add nuw i32 %1, 1
  %27 = mul i32 %16, %26
  %28 = mul nsw i32 %26, %15
  %29 = sext i32 %25 to i64
  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29
  %31 = sext i32 %16 to i64
  %32 = getelementptr inbounds float, float addrspace(1)* %6, i64 %31
  %33 = getelementptr inbounds float, float addrspace(1)* %9, i64 %31
  %34 = sext i32 %24 to i64
  %35 = getelementptr inbounds float, float addrspace(1)* %10, i64 %34
  %36 = sext i32 %23 to i64
  %37 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36
  %38 = getelementptr float, float addrspace(1)* %30, i64 15
  %39 = getelementptr inbounds float, float addrspace(1)* %33, i64 1
  %40 = getelementptr inbounds float, float addrspace(1)* %33, i64 2
  %41 = getelementptr inbounds float, float addrspace(1)* %33, i64 3
  %42 = getelementptr inbounds float, float addrspace(1)* %33, i64 4
  %43 = getelementptr inbounds float, float addrspace(1)* %33, i64 5
  %44 = getelementptr inbounds float, float addrspace(1)* %33, i64 6
  %45 = getelementptr inbounds float, float addrspace(1)* %33, i64 7
  %46 = getelementptr inbounds float, float addrspace(1)* %33, i64 8
  %47 = getelementptr inbounds float, float addrspace(1)* %33, i64 9
  %48 = getelementptr inbounds float, float addrspace(1)* %33, i64 10
  %49 = getelementptr inbounds float, float addrspace(1)* %33, i64 11
  %50 = getelementptr inbounds float, float addrspace(1)* %33, i64 12
  %51 = getelementptr inbounds float, float addrspace(1)* %33, i64 13
  %52 = getelementptr inbounds float, float addrspace(1)* %33, i64 14
  %53 = getelementptr inbounds float, float addrspace(1)* %33, i64 15
  %54 = getelementptr inbounds float, float addrspace(1)* %33, i64 16
  %55 = getelementptr inbounds float, float addrspace(1)* %33, i64 17
  %56 = getelementptr inbounds float, float addrspace(1)* %33, i64 18
  %57 = getelementptr inbounds float, float addrspace(1)* %33, i64 19
  %58 = getelementptr inbounds float, float addrspace(1)* %33, i64 20
  %59 = getelementptr inbounds float, float addrspace(1)* %33, i64 22
  %60 = getelementptr inbounds float, float addrspace(1)* %33, i64 23
  %61 = getelementptr inbounds float, float addrspace(1)* %33, i64 24
  %62 = getelementptr inbounds float, float addrspace(1)* %33, i64 25
  %63 = getelementptr inbounds float, float addrspace(1)* %33, i64 26
  %64 = getelementptr inbounds float, float addrspace(1)* %33, i64 27
  %65 = getelementptr inbounds float, float addrspace(1)* %33, i64 28
  %66 = getelementptr inbounds float, float addrspace(1)* %33, i64 29
  %67 = getelementptr inbounds float, float addrspace(1)* %33, i64 30
  %68 = getelementptr inbounds float, float addrspace(1)* %33, i64 31
  %69 = getelementptr inbounds float, float addrspace(1)* %33, i64 32
  %70 = getelementptr inbounds float, float addrspace(1)* %33, i64 33
  %71 = getelementptr inbounds float, float addrspace(1)* %33, i64 34
  %72 = getelementptr inbounds float, float addrspace(1)* %33, i64 35
  %73 = getelementptr inbounds float, float addrspace(1)* %33, i64 36
  %74 = getelementptr inbounds float, float addrspace(1)* %33, i64 37
  %75 = getelementptr inbounds float, float addrspace(1)* %33, i64 38
  %76 = getelementptr inbounds float, float addrspace(1)* %33, i64 39
  %77 = tail call double @llvm.amdgcn.rsq.f64(double 0x3FF0000004BDA12F)
  %78 = fmul double %77, 0x3FF0000004BDA12F
  %79 = fmul double %77, 5.000000e-01
  %80 = fneg double %79
  %81 = tail call double @llvm.fma.f64(double %80, double %78, double 5.000000e-01)
  %82 = tail call double @llvm.fma.f64(double %79, double %81, double %79)
  %83 = tail call double @llvm.fma.f64(double %78, double %81, double %78)
  %84 = fneg double %83
  %85 = tail call double @llvm.fma.f64(double %84, double %83, double 0x3FF0000004BDA12F)
  %86 = tail call double @llvm.fma.f64(double %85, double %82, double %83)
  %87 = fneg double %86
  %88 = tail call double @llvm.fma.f64(double %87, double %86, double 0x3FF0000004BDA12F)
  %89 = tail call double @llvm.fma.f64(double %88, double %82, double %86)
  %90 = fmul contract double %89, 3.000000e-02
  %91 = fptrunc double %90 to float
  %92 = fmul contract double %89, 9.000000e-01
  %93 = getelementptr inbounds float, float addrspace(1)* %30, i64 1
  %94 = getelementptr inbounds float, float addrspace(1)* %30, i64 2
  %95 = getelementptr inbounds float, float addrspace(1)* %30, i64 3
  %96 = getelementptr inbounds float, float addrspace(1)* %30, i64 4
  %97 = getelementptr inbounds float, float addrspace(1)* %30, i64 16
  %98 = getelementptr inbounds float, float addrspace(1)* %30, i64 17
  %99 = getelementptr inbounds float, float addrspace(1)* %33, i64 46
  %100 = getelementptr inbounds float, float addrspace(1)* %33, i64 47
  %101 = getelementptr inbounds float, float addrspace(1)* %33, i64 48
  %102 = getelementptr inbounds float, float addrspace(1)* %33, i64 49
  %103 = getelementptr inbounds float, float addrspace(1)* %33, i64 50
  %104 = getelementptr inbounds float, float addrspace(1)* %33, i64 51
  %105 = getelementptr inbounds float, float addrspace(1)* %33, i64 52
  %106 = getelementptr inbounds float, float addrspace(1)* %33, i64 53
  %107 = getelementptr inbounds float, float addrspace(1)* %33, i64 54
  %108 = getelementptr inbounds float, float addrspace(1)* %33, i64 55
  %109 = getelementptr inbounds float, float addrspace(1)* %33, i64 56
  %110 = getelementptr inbounds float, float addrspace(1)* %33, i64 57
  %111 = getelementptr inbounds float, float addrspace(1)* %33, i64 58
  %112 = getelementptr inbounds float, float addrspace(1)* %33, i64 59
  %113 = getelementptr inbounds float, float addrspace(1)* %33, i64 60
  %114 = getelementptr inbounds float, float addrspace(1)* %30, i64 6
  %115 = getelementptr inbounds float, float addrspace(1)* %30, i64 7
  %116 = getelementptr inbounds float, float addrspace(1)* %30, i64 8
  %117 = getelementptr inbounds float, float addrspace(1)* %30, i64 9
  %118 = getelementptr inbounds float, float addrspace(1)* %33, i64 61
  %119 = getelementptr inbounds float, float addrspace(1)* %33, i64 62
  %120 = getelementptr inbounds float, float addrspace(1)* %33, i64 63
  %121 = getelementptr inbounds float, float addrspace(1)* %33, i64 64
  %122 = getelementptr inbounds float, float addrspace(1)* %33, i64 65
  %123 = getelementptr inbounds float, float addrspace(1)* %33, i64 66
  %124 = getelementptr inbounds float, float addrspace(1)* %33, i64 67
  %125 = getelementptr inbounds float, float addrspace(1)* %33, i64 68
  %126 = getelementptr inbounds float, float addrspace(1)* %33, i64 69
  %127 = getelementptr inbounds float, float addrspace(1)* %33, i64 70
  %128 = getelementptr inbounds float, float addrspace(1)* %33, i64 71
  %129 = getelementptr inbounds float, float addrspace(1)* %33, i64 72
  %130 = getelementptr inbounds float, float addrspace(1)* %33, i64 73
  %131 = getelementptr inbounds float, float addrspace(1)* %33, i64 74
  %132 = getelementptr inbounds float, float addrspace(1)* %33, i64 75
  %133 = getelementptr inbounds float, float addrspace(1)* %30, i64 11
  %134 = getelementptr inbounds float, float addrspace(1)* %30, i64 12
  %135 = getelementptr inbounds float, float addrspace(1)* %30, i64 13
  %136 = getelementptr inbounds float, float addrspace(1)* %30, i64 14
  %137 = getelementptr inbounds float, float addrspace(1)* %33, i64 76
  %138 = getelementptr inbounds float, float addrspace(1)* %33, i64 77
  %139 = getelementptr inbounds float, float addrspace(1)* %33, i64 78
  %140 = getelementptr inbounds float, float addrspace(1)* %33, i64 79
  %141 = getelementptr inbounds float, float addrspace(1)* %33, i64 80
  %142 = getelementptr inbounds float, float addrspace(1)* %33, i64 81
  %143 = getelementptr inbounds float, float addrspace(1)* %33, i64 82
  %144 = getelementptr inbounds float, float addrspace(1)* %33, i64 83
  %145 = getelementptr inbounds float, float addrspace(1)* %33, i64 84
  %146 = getelementptr inbounds float, float addrspace(1)* %33, i64 85
  %147 = getelementptr inbounds float, float addrspace(1)* %33, i64 86
  %148 = getelementptr inbounds float, float addrspace(1)* %33, i64 87
  %149 = getelementptr inbounds float, float addrspace(1)* %33, i64 88
  %150 = getelementptr inbounds float, float addrspace(1)* %33, i64 89
  %151 = getelementptr inbounds float, float addrspace(1)* %33, i64 90
  %152 = getelementptr inbounds float, float addrspace(1)* %37, i64 1
  %153 = getelementptr inbounds float, float addrspace(1)* %37, i64 2
  %154 = fpext float %17 to double
  br label %155

155:                                              ; preds = %9221, %22
  %156 = phi i32 [ 1, %22 ], [ %9227, %9221 ]
  %157 = mul i32 %156, 91
  %158 = add i32 %157, %27
  %159 = add nsw i32 %158, -91
  %160 = sext i32 %159 to i64
  %161 = sext i32 %158 to i64
  %162 = add nsw i32 %156, %28
  %163 = sext i32 %162 to i64
  %164 = sitofp i32 %156 to float
  %165 = getelementptr inbounds float, float addrspace(1)* %2, i64 %163
  store float %164, float addrspace(1)* %165, align 4, !tbaa !6
  %166 = getelementptr inbounds float, float addrspace(1)* %3, i64 %160
  %167 = getelementptr inbounds float, float addrspace(1)* %3, i64 %161
  br label %168

168:                                              ; preds = %155, %9217
  %169 = phi float [ %164, %155 ], [ %9204, %9217 ]
  %170 = phi i32 [ 0, %155 ], [ %9219, %9217 ]
  %171 = phi float [ 1.000000e+00, %155 ], [ %9218, %9217 ]
  %172 = fmul contract float %171, 0x3FB2F684C0000000
  %173 = fadd contract float %171, %169
  %174 = fmul contract float %171, 0x3FD5555560000000
  %175 = fadd contract float %174, %169
  %176 = fmul contract float %171, 0x3FE5555560000000
  %177 = fadd contract float %176, %169
  %178 = fmul contract float %171, 0x3FC5555560000000
  %179 = fadd contract float %178, %169
  %180 = fmul contract float %171, 0x3FEAAAAAA0000000
  %181 = fadd contract float %180, %169
  %182 = fmul contract float %171, 5.000000e-01
  %183 = fadd contract float %182, %169
  %184 = fmul contract float %171, 0x3FDAAAAAA0000000
  %185 = fadd contract float %184, %169
  %186 = fmul contract float %171, 0x3FBC71C720000000
  %187 = fadd contract float %186, %169
  %188 = fadd contract float %172, %169
  br label %189

189:                                              ; preds = %8443, %168
  %190 = phi i32 [ 0, %168 ], [ %8444, %8443 ]
  %191 = phi float [ undef, %168 ], [ %1839, %8443 ]
  switch i32 %190, label %1838 [
    i32 0, label %192
    i32 1, label %200
    i32 2, label %320
    i32 3, label %435
    i32 4, label %550
    i32 5, label %707
    i32 6, label %864
    i32 7, label %980
    i32 8, label %1096
    i32 9, label %1260
    i32 10, label %1448
    i32 11, label %1556
    i32 12, label %1720
  ]

192:                                              ; preds = %189, %192
  %193 = phi i32 [ %198, %192 ], [ %190, %189 ]
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds float, float addrspace(1)* %166, i64 %194
  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !6
  %197 = getelementptr inbounds float, float addrspace(1)* %33, i64 %194
  store float %196, float addrspace(1)* %197, align 4, !tbaa !6
  %198 = add nuw nsw i32 %193, 1
  %199 = icmp eq i32 %198, 91
  br i1 %199, label %1838, label %192, !llvm.loop !11

200:                                              ; preds = %189, %200
  %201 = phi i32 [ %318, %200 ], [ 0, %189 ]
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds float, float addrspace(1)* %166, i64 %202
  %204 = load float, float addrspace(1)* %203, align 4, !tbaa !6
  %205 = getelementptr inbounds float, float addrspace(1)* %35, i64 %202
  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !6
  %207 = fmul contract float %172, %206
  %208 = fadd contract float %204, %207
  %209 = getelementptr inbounds float, float addrspace(1)* %33, i64 %202
  store float %208, float addrspace(1)* %209, align 4, !tbaa !6
  %210 = add nuw nsw i32 %201, 1
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds float, float addrspace(1)* %166, i64 %211
  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !6
  %214 = getelementptr inbounds float, float addrspace(1)* %35, i64 %211
  %215 = load float, float addrspace(1)* %214, align 4, !tbaa !6
  %216 = fmul contract float %172, %215
  %217 = fadd contract float %213, %216
  %218 = getelementptr inbounds float, float addrspace(1)* %33, i64 %211
  store float %217, float addrspace(1)* %218, align 4, !tbaa !6
  %219 = add nuw nsw i32 %201, 2
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds float, float addrspace(1)* %166, i64 %220
  %222 = load float, float addrspace(1)* %221, align 4, !tbaa !6
  %223 = getelementptr inbounds float, float addrspace(1)* %35, i64 %220
  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !6
  %225 = fmul contract float %172, %224
  %226 = fadd contract float %222, %225
  %227 = getelementptr inbounds float, float addrspace(1)* %33, i64 %220
  store float %226, float addrspace(1)* %227, align 4, !tbaa !6
  %228 = add nuw nsw i32 %201, 3
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds float, float addrspace(1)* %166, i64 %229
  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !6
  %232 = getelementptr inbounds float, float addrspace(1)* %35, i64 %229
  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !6
  %234 = fmul contract float %172, %233
  %235 = fadd contract float %231, %234
  %236 = getelementptr inbounds float, float addrspace(1)* %33, i64 %229
  store float %235, float addrspace(1)* %236, align 4, !tbaa !6
  %237 = add nuw nsw i32 %201, 4
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds float, float addrspace(1)* %166, i64 %238
  %240 = load float, float addrspace(1)* %239, align 4, !tbaa !6
  %241 = getelementptr inbounds float, float addrspace(1)* %35, i64 %238
  %242 = load float, float addrspace(1)* %241, align 4, !tbaa !6
  %243 = fmul contract float %172, %242
  %244 = fadd contract float %240, %243
  %245 = getelementptr inbounds float, float addrspace(1)* %33, i64 %238
  store float %244, float addrspace(1)* %245, align 4, !tbaa !6
  %246 = add nuw nsw i32 %201, 5
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds float, float addrspace(1)* %166, i64 %247
  %249 = load float, float addrspace(1)* %248, align 4, !tbaa !6
  %250 = getelementptr inbounds float, float addrspace(1)* %35, i64 %247
  %251 = load float, float addrspace(1)* %250, align 4, !tbaa !6
  %252 = fmul contract float %172, %251
  %253 = fadd contract float %249, %252
  %254 = getelementptr inbounds float, float addrspace(1)* %33, i64 %247
  store float %253, float addrspace(1)* %254, align 4, !tbaa !6
  %255 = add nuw nsw i32 %201, 6
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds float, float addrspace(1)* %166, i64 %256
  %258 = load float, float addrspace(1)* %257, align 4, !tbaa !6
  %259 = getelementptr inbounds float, float addrspace(1)* %35, i64 %256
  %260 = load float, float addrspace(1)* %259, align 4, !tbaa !6
  %261 = fmul contract float %172, %260
  %262 = fadd contract float %258, %261
  %263 = getelementptr inbounds float, float addrspace(1)* %33, i64 %256
  store float %262, float addrspace(1)* %263, align 4, !tbaa !6
  %264 = add nuw nsw i32 %201, 7
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds float, float addrspace(1)* %166, i64 %265
  %267 = load float, float addrspace(1)* %266, align 4, !tbaa !6
  %268 = getelementptr inbounds float, float addrspace(1)* %35, i64 %265
  %269 = load float, float addrspace(1)* %268, align 4, !tbaa !6
  %270 = fmul contract float %172, %269
  %271 = fadd contract float %267, %270
  %272 = getelementptr inbounds float, float addrspace(1)* %33, i64 %265
  store float %271, float addrspace(1)* %272, align 4, !tbaa !6
  %273 = add nuw nsw i32 %201, 8
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds float, float addrspace(1)* %166, i64 %274
  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !6
  %277 = getelementptr inbounds float, float addrspace(1)* %35, i64 %274
  %278 = load float, float addrspace(1)* %277, align 4, !tbaa !6
  %279 = fmul contract float %172, %278
  %280 = fadd contract float %276, %279
  %281 = getelementptr inbounds float, float addrspace(1)* %33, i64 %274
  store float %280, float addrspace(1)* %281, align 4, !tbaa !6
  %282 = add nuw nsw i32 %201, 9
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds float, float addrspace(1)* %166, i64 %283
  %285 = load float, float addrspace(1)* %284, align 4, !tbaa !6
  %286 = getelementptr inbounds float, float addrspace(1)* %35, i64 %283
  %287 = load float, float addrspace(1)* %286, align 4, !tbaa !6
  %288 = fmul contract float %172, %287
  %289 = fadd contract float %285, %288
  %290 = getelementptr inbounds float, float addrspace(1)* %33, i64 %283
  store float %289, float addrspace(1)* %290, align 4, !tbaa !6
  %291 = add nuw nsw i32 %201, 10
  %292 = zext i32 %291 to i64
  %293 = getelementptr inbounds float, float addrspace(1)* %166, i64 %292
  %294 = load float, float addrspace(1)* %293, align 4, !tbaa !6
  %295 = getelementptr inbounds float, float addrspace(1)* %35, i64 %292
  %296 = load float, float addrspace(1)* %295, align 4, !tbaa !6
  %297 = fmul contract float %172, %296
  %298 = fadd contract float %294, %297
  %299 = getelementptr inbounds float, float addrspace(1)* %33, i64 %292
  store float %298, float addrspace(1)* %299, align 4, !tbaa !6
  %300 = add nuw nsw i32 %201, 11
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds float, float addrspace(1)* %166, i64 %301
  %303 = load float, float addrspace(1)* %302, align 4, !tbaa !6
  %304 = getelementptr inbounds float, float addrspace(1)* %35, i64 %301
  %305 = load float, float addrspace(1)* %304, align 4, !tbaa !6
  %306 = fmul contract float %172, %305
  %307 = fadd contract float %303, %306
  %308 = getelementptr inbounds float, float addrspace(1)* %33, i64 %301
  store float %307, float addrspace(1)* %308, align 4, !tbaa !6
  %309 = add nuw nsw i32 %201, 12
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds float, float addrspace(1)* %166, i64 %310
  %312 = load float, float addrspace(1)* %311, align 4, !tbaa !6
  %313 = getelementptr inbounds float, float addrspace(1)* %35, i64 %310
  %314 = load float, float addrspace(1)* %313, align 4, !tbaa !6
  %315 = fmul contract float %172, %314
  %316 = fadd contract float %312, %315
  %317 = getelementptr inbounds float, float addrspace(1)* %33, i64 %310
  store float %316, float addrspace(1)* %317, align 4, !tbaa !6
  %318 = add nuw nsw i32 %201, 13
  %319 = icmp eq i32 %318, 91
  br i1 %319, label %1838, label %200, !llvm.loop !13

320:                                              ; preds = %189, %320
  %321 = phi i32 [ %433, %320 ], [ 0, %189 ]
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds float, float addrspace(1)* %166, i64 %322
  %324 = load float, float addrspace(1)* %323, align 4, !tbaa !6
  %325 = getelementptr inbounds float, float addrspace(1)* %35, i64 %322
  %326 = load float, float addrspace(1)* %325, align 4, !tbaa !6
  %327 = fmul contract float %326, 0x3F9C71C720000000
  %328 = add nuw nsw i32 %321, 91
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds float, float addrspace(1)* %35, i64 %329
  %331 = load float, float addrspace(1)* %330, align 4, !tbaa !6
  %332 = fmul contract float %331, 0x3FB5555560000000
  %333 = fadd contract float %327, %332
  %334 = fmul contract float %171, %333
  %335 = fadd contract float %324, %334
  %336 = getelementptr inbounds float, float addrspace(1)* %33, i64 %322
  store float %335, float addrspace(1)* %336, align 4, !tbaa !6
  %337 = add nuw nsw i32 %321, 1
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds float, float addrspace(1)* %166, i64 %338
  %340 = load float, float addrspace(1)* %339, align 4, !tbaa !6
  %341 = getelementptr inbounds float, float addrspace(1)* %35, i64 %338
  %342 = load float, float addrspace(1)* %341, align 4, !tbaa !6
  %343 = fmul contract float %342, 0x3F9C71C720000000
  %344 = add nuw nsw i32 %321, 92
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds float, float addrspace(1)* %35, i64 %345
  %347 = load float, float addrspace(1)* %346, align 4, !tbaa !6
  %348 = fmul contract float %347, 0x3FB5555560000000
  %349 = fadd contract float %343, %348
  %350 = fmul contract float %171, %349
  %351 = fadd contract float %340, %350
  %352 = getelementptr inbounds float, float addrspace(1)* %33, i64 %338
  store float %351, float addrspace(1)* %352, align 4, !tbaa !6
  %353 = add nuw nsw i32 %321, 2
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds float, float addrspace(1)* %166, i64 %354
  %356 = load float, float addrspace(1)* %355, align 4, !tbaa !6
  %357 = getelementptr inbounds float, float addrspace(1)* %35, i64 %354
  %358 = load float, float addrspace(1)* %357, align 4, !tbaa !6
  %359 = fmul contract float %358, 0x3F9C71C720000000
  %360 = add nuw nsw i32 %321, 93
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds float, float addrspace(1)* %35, i64 %361
  %363 = load float, float addrspace(1)* %362, align 4, !tbaa !6
  %364 = fmul contract float %363, 0x3FB5555560000000
  %365 = fadd contract float %359, %364
  %366 = fmul contract float %171, %365
  %367 = fadd contract float %356, %366
  %368 = getelementptr inbounds float, float addrspace(1)* %33, i64 %354
  store float %367, float addrspace(1)* %368, align 4, !tbaa !6
  %369 = add nuw nsw i32 %321, 3
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds float, float addrspace(1)* %166, i64 %370
  %372 = load float, float addrspace(1)* %371, align 4, !tbaa !6
  %373 = getelementptr inbounds float, float addrspace(1)* %35, i64 %370
  %374 = load float, float addrspace(1)* %373, align 4, !tbaa !6
  %375 = fmul contract float %374, 0x3F9C71C720000000
  %376 = add nuw nsw i32 %321, 94
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds float, float addrspace(1)* %35, i64 %377
  %379 = load float, float addrspace(1)* %378, align 4, !tbaa !6
  %380 = fmul contract float %379, 0x3FB5555560000000
  %381 = fadd contract float %375, %380
  %382 = fmul contract float %171, %381
  %383 = fadd contract float %372, %382
  %384 = getelementptr inbounds float, float addrspace(1)* %33, i64 %370
  store float %383, float addrspace(1)* %384, align 4, !tbaa !6
  %385 = add nuw nsw i32 %321, 4
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds float, float addrspace(1)* %166, i64 %386
  %388 = load float, float addrspace(1)* %387, align 4, !tbaa !6
  %389 = getelementptr inbounds float, float addrspace(1)* %35, i64 %386
  %390 = load float, float addrspace(1)* %389, align 4, !tbaa !6
  %391 = fmul contract float %390, 0x3F9C71C720000000
  %392 = add nuw nsw i32 %321, 95
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds float, float addrspace(1)* %35, i64 %393
  %395 = load float, float addrspace(1)* %394, align 4, !tbaa !6
  %396 = fmul contract float %395, 0x3FB5555560000000
  %397 = fadd contract float %391, %396
  %398 = fmul contract float %171, %397
  %399 = fadd contract float %388, %398
  %400 = getelementptr inbounds float, float addrspace(1)* %33, i64 %386
  store float %399, float addrspace(1)* %400, align 4, !tbaa !6
  %401 = add nuw nsw i32 %321, 5
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds float, float addrspace(1)* %166, i64 %402
  %404 = load float, float addrspace(1)* %403, align 4, !tbaa !6
  %405 = getelementptr inbounds float, float addrspace(1)* %35, i64 %402
  %406 = load float, float addrspace(1)* %405, align 4, !tbaa !6
  %407 = fmul contract float %406, 0x3F9C71C720000000
  %408 = add nuw nsw i32 %321, 96
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds float, float addrspace(1)* %35, i64 %409
  %411 = load float, float addrspace(1)* %410, align 4, !tbaa !6
  %412 = fmul contract float %411, 0x3FB5555560000000
  %413 = fadd contract float %407, %412
  %414 = fmul contract float %171, %413
  %415 = fadd contract float %404, %414
  %416 = getelementptr inbounds float, float addrspace(1)* %33, i64 %402
  store float %415, float addrspace(1)* %416, align 4, !tbaa !6
  %417 = add nuw nsw i32 %321, 6
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds float, float addrspace(1)* %166, i64 %418
  %420 = load float, float addrspace(1)* %419, align 4, !tbaa !6
  %421 = getelementptr inbounds float, float addrspace(1)* %35, i64 %418
  %422 = load float, float addrspace(1)* %421, align 4, !tbaa !6
  %423 = fmul contract float %422, 0x3F9C71C720000000
  %424 = add nuw nsw i32 %321, 97
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds float, float addrspace(1)* %35, i64 %425
  %427 = load float, float addrspace(1)* %426, align 4, !tbaa !6
  %428 = fmul contract float %427, 0x3FB5555560000000
  %429 = fadd contract float %423, %428
  %430 = fmul contract float %171, %429
  %431 = fadd contract float %420, %430
  %432 = getelementptr inbounds float, float addrspace(1)* %33, i64 %418
  store float %431, float addrspace(1)* %432, align 4, !tbaa !6
  %433 = add nuw nsw i32 %321, 7
  %434 = icmp eq i32 %433, 91
  br i1 %434, label %1838, label %320, !llvm.loop !14

435:                                              ; preds = %189, %435
  %436 = phi i32 [ %548, %435 ], [ 0, %189 ]
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds float, float addrspace(1)* %166, i64 %437
  %439 = load float, float addrspace(1)* %438, align 4, !tbaa !6
  %440 = getelementptr inbounds float, float addrspace(1)* %35, i64 %437
  %441 = load float, float addrspace(1)* %440, align 4, !tbaa !6
  %442 = fmul contract float %441, 0x3FA5555560000000
  %443 = add nuw nsw i32 %436, 182
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds float, float addrspace(1)* %35, i64 %444
  %446 = load float, float addrspace(1)* %445, align 4, !tbaa !6
  %447 = fmul contract float %446, 1.250000e-01
  %448 = fadd contract float %442, %447
  %449 = fmul contract float %171, %448
  %450 = fadd contract float %439, %449
  %451 = getelementptr inbounds float, float addrspace(1)* %33, i64 %437
  store float %450, float addrspace(1)* %451, align 4, !tbaa !6
  %452 = add nuw nsw i32 %436, 1
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds float, float addrspace(1)* %166, i64 %453
  %455 = load float, float addrspace(1)* %454, align 4, !tbaa !6
  %456 = getelementptr inbounds float, float addrspace(1)* %35, i64 %453
  %457 = load float, float addrspace(1)* %456, align 4, !tbaa !6
  %458 = fmul contract float %457, 0x3FA5555560000000
  %459 = add nuw nsw i32 %436, 183
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds float, float addrspace(1)* %35, i64 %460
  %462 = load float, float addrspace(1)* %461, align 4, !tbaa !6
  %463 = fmul contract float %462, 1.250000e-01
  %464 = fadd contract float %458, %463
  %465 = fmul contract float %171, %464
  %466 = fadd contract float %455, %465
  %467 = getelementptr inbounds float, float addrspace(1)* %33, i64 %453
  store float %466, float addrspace(1)* %467, align 4, !tbaa !6
  %468 = add nuw nsw i32 %436, 2
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds float, float addrspace(1)* %166, i64 %469
  %471 = load float, float addrspace(1)* %470, align 4, !tbaa !6
  %472 = getelementptr inbounds float, float addrspace(1)* %35, i64 %469
  %473 = load float, float addrspace(1)* %472, align 4, !tbaa !6
  %474 = fmul contract float %473, 0x3FA5555560000000
  %475 = add nuw nsw i32 %436, 184
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds float, float addrspace(1)* %35, i64 %476
  %478 = load float, float addrspace(1)* %477, align 4, !tbaa !6
  %479 = fmul contract float %478, 1.250000e-01
  %480 = fadd contract float %474, %479
  %481 = fmul contract float %171, %480
  %482 = fadd contract float %471, %481
  %483 = getelementptr inbounds float, float addrspace(1)* %33, i64 %469
  store float %482, float addrspace(1)* %483, align 4, !tbaa !6
  %484 = add nuw nsw i32 %436, 3
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds float, float addrspace(1)* %166, i64 %485
  %487 = load float, float addrspace(1)* %486, align 4, !tbaa !6
  %488 = getelementptr inbounds float, float addrspace(1)* %35, i64 %485
  %489 = load float, float addrspace(1)* %488, align 4, !tbaa !6
  %490 = fmul contract float %489, 0x3FA5555560000000
  %491 = add nuw nsw i32 %436, 185
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds float, float addrspace(1)* %35, i64 %492
  %494 = load float, float addrspace(1)* %493, align 4, !tbaa !6
  %495 = fmul contract float %494, 1.250000e-01
  %496 = fadd contract float %490, %495
  %497 = fmul contract float %171, %496
  %498 = fadd contract float %487, %497
  %499 = getelementptr inbounds float, float addrspace(1)* %33, i64 %485
  store float %498, float addrspace(1)* %499, align 4, !tbaa !6
  %500 = add nuw nsw i32 %436, 4
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds float, float addrspace(1)* %166, i64 %501
  %503 = load float, float addrspace(1)* %502, align 4, !tbaa !6
  %504 = getelementptr inbounds float, float addrspace(1)* %35, i64 %501
  %505 = load float, float addrspace(1)* %504, align 4, !tbaa !6
  %506 = fmul contract float %505, 0x3FA5555560000000
  %507 = add nuw nsw i32 %436, 186
  %508 = zext i32 %507 to i64
  %509 = getelementptr inbounds float, float addrspace(1)* %35, i64 %508
  %510 = load float, float addrspace(1)* %509, align 4, !tbaa !6
  %511 = fmul contract float %510, 1.250000e-01
  %512 = fadd contract float %506, %511
  %513 = fmul contract float %171, %512
  %514 = fadd contract float %503, %513
  %515 = getelementptr inbounds float, float addrspace(1)* %33, i64 %501
  store float %514, float addrspace(1)* %515, align 4, !tbaa !6
  %516 = add nuw nsw i32 %436, 5
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds float, float addrspace(1)* %166, i64 %517
  %519 = load float, float addrspace(1)* %518, align 4, !tbaa !6
  %520 = getelementptr inbounds float, float addrspace(1)* %35, i64 %517
  %521 = load float, float addrspace(1)* %520, align 4, !tbaa !6
  %522 = fmul contract float %521, 0x3FA5555560000000
  %523 = add nuw nsw i32 %436, 187
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds float, float addrspace(1)* %35, i64 %524
  %526 = load float, float addrspace(1)* %525, align 4, !tbaa !6
  %527 = fmul contract float %526, 1.250000e-01
  %528 = fadd contract float %522, %527
  %529 = fmul contract float %171, %528
  %530 = fadd contract float %519, %529
  %531 = getelementptr inbounds float, float addrspace(1)* %33, i64 %517
  store float %530, float addrspace(1)* %531, align 4, !tbaa !6
  %532 = add nuw nsw i32 %436, 6
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds float, float addrspace(1)* %166, i64 %533
  %535 = load float, float addrspace(1)* %534, align 4, !tbaa !6
  %536 = getelementptr inbounds float, float addrspace(1)* %35, i64 %533
  %537 = load float, float addrspace(1)* %536, align 4, !tbaa !6
  %538 = fmul contract float %537, 0x3FA5555560000000
  %539 = add nuw nsw i32 %436, 188
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds float, float addrspace(1)* %35, i64 %540
  %542 = load float, float addrspace(1)* %541, align 4, !tbaa !6
  %543 = fmul contract float %542, 1.250000e-01
  %544 = fadd contract float %538, %543
  %545 = fmul contract float %171, %544
  %546 = fadd contract float %535, %545
  %547 = getelementptr inbounds float, float addrspace(1)* %33, i64 %533
  store float %546, float addrspace(1)* %547, align 4, !tbaa !6
  %548 = add nuw nsw i32 %436, 7
  %549 = icmp eq i32 %548, 91
  br i1 %549, label %1838, label %435, !llvm.loop !15

550:                                              ; preds = %189, %550
  %551 = phi i32 [ %705, %550 ], [ 0, %189 ]
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds float, float addrspace(1)* %166, i64 %552
  %554 = load float, float addrspace(1)* %553, align 4, !tbaa !6
  %555 = getelementptr inbounds float, float addrspace(1)* %35, i64 %552
  %556 = load float, float addrspace(1)* %555, align 4, !tbaa !6
  %557 = fmul contract float %556, 0x3FDAAAAAA0000000
  %558 = add nuw nsw i32 %551, 182
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds float, float addrspace(1)* %35, i64 %559
  %561 = load float, float addrspace(1)* %560, align 4, !tbaa !6
  %562 = fmul contract float %561, 1.562500e+00
  %563 = fsub contract float %557, %562
  %564 = add nuw nsw i32 %551, 273
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds float, float addrspace(1)* %35, i64 %565
  %567 = load float, float addrspace(1)* %566, align 4, !tbaa !6
  %568 = fmul contract float %567, 1.562500e+00
  %569 = fadd contract float %563, %568
  %570 = fmul contract float %171, %569
  %571 = fadd contract float %554, %570
  %572 = getelementptr inbounds float, float addrspace(1)* %33, i64 %552
  store float %571, float addrspace(1)* %572, align 4, !tbaa !6
  %573 = add nuw nsw i32 %551, 1
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds float, float addrspace(1)* %166, i64 %574
  %576 = load float, float addrspace(1)* %575, align 4, !tbaa !6
  %577 = getelementptr inbounds float, float addrspace(1)* %35, i64 %574
  %578 = load float, float addrspace(1)* %577, align 4, !tbaa !6
  %579 = fmul contract float %578, 0x3FDAAAAAA0000000
  %580 = add nuw nsw i32 %551, 183
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds float, float addrspace(1)* %35, i64 %581
  %583 = load float, float addrspace(1)* %582, align 4, !tbaa !6
  %584 = fmul contract float %583, 1.562500e+00
  %585 = fsub contract float %579, %584
  %586 = add nuw nsw i32 %551, 274
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds float, float addrspace(1)* %35, i64 %587
  %589 = load float, float addrspace(1)* %588, align 4, !tbaa !6
  %590 = fmul contract float %589, 1.562500e+00
  %591 = fadd contract float %585, %590
  %592 = fmul contract float %171, %591
  %593 = fadd contract float %576, %592
  %594 = getelementptr inbounds float, float addrspace(1)* %33, i64 %574
  store float %593, float addrspace(1)* %594, align 4, !tbaa !6
  %595 = add nuw nsw i32 %551, 2
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds float, float addrspace(1)* %166, i64 %596
  %598 = load float, float addrspace(1)* %597, align 4, !tbaa !6
  %599 = getelementptr inbounds float, float addrspace(1)* %35, i64 %596
  %600 = load float, float addrspace(1)* %599, align 4, !tbaa !6
  %601 = fmul contract float %600, 0x3FDAAAAAA0000000
  %602 = add nuw nsw i32 %551, 184
  %603 = zext i32 %602 to i64
  %604 = getelementptr inbounds float, float addrspace(1)* %35, i64 %603
  %605 = load float, float addrspace(1)* %604, align 4, !tbaa !6
  %606 = fmul contract float %605, 1.562500e+00
  %607 = fsub contract float %601, %606
  %608 = add nuw nsw i32 %551, 275
  %609 = zext i32 %608 to i64
  %610 = getelementptr inbounds float, float addrspace(1)* %35, i64 %609
  %611 = load float, float addrspace(1)* %610, align 4, !tbaa !6
  %612 = fmul contract float %611, 1.562500e+00
  %613 = fadd contract float %607, %612
  %614 = fmul contract float %171, %613
  %615 = fadd contract float %598, %614
  %616 = getelementptr inbounds float, float addrspace(1)* %33, i64 %596
  store float %615, float addrspace(1)* %616, align 4, !tbaa !6
  %617 = add nuw nsw i32 %551, 3
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds float, float addrspace(1)* %166, i64 %618
  %620 = load float, float addrspace(1)* %619, align 4, !tbaa !6
  %621 = getelementptr inbounds float, float addrspace(1)* %35, i64 %618
  %622 = load float, float addrspace(1)* %621, align 4, !tbaa !6
  %623 = fmul contract float %622, 0x3FDAAAAAA0000000
  %624 = add nuw nsw i32 %551, 185
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds float, float addrspace(1)* %35, i64 %625
  %627 = load float, float addrspace(1)* %626, align 4, !tbaa !6
  %628 = fmul contract float %627, 1.562500e+00
  %629 = fsub contract float %623, %628
  %630 = add nuw nsw i32 %551, 276
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds float, float addrspace(1)* %35, i64 %631
  %633 = load float, float addrspace(1)* %632, align 4, !tbaa !6
  %634 = fmul contract float %633, 1.562500e+00
  %635 = fadd contract float %629, %634
  %636 = fmul contract float %171, %635
  %637 = fadd contract float %620, %636
  %638 = getelementptr inbounds float, float addrspace(1)* %33, i64 %618
  store float %637, float addrspace(1)* %638, align 4, !tbaa !6
  %639 = add nuw nsw i32 %551, 4
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds float, float addrspace(1)* %166, i64 %640
  %642 = load float, float addrspace(1)* %641, align 4, !tbaa !6
  %643 = getelementptr inbounds float, float addrspace(1)* %35, i64 %640
  %644 = load float, float addrspace(1)* %643, align 4, !tbaa !6
  %645 = fmul contract float %644, 0x3FDAAAAAA0000000
  %646 = add nuw nsw i32 %551, 186
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds float, float addrspace(1)* %35, i64 %647
  %649 = load float, float addrspace(1)* %648, align 4, !tbaa !6
  %650 = fmul contract float %649, 1.562500e+00
  %651 = fsub contract float %645, %650
  %652 = add nuw nsw i32 %551, 277
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds float, float addrspace(1)* %35, i64 %653
  %655 = load float, float addrspace(1)* %654, align 4, !tbaa !6
  %656 = fmul contract float %655, 1.562500e+00
  %657 = fadd contract float %651, %656
  %658 = fmul contract float %171, %657
  %659 = fadd contract float %642, %658
  %660 = getelementptr inbounds float, float addrspace(1)* %33, i64 %640
  store float %659, float addrspace(1)* %660, align 4, !tbaa !6
  %661 = add nuw nsw i32 %551, 5
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds float, float addrspace(1)* %166, i64 %662
  %664 = load float, float addrspace(1)* %663, align 4, !tbaa !6
  %665 = getelementptr inbounds float, float addrspace(1)* %35, i64 %662
  %666 = load float, float addrspace(1)* %665, align 4, !tbaa !6
  %667 = fmul contract float %666, 0x3FDAAAAAA0000000
  %668 = add nuw nsw i32 %551, 187
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds float, float addrspace(1)* %35, i64 %669
  %671 = load float, float addrspace(1)* %670, align 4, !tbaa !6
  %672 = fmul contract float %671, 1.562500e+00
  %673 = fsub contract float %667, %672
  %674 = add nuw nsw i32 %551, 278
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds float, float addrspace(1)* %35, i64 %675
  %677 = load float, float addrspace(1)* %676, align 4, !tbaa !6
  %678 = fmul contract float %677, 1.562500e+00
  %679 = fadd contract float %673, %678
  %680 = fmul contract float %171, %679
  %681 = fadd contract float %664, %680
  %682 = getelementptr inbounds float, float addrspace(1)* %33, i64 %662
  store float %681, float addrspace(1)* %682, align 4, !tbaa !6
  %683 = add nuw nsw i32 %551, 6
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds float, float addrspace(1)* %166, i64 %684
  %686 = load float, float addrspace(1)* %685, align 4, !tbaa !6
  %687 = getelementptr inbounds float, float addrspace(1)* %35, i64 %684
  %688 = load float, float addrspace(1)* %687, align 4, !tbaa !6
  %689 = fmul contract float %688, 0x3FDAAAAAA0000000
  %690 = add nuw nsw i32 %551, 188
  %691 = zext i32 %690 to i64
  %692 = getelementptr inbounds float, float addrspace(1)* %35, i64 %691
  %693 = load float, float addrspace(1)* %692, align 4, !tbaa !6
  %694 = fmul contract float %693, 1.562500e+00
  %695 = fsub contract float %689, %694
  %696 = add nuw nsw i32 %551, 279
  %697 = zext i32 %696 to i64
  %698 = getelementptr inbounds float, float addrspace(1)* %35, i64 %697
  %699 = load float, float addrspace(1)* %698, align 4, !tbaa !6
  %700 = fmul contract float %699, 1.562500e+00
  %701 = fadd contract float %695, %700
  %702 = fmul contract float %171, %701
  %703 = fadd contract float %686, %702
  %704 = getelementptr inbounds float, float addrspace(1)* %33, i64 %684
  store float %703, float addrspace(1)* %704, align 4, !tbaa !6
  %705 = add nuw nsw i32 %551, 7
  %706 = icmp eq i32 %705, 91
  br i1 %706, label %1838, label %550, !llvm.loop !16

707:                                              ; preds = %189, %707
  %708 = phi i32 [ %862, %707 ], [ 0, %189 ]
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds float, float addrspace(1)* %166, i64 %709
  %711 = load float, float addrspace(1)* %710, align 4, !tbaa !6
  %712 = getelementptr inbounds float, float addrspace(1)* %35, i64 %709
  %713 = load float, float addrspace(1)* %712, align 4, !tbaa !6
  %714 = fmul contract float %713, 0x3FA99999A0000000
  %715 = add nuw nsw i32 %708, 273
  %716 = zext i32 %715 to i64
  %717 = getelementptr inbounds float, float addrspace(1)* %35, i64 %716
  %718 = load float, float addrspace(1)* %717, align 4, !tbaa !6
  %719 = fmul contract float %718, 2.500000e-01
  %720 = fadd contract float %714, %719
  %721 = add nuw nsw i32 %708, 364
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds float, float addrspace(1)* %35, i64 %722
  %724 = load float, float addrspace(1)* %723, align 4, !tbaa !6
  %725 = fmul contract float %724, 0x3FC99999A0000000
  %726 = fadd contract float %720, %725
  %727 = fmul contract float %171, %726
  %728 = fadd contract float %711, %727
  %729 = getelementptr inbounds float, float addrspace(1)* %33, i64 %709
  store float %728, float addrspace(1)* %729, align 4, !tbaa !6
  %730 = add nuw nsw i32 %708, 1
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds float, float addrspace(1)* %166, i64 %731
  %733 = load float, float addrspace(1)* %732, align 4, !tbaa !6
  %734 = getelementptr inbounds float, float addrspace(1)* %35, i64 %731
  %735 = load float, float addrspace(1)* %734, align 4, !tbaa !6
  %736 = fmul contract float %735, 0x3FA99999A0000000
  %737 = add nuw nsw i32 %708, 274
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds float, float addrspace(1)* %35, i64 %738
  %740 = load float, float addrspace(1)* %739, align 4, !tbaa !6
  %741 = fmul contract float %740, 2.500000e-01
  %742 = fadd contract float %736, %741
  %743 = add nuw nsw i32 %708, 365
  %744 = zext i32 %743 to i64
  %745 = getelementptr inbounds float, float addrspace(1)* %35, i64 %744
  %746 = load float, float addrspace(1)* %745, align 4, !tbaa !6
  %747 = fmul contract float %746, 0x3FC99999A0000000
  %748 = fadd contract float %742, %747
  %749 = fmul contract float %171, %748
  %750 = fadd contract float %733, %749
  %751 = getelementptr inbounds float, float addrspace(1)* %33, i64 %731
  store float %750, float addrspace(1)* %751, align 4, !tbaa !6
  %752 = add nuw nsw i32 %708, 2
  %753 = zext i32 %752 to i64
  %754 = getelementptr inbounds float, float addrspace(1)* %166, i64 %753
  %755 = load float, float addrspace(1)* %754, align 4, !tbaa !6
  %756 = getelementptr inbounds float, float addrspace(1)* %35, i64 %753
  %757 = load float, float addrspace(1)* %756, align 4, !tbaa !6
  %758 = fmul contract float %757, 0x3FA99999A0000000
  %759 = add nuw nsw i32 %708, 275
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds float, float addrspace(1)* %35, i64 %760
  %762 = load float, float addrspace(1)* %761, align 4, !tbaa !6
  %763 = fmul contract float %762, 2.500000e-01
  %764 = fadd contract float %758, %763
  %765 = add nuw nsw i32 %708, 366
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds float, float addrspace(1)* %35, i64 %766
  %768 = load float, float addrspace(1)* %767, align 4, !tbaa !6
  %769 = fmul contract float %768, 0x3FC99999A0000000
  %770 = fadd contract float %764, %769
  %771 = fmul contract float %171, %770
  %772 = fadd contract float %755, %771
  %773 = getelementptr inbounds float, float addrspace(1)* %33, i64 %753
  store float %772, float addrspace(1)* %773, align 4, !tbaa !6
  %774 = add nuw nsw i32 %708, 3
  %775 = zext i32 %774 to i64
  %776 = getelementptr inbounds float, float addrspace(1)* %166, i64 %775
  %777 = load float, float addrspace(1)* %776, align 4, !tbaa !6
  %778 = getelementptr inbounds float, float addrspace(1)* %35, i64 %775
  %779 = load float, float addrspace(1)* %778, align 4, !tbaa !6
  %780 = fmul contract float %779, 0x3FA99999A0000000
  %781 = add nuw nsw i32 %708, 276
  %782 = zext i32 %781 to i64
  %783 = getelementptr inbounds float, float addrspace(1)* %35, i64 %782
  %784 = load float, float addrspace(1)* %783, align 4, !tbaa !6
  %785 = fmul contract float %784, 2.500000e-01
  %786 = fadd contract float %780, %785
  %787 = add nuw nsw i32 %708, 367
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds float, float addrspace(1)* %35, i64 %788
  %790 = load float, float addrspace(1)* %789, align 4, !tbaa !6
  %791 = fmul contract float %790, 0x3FC99999A0000000
  %792 = fadd contract float %786, %791
  %793 = fmul contract float %171, %792
  %794 = fadd contract float %777, %793
  %795 = getelementptr inbounds float, float addrspace(1)* %33, i64 %775
  store float %794, float addrspace(1)* %795, align 4, !tbaa !6
  %796 = add nuw nsw i32 %708, 4
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds float, float addrspace(1)* %166, i64 %797
  %799 = load float, float addrspace(1)* %798, align 4, !tbaa !6
  %800 = getelementptr inbounds float, float addrspace(1)* %35, i64 %797
  %801 = load float, float addrspace(1)* %800, align 4, !tbaa !6
  %802 = fmul contract float %801, 0x3FA99999A0000000
  %803 = add nuw nsw i32 %708, 277
  %804 = zext i32 %803 to i64
  %805 = getelementptr inbounds float, float addrspace(1)* %35, i64 %804
  %806 = load float, float addrspace(1)* %805, align 4, !tbaa !6
  %807 = fmul contract float %806, 2.500000e-01
  %808 = fadd contract float %802, %807
  %809 = add nuw nsw i32 %708, 368
  %810 = zext i32 %809 to i64
  %811 = getelementptr inbounds float, float addrspace(1)* %35, i64 %810
  %812 = load float, float addrspace(1)* %811, align 4, !tbaa !6
  %813 = fmul contract float %812, 0x3FC99999A0000000
  %814 = fadd contract float %808, %813
  %815 = fmul contract float %171, %814
  %816 = fadd contract float %799, %815
  %817 = getelementptr inbounds float, float addrspace(1)* %33, i64 %797
  store float %816, float addrspace(1)* %817, align 4, !tbaa !6
  %818 = add nuw nsw i32 %708, 5
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds float, float addrspace(1)* %166, i64 %819
  %821 = load float, float addrspace(1)* %820, align 4, !tbaa !6
  %822 = getelementptr inbounds float, float addrspace(1)* %35, i64 %819
  %823 = load float, float addrspace(1)* %822, align 4, !tbaa !6
  %824 = fmul contract float %823, 0x3FA99999A0000000
  %825 = add nuw nsw i32 %708, 278
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds float, float addrspace(1)* %35, i64 %826
  %828 = load float, float addrspace(1)* %827, align 4, !tbaa !6
  %829 = fmul contract float %828, 2.500000e-01
  %830 = fadd contract float %824, %829
  %831 = add nuw nsw i32 %708, 369
  %832 = zext i32 %831 to i64
  %833 = getelementptr inbounds float, float addrspace(1)* %35, i64 %832
  %834 = load float, float addrspace(1)* %833, align 4, !tbaa !6
  %835 = fmul contract float %834, 0x3FC99999A0000000
  %836 = fadd contract float %830, %835
  %837 = fmul contract float %171, %836
  %838 = fadd contract float %821, %837
  %839 = getelementptr inbounds float, float addrspace(1)* %33, i64 %819
  store float %838, float addrspace(1)* %839, align 4, !tbaa !6
  %840 = add nuw nsw i32 %708, 6
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds float, float addrspace(1)* %166, i64 %841
  %843 = load float, float addrspace(1)* %842, align 4, !tbaa !6
  %844 = getelementptr inbounds float, float addrspace(1)* %35, i64 %841
  %845 = load float, float addrspace(1)* %844, align 4, !tbaa !6
  %846 = fmul contract float %845, 0x3FA99999A0000000
  %847 = add nuw nsw i32 %708, 279
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds float, float addrspace(1)* %35, i64 %848
  %850 = load float, float addrspace(1)* %849, align 4, !tbaa !6
  %851 = fmul contract float %850, 2.500000e-01
  %852 = fadd contract float %846, %851
  %853 = add nuw nsw i32 %708, 370
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds float, float addrspace(1)* %35, i64 %854
  %856 = load float, float addrspace(1)* %855, align 4, !tbaa !6
  %857 = fmul contract float %856, 0x3FC99999A0000000
  %858 = fadd contract float %852, %857
  %859 = fmul contract float %171, %858
  %860 = fadd contract float %843, %859
  %861 = getelementptr inbounds float, float addrspace(1)* %33, i64 %841
  store float %860, float addrspace(1)* %861, align 4, !tbaa !6
  %862 = add nuw nsw i32 %708, 7
  %863 = icmp eq i32 %862, 91
  br i1 %863, label %1838, label %707, !llvm.loop !17

864:                                              ; preds = %189, %951
  %865 = phi i32 [ %979, %951 ], [ 0, %189 ]
  %866 = zext i32 %865 to i64
  %867 = getelementptr inbounds float, float addrspace(1)* %166, i64 %866
  %868 = load float, float addrspace(1)* %867, align 4, !tbaa !6
  %869 = getelementptr inbounds float, float addrspace(1)* %35, i64 %866
  %870 = load float, float addrspace(1)* %869, align 4, !tbaa !6
  %871 = fmul contract float %870, 0x3FCDA12F60000000
  %872 = add nuw nsw i32 %865, 273
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds float, float addrspace(1)* %35, i64 %873
  %875 = load float, float addrspace(1)* %874, align 4, !tbaa !6
  %876 = fmul contract float %875, 0x3FF284BDA0000000
  %877 = fsub contract float %876, %871
  %878 = add nuw nsw i32 %865, 364
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds float, float addrspace(1)* %35, i64 %879
  %881 = load float, float addrspace(1)* %880, align 4, !tbaa !6
  %882 = fmul contract float %881, 0x4003425EE0000000
  %883 = fsub contract float %877, %882
  %884 = add nuw nsw i32 %865, 455
  %885 = zext i32 %884 to i64
  %886 = getelementptr inbounds float, float addrspace(1)* %35, i64 %885
  %887 = load float, float addrspace(1)* %886, align 4, !tbaa !6
  %888 = fmul contract float %887, 0x400284BDA0000000
  %889 = fadd contract float %883, %888
  %890 = fmul contract float %171, %889
  %891 = fadd contract float %868, %890
  %892 = getelementptr inbounds float, float addrspace(1)* %33, i64 %866
  store float %891, float addrspace(1)* %892, align 4, !tbaa !6
  %893 = or i32 %865, 1
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds float, float addrspace(1)* %166, i64 %894
  %896 = load float, float addrspace(1)* %895, align 4, !tbaa !6
  %897 = getelementptr inbounds float, float addrspace(1)* %35, i64 %894
  %898 = load float, float addrspace(1)* %897, align 4, !tbaa !6
  %899 = fmul contract float %898, 0x3FCDA12F60000000
  %900 = add nuw nsw i32 %865, 274
  %901 = zext i32 %900 to i64
  %902 = getelementptr inbounds float, float addrspace(1)* %35, i64 %901
  %903 = load float, float addrspace(1)* %902, align 4, !tbaa !6
  %904 = fmul contract float %903, 0x3FF284BDA0000000
  %905 = fsub contract float %904, %899
  %906 = add nuw nsw i32 %865, 365
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds float, float addrspace(1)* %35, i64 %907
  %909 = load float, float addrspace(1)* %908, align 4, !tbaa !6
  %910 = fmul contract float %909, 0x4003425EE0000000
  %911 = fsub contract float %905, %910
  %912 = add nuw nsw i32 %865, 456
  %913 = zext i32 %912 to i64
  %914 = getelementptr inbounds float, float addrspace(1)* %35, i64 %913
  %915 = load float, float addrspace(1)* %914, align 4, !tbaa !6
  %916 = fmul contract float %915, 0x400284BDA0000000
  %917 = fadd contract float %911, %916
  %918 = fmul contract float %171, %917
  %919 = fadd contract float %896, %918
  %920 = getelementptr inbounds float, float addrspace(1)* %33, i64 %894
  store float %919, float addrspace(1)* %920, align 4, !tbaa !6
  %921 = or i32 %865, 2
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds float, float addrspace(1)* %166, i64 %922
  %924 = load float, float addrspace(1)* %923, align 4, !tbaa !6
  %925 = getelementptr inbounds float, float addrspace(1)* %35, i64 %922
  %926 = load float, float addrspace(1)* %925, align 4, !tbaa !6
  %927 = fmul contract float %926, 0x3FCDA12F60000000
  %928 = add nuw nsw i32 %865, 275
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds float, float addrspace(1)* %35, i64 %929
  %931 = load float, float addrspace(1)* %930, align 4, !tbaa !6
  %932 = fmul contract float %931, 0x3FF284BDA0000000
  %933 = fsub contract float %932, %927
  %934 = add nuw nsw i32 %865, 366
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds float, float addrspace(1)* %35, i64 %935
  %937 = load float, float addrspace(1)* %936, align 4, !tbaa !6
  %938 = fmul contract float %937, 0x4003425EE0000000
  %939 = fsub contract float %933, %938
  %940 = add nuw nsw i32 %865, 457
  %941 = zext i32 %940 to i64
  %942 = getelementptr inbounds float, float addrspace(1)* %35, i64 %941
  %943 = load float, float addrspace(1)* %942, align 4, !tbaa !6
  %944 = fmul contract float %943, 0x400284BDA0000000
  %945 = fadd contract float %939, %944
  %946 = fmul contract float %171, %945
  %947 = fadd contract float %924, %946
  %948 = getelementptr inbounds float, float addrspace(1)* %33, i64 %922
  store float %947, float addrspace(1)* %948, align 4, !tbaa !6
  %949 = or i32 %865, 3
  %950 = icmp eq i32 %949, 91
  br i1 %950, label %1838, label %951, !llvm.loop !18

951:                                              ; preds = %864
  %952 = zext i32 %949 to i64
  %953 = getelementptr inbounds float, float addrspace(1)* %166, i64 %952
  %954 = load float, float addrspace(1)* %953, align 4, !tbaa !6
  %955 = getelementptr inbounds float, float addrspace(1)* %35, i64 %952
  %956 = load float, float addrspace(1)* %955, align 4, !tbaa !6
  %957 = fmul contract float %956, 0x3FCDA12F60000000
  %958 = add nuw nsw i32 %865, 276
  %959 = zext i32 %958 to i64
  %960 = getelementptr inbounds float, float addrspace(1)* %35, i64 %959
  %961 = load float, float addrspace(1)* %960, align 4, !tbaa !6
  %962 = fmul contract float %961, 0x3FF284BDA0000000
  %963 = fsub contract float %962, %957
  %964 = add nuw nsw i32 %865, 367
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds float, float addrspace(1)* %35, i64 %965
  %967 = load float, float addrspace(1)* %966, align 4, !tbaa !6
  %968 = fmul contract float %967, 0x4003425EE0000000
  %969 = fsub contract float %963, %968
  %970 = add nuw nsw i32 %865, 458
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds float, float addrspace(1)* %35, i64 %971
  %973 = load float, float addrspace(1)* %972, align 4, !tbaa !6
  %974 = fmul contract float %973, 0x400284BDA0000000
  %975 = fadd contract float %969, %974
  %976 = fmul contract float %171, %975
  %977 = fadd contract float %954, %976
  %978 = getelementptr inbounds float, float addrspace(1)* %33, i64 %952
  store float %977, float addrspace(1)* %978, align 4, !tbaa !6
  %979 = add nuw nsw i32 %865, 4
  br label %864

980:                                              ; preds = %189, %1067
  %981 = phi i32 [ %1095, %1067 ], [ 0, %189 ]
  %982 = zext i32 %981 to i64
  %983 = getelementptr inbounds float, float addrspace(1)* %166, i64 %982
  %984 = load float, float addrspace(1)* %983, align 4, !tbaa !6
  %985 = getelementptr inbounds float, float addrspace(1)* %35, i64 %982
  %986 = load float, float addrspace(1)* %985, align 4, !tbaa !6
  %987 = fmul contract float %986, 0x3FBA740DA0000000
  %988 = add nuw nsw i32 %981, 364
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds float, float addrspace(1)* %35, i64 %989
  %991 = load float, float addrspace(1)* %990, align 4, !tbaa !6
  %992 = fmul contract float %991, 0x3FD159E260000000
  %993 = fadd contract float %987, %992
  %994 = add nuw nsw i32 %981, 455
  %995 = zext i32 %994 to i64
  %996 = getelementptr inbounds float, float addrspace(1)* %35, i64 %995
  %997 = load float, float addrspace(1)* %996, align 4, !tbaa !6
  %998 = fmul contract float %997, 0x3FCC71C720000000
  %999 = fsub contract float %993, %998
  %1000 = add nuw nsw i32 %981, 546
  %1001 = zext i32 %1000 to i64
  %1002 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1001
  %1003 = load float, float addrspace(1)* %1002, align 4, !tbaa !6
  %1004 = fmul contract float %1003, 0x3F8D950C80000000
  %1005 = fadd contract float %999, %1004
  %1006 = fmul contract float %171, %1005
  %1007 = fadd contract float %984, %1006
  %1008 = getelementptr inbounds float, float addrspace(1)* %33, i64 %982
  store float %1007, float addrspace(1)* %1008, align 4, !tbaa !6
  %1009 = or i32 %981, 1
  %1010 = zext i32 %1009 to i64
  %1011 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1010
  %1012 = load float, float addrspace(1)* %1011, align 4, !tbaa !6
  %1013 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1010
  %1014 = load float, float addrspace(1)* %1013, align 4, !tbaa !6
  %1015 = fmul contract float %1014, 0x3FBA740DA0000000
  %1016 = add nuw nsw i32 %981, 365
  %1017 = zext i32 %1016 to i64
  %1018 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1017
  %1019 = load float, float addrspace(1)* %1018, align 4, !tbaa !6
  %1020 = fmul contract float %1019, 0x3FD159E260000000
  %1021 = fadd contract float %1015, %1020
  %1022 = add nuw nsw i32 %981, 456
  %1023 = zext i32 %1022 to i64
  %1024 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1023
  %1025 = load float, float addrspace(1)* %1024, align 4, !tbaa !6
  %1026 = fmul contract float %1025, 0x3FCC71C720000000
  %1027 = fsub contract float %1021, %1026
  %1028 = add nuw nsw i32 %981, 547
  %1029 = zext i32 %1028 to i64
  %1030 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1029
  %1031 = load float, float addrspace(1)* %1030, align 4, !tbaa !6
  %1032 = fmul contract float %1031, 0x3F8D950C80000000
  %1033 = fadd contract float %1027, %1032
  %1034 = fmul contract float %171, %1033
  %1035 = fadd contract float %1012, %1034
  %1036 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1010
  store float %1035, float addrspace(1)* %1036, align 4, !tbaa !6
  %1037 = or i32 %981, 2
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1038
  %1040 = load float, float addrspace(1)* %1039, align 4, !tbaa !6
  %1041 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1038
  %1042 = load float, float addrspace(1)* %1041, align 4, !tbaa !6
  %1043 = fmul contract float %1042, 0x3FBA740DA0000000
  %1044 = add nuw nsw i32 %981, 366
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1045
  %1047 = load float, float addrspace(1)* %1046, align 4, !tbaa !6
  %1048 = fmul contract float %1047, 0x3FD159E260000000
  %1049 = fadd contract float %1043, %1048
  %1050 = add nuw nsw i32 %981, 457
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1051
  %1053 = load float, float addrspace(1)* %1052, align 4, !tbaa !6
  %1054 = fmul contract float %1053, 0x3FCC71C720000000
  %1055 = fsub contract float %1049, %1054
  %1056 = add nuw nsw i32 %981, 548
  %1057 = zext i32 %1056 to i64
  %1058 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1057
  %1059 = load float, float addrspace(1)* %1058, align 4, !tbaa !6
  %1060 = fmul contract float %1059, 0x3F8D950C80000000
  %1061 = fadd contract float %1055, %1060
  %1062 = fmul contract float %171, %1061
  %1063 = fadd contract float %1040, %1062
  %1064 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1038
  store float %1063, float addrspace(1)* %1064, align 4, !tbaa !6
  %1065 = or i32 %981, 3
  %1066 = icmp eq i32 %1065, 91
  br i1 %1066, label %1838, label %1067, !llvm.loop !19

1067:                                             ; preds = %980
  %1068 = zext i32 %1065 to i64
  %1069 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1068
  %1070 = load float, float addrspace(1)* %1069, align 4, !tbaa !6
  %1071 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1068
  %1072 = load float, float addrspace(1)* %1071, align 4, !tbaa !6
  %1073 = fmul contract float %1072, 0x3FBA740DA0000000
  %1074 = add nuw nsw i32 %981, 367
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1075
  %1077 = load float, float addrspace(1)* %1076, align 4, !tbaa !6
  %1078 = fmul contract float %1077, 0x3FD159E260000000
  %1079 = fadd contract float %1073, %1078
  %1080 = add nuw nsw i32 %981, 458
  %1081 = zext i32 %1080 to i64
  %1082 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1081
  %1083 = load float, float addrspace(1)* %1082, align 4, !tbaa !6
  %1084 = fmul contract float %1083, 0x3FCC71C720000000
  %1085 = fsub contract float %1079, %1084
  %1086 = add nuw nsw i32 %981, 549
  %1087 = zext i32 %1086 to i64
  %1088 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1087
  %1089 = load float, float addrspace(1)* %1088, align 4, !tbaa !6
  %1090 = fmul contract float %1089, 0x3F8D950C80000000
  %1091 = fadd contract float %1085, %1090
  %1092 = fmul contract float %171, %1091
  %1093 = fadd contract float %1070, %1092
  %1094 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1068
  store float %1093, float addrspace(1)* %1094, align 4, !tbaa !6
  %1095 = add nuw nsw i32 %981, 4
  br label %980

1096:                                             ; preds = %189, %1219
  %1097 = phi i32 [ %1259, %1219 ], [ 0, %189 ]
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1098
  %1100 = load float, float addrspace(1)* %1099, align 4, !tbaa !6
  %1101 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1098
  %1102 = load float, float addrspace(1)* %1101, align 4, !tbaa !6
  %1103 = fmul contract float %1102, 2.000000e+00
  %1104 = add nuw nsw i32 %1097, 273
  %1105 = zext i32 %1104 to i64
  %1106 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1105
  %1107 = load float, float addrspace(1)* %1106, align 4, !tbaa !6
  %1108 = fmul contract float %1107, 0x4021AAAAA0000000
  %1109 = fsub contract float %1103, %1108
  %1110 = add nuw nsw i32 %1097, 364
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1111
  %1113 = load float, float addrspace(1)* %1112, align 4, !tbaa !6
  %1114 = fmul contract float %1113, 0x402F49F4A0000000
  %1115 = fadd contract float %1109, %1114
  %1116 = add nuw nsw i32 %1097, 455
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1117
  %1119 = load float, float addrspace(1)* %1118, align 4, !tbaa !6
  %1120 = fmul contract float %1119, 0x4027C71C80000000
  %1121 = fsub contract float %1115, %1120
  %1122 = add nuw nsw i32 %1097, 546
  %1123 = zext i32 %1122 to i64
  %1124 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1123
  %1125 = load float, float addrspace(1)* %1124, align 4, !tbaa !6
  %1126 = fmul contract float %1125, 0x3FE7D27D20000000
  %1127 = fadd contract float %1121, %1126
  %1128 = add nuw nsw i32 %1097, 637
  %1129 = zext i32 %1128 to i64
  %1130 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1129
  %1131 = load float, float addrspace(1)* %1130, align 4, !tbaa !6
  %1132 = fmul contract float %1131, 3.000000e+00
  %1133 = fadd contract float %1127, %1132
  %1134 = fmul contract float %171, %1133
  %1135 = fadd contract float %1100, %1134
  %1136 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1098
  store float %1135, float addrspace(1)* %1136, align 4, !tbaa !6
  %1137 = or i32 %1097, 1
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1138
  %1140 = load float, float addrspace(1)* %1139, align 4, !tbaa !6
  %1141 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1138
  %1142 = load float, float addrspace(1)* %1141, align 4, !tbaa !6
  %1143 = fmul contract float %1142, 2.000000e+00
  %1144 = add nuw nsw i32 %1097, 274
  %1145 = zext i32 %1144 to i64
  %1146 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1145
  %1147 = load float, float addrspace(1)* %1146, align 4, !tbaa !6
  %1148 = fmul contract float %1147, 0x4021AAAAA0000000
  %1149 = fsub contract float %1143, %1148
  %1150 = add nuw nsw i32 %1097, 365
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1151
  %1153 = load float, float addrspace(1)* %1152, align 4, !tbaa !6
  %1154 = fmul contract float %1153, 0x402F49F4A0000000
  %1155 = fadd contract float %1149, %1154
  %1156 = add nuw nsw i32 %1097, 456
  %1157 = zext i32 %1156 to i64
  %1158 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1157
  %1159 = load float, float addrspace(1)* %1158, align 4, !tbaa !6
  %1160 = fmul contract float %1159, 0x4027C71C80000000
  %1161 = fsub contract float %1155, %1160
  %1162 = add nuw nsw i32 %1097, 547
  %1163 = zext i32 %1162 to i64
  %1164 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1163
  %1165 = load float, float addrspace(1)* %1164, align 4, !tbaa !6
  %1166 = fmul contract float %1165, 0x3FE7D27D20000000
  %1167 = fadd contract float %1161, %1166
  %1168 = add nuw nsw i32 %1097, 638
  %1169 = zext i32 %1168 to i64
  %1170 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1169
  %1171 = load float, float addrspace(1)* %1170, align 4, !tbaa !6
  %1172 = fmul contract float %1171, 3.000000e+00
  %1173 = fadd contract float %1167, %1172
  %1174 = fmul contract float %171, %1173
  %1175 = fadd contract float %1140, %1174
  %1176 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1138
  store float %1175, float addrspace(1)* %1176, align 4, !tbaa !6
  %1177 = or i32 %1097, 2
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1178
  %1180 = load float, float addrspace(1)* %1179, align 4, !tbaa !6
  %1181 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1178
  %1182 = load float, float addrspace(1)* %1181, align 4, !tbaa !6
  %1183 = fmul contract float %1182, 2.000000e+00
  %1184 = add nuw nsw i32 %1097, 275
  %1185 = zext i32 %1184 to i64
  %1186 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1185
  %1187 = load float, float addrspace(1)* %1186, align 4, !tbaa !6
  %1188 = fmul contract float %1187, 0x4021AAAAA0000000
  %1189 = fsub contract float %1183, %1188
  %1190 = add nuw nsw i32 %1097, 366
  %1191 = zext i32 %1190 to i64
  %1192 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1191
  %1193 = load float, float addrspace(1)* %1192, align 4, !tbaa !6
  %1194 = fmul contract float %1193, 0x402F49F4A0000000
  %1195 = fadd contract float %1189, %1194
  %1196 = add nuw nsw i32 %1097, 457
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1197
  %1199 = load float, float addrspace(1)* %1198, align 4, !tbaa !6
  %1200 = fmul contract float %1199, 0x4027C71C80000000
  %1201 = fsub contract float %1195, %1200
  %1202 = add nuw nsw i32 %1097, 548
  %1203 = zext i32 %1202 to i64
  %1204 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1203
  %1205 = load float, float addrspace(1)* %1204, align 4, !tbaa !6
  %1206 = fmul contract float %1205, 0x3FE7D27D20000000
  %1207 = fadd contract float %1201, %1206
  %1208 = add nuw nsw i32 %1097, 639
  %1209 = zext i32 %1208 to i64
  %1210 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1209
  %1211 = load float, float addrspace(1)* %1210, align 4, !tbaa !6
  %1212 = fmul contract float %1211, 3.000000e+00
  %1213 = fadd contract float %1207, %1212
  %1214 = fmul contract float %171, %1213
  %1215 = fadd contract float %1180, %1214
  %1216 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1178
  store float %1215, float addrspace(1)* %1216, align 4, !tbaa !6
  %1217 = or i32 %1097, 3
  %1218 = icmp eq i32 %1217, 91
  br i1 %1218, label %1838, label %1219, !llvm.loop !20

1219:                                             ; preds = %1096
  %1220 = zext i32 %1217 to i64
  %1221 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1220
  %1222 = load float, float addrspace(1)* %1221, align 4, !tbaa !6
  %1223 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1220
  %1224 = load float, float addrspace(1)* %1223, align 4, !tbaa !6
  %1225 = fmul contract float %1224, 2.000000e+00
  %1226 = add nuw nsw i32 %1097, 276
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1227
  %1229 = load float, float addrspace(1)* %1228, align 4, !tbaa !6
  %1230 = fmul contract float %1229, 0x4021AAAAA0000000
  %1231 = fsub contract float %1225, %1230
  %1232 = add nuw nsw i32 %1097, 367
  %1233 = zext i32 %1232 to i64
  %1234 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1233
  %1235 = load float, float addrspace(1)* %1234, align 4, !tbaa !6
  %1236 = fmul contract float %1235, 0x402F49F4A0000000
  %1237 = fadd contract float %1231, %1236
  %1238 = add nuw nsw i32 %1097, 458
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1239
  %1241 = load float, float addrspace(1)* %1240, align 4, !tbaa !6
  %1242 = fmul contract float %1241, 0x4027C71C80000000
  %1243 = fsub contract float %1237, %1242
  %1244 = add nuw nsw i32 %1097, 549
  %1245 = zext i32 %1244 to i64
  %1246 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1245
  %1247 = load float, float addrspace(1)* %1246, align 4, !tbaa !6
  %1248 = fmul contract float %1247, 0x3FE7D27D20000000
  %1249 = fadd contract float %1243, %1248
  %1250 = add nuw nsw i32 %1097, 640
  %1251 = zext i32 %1250 to i64
  %1252 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1251
  %1253 = load float, float addrspace(1)* %1252, align 4, !tbaa !6
  %1254 = fmul contract float %1253, 3.000000e+00
  %1255 = fadd contract float %1249, %1254
  %1256 = fmul contract float %171, %1255
  %1257 = fadd contract float %1222, %1256
  %1258 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1220
  store float %1257, float addrspace(1)* %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i32 %1097, 4
  br label %1096

1260:                                             ; preds = %189, %1401
  %1261 = phi i32 [ %1447, %1401 ], [ 0, %189 ]
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1262
  %1264 = load float, float addrspace(1)* %1263, align 4, !tbaa !6
  %1265 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1262
  %1266 = load float, float addrspace(1)* %1265, align 4, !tbaa !6
  %1267 = fmul contract float %1266, 0x3FEAF684C0000000
  %1268 = add nuw nsw i32 %1261, 273
  %1269 = zext i32 %1268 to i64
  %1270 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1269
  %1271 = load float, float addrspace(1)* %1270, align 4, !tbaa !6
  %1272 = fmul contract float %1271, 0x3FCB425EE0000000
  %1273 = fsub contract float %1272, %1267
  %1274 = add nuw nsw i32 %1261, 364
  %1275 = zext i32 %1274 to i64
  %1276 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1275
  %1277 = load float, float addrspace(1)* %1276, align 4, !tbaa !6
  %1278 = fmul contract float %1277, 0x401CEB2400000000
  %1279 = fsub contract float %1273, %1278
  %1280 = add nuw nsw i32 %1261, 455
  %1281 = zext i32 %1280 to i64
  %1282 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1281
  %1283 = load float, float addrspace(1)* %1282, align 4, !tbaa !6
  %1284 = fmul contract float %1283, 0x4017097B40000000
  %1285 = fadd contract float %1279, %1284
  %1286 = add nuw nsw i32 %1261, 546
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1287
  %1289 = load float, float addrspace(1)* %1288, align 4, !tbaa !6
  %1290 = fmul contract float %1289, 0x3FD4444440000000
  %1291 = fsub contract float %1285, %1290
  %1292 = add nuw nsw i32 %1261, 637
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1293
  %1295 = load float, float addrspace(1)* %1294, align 4, !tbaa !6
  %1296 = fmul contract float %1295, 0x4006AAAAA0000000
  %1297 = fadd contract float %1291, %1296
  %1298 = add nuw nsw i32 %1261, 728
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1299
  %1301 = load float, float addrspace(1)* %1300, align 4, !tbaa !6
  %1302 = fmul contract float %1301, 0x3FB5555560000000
  %1303 = fsub contract float %1297, %1302
  %1304 = fmul contract float %171, %1303
  %1305 = fadd contract float %1264, %1304
  %1306 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1262
  store float %1305, float addrspace(1)* %1306, align 4, !tbaa !6
  %1307 = or i32 %1261, 1
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1308
  %1310 = load float, float addrspace(1)* %1309, align 4, !tbaa !6
  %1311 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1308
  %1312 = load float, float addrspace(1)* %1311, align 4, !tbaa !6
  %1313 = fmul contract float %1312, 0x3FEAF684C0000000
  %1314 = add nuw nsw i32 %1261, 274
  %1315 = zext i32 %1314 to i64
  %1316 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1315
  %1317 = load float, float addrspace(1)* %1316, align 4, !tbaa !6
  %1318 = fmul contract float %1317, 0x3FCB425EE0000000
  %1319 = fsub contract float %1318, %1313
  %1320 = add nuw nsw i32 %1261, 365
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1321
  %1323 = load float, float addrspace(1)* %1322, align 4, !tbaa !6
  %1324 = fmul contract float %1323, 0x401CEB2400000000
  %1325 = fsub contract float %1319, %1324
  %1326 = add nuw nsw i32 %1261, 456
  %1327 = zext i32 %1326 to i64
  %1328 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1327
  %1329 = load float, float addrspace(1)* %1328, align 4, !tbaa !6
  %1330 = fmul contract float %1329, 0x4017097B40000000
  %1331 = fadd contract float %1325, %1330
  %1332 = add nuw nsw i32 %1261, 547
  %1333 = zext i32 %1332 to i64
  %1334 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1333
  %1335 = load float, float addrspace(1)* %1334, align 4, !tbaa !6
  %1336 = fmul contract float %1335, 0x3FD4444440000000
  %1337 = fsub contract float %1331, %1336
  %1338 = add nuw nsw i32 %1261, 638
  %1339 = zext i32 %1338 to i64
  %1340 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1339
  %1341 = load float, float addrspace(1)* %1340, align 4, !tbaa !6
  %1342 = fmul contract float %1341, 0x4006AAAAA0000000
  %1343 = fadd contract float %1337, %1342
  %1344 = add nuw nsw i32 %1261, 729
  %1345 = zext i32 %1344 to i64
  %1346 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1345
  %1347 = load float, float addrspace(1)* %1346, align 4, !tbaa !6
  %1348 = fmul contract float %1347, 0x3FB5555560000000
  %1349 = fsub contract float %1343, %1348
  %1350 = fmul contract float %171, %1349
  %1351 = fadd contract float %1310, %1350
  %1352 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1308
  store float %1351, float addrspace(1)* %1352, align 4, !tbaa !6
  %1353 = or i32 %1261, 2
  %1354 = zext i32 %1353 to i64
  %1355 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1354
  %1356 = load float, float addrspace(1)* %1355, align 4, !tbaa !6
  %1357 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1354
  %1358 = load float, float addrspace(1)* %1357, align 4, !tbaa !6
  %1359 = fmul contract float %1358, 0x3FEAF684C0000000
  %1360 = add nuw nsw i32 %1261, 275
  %1361 = zext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1361
  %1363 = load float, float addrspace(1)* %1362, align 4, !tbaa !6
  %1364 = fmul contract float %1363, 0x3FCB425EE0000000
  %1365 = fsub contract float %1364, %1359
  %1366 = add nuw nsw i32 %1261, 366
  %1367 = zext i32 %1366 to i64
  %1368 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1367
  %1369 = load float, float addrspace(1)* %1368, align 4, !tbaa !6
  %1370 = fmul contract float %1369, 0x401CEB2400000000
  %1371 = fsub contract float %1365, %1370
  %1372 = add nuw nsw i32 %1261, 457
  %1373 = zext i32 %1372 to i64
  %1374 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1373
  %1375 = load float, float addrspace(1)* %1374, align 4, !tbaa !6
  %1376 = fmul contract float %1375, 0x4017097B40000000
  %1377 = fadd contract float %1371, %1376
  %1378 = add nuw nsw i32 %1261, 548
  %1379 = zext i32 %1378 to i64
  %1380 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1379
  %1381 = load float, float addrspace(1)* %1380, align 4, !tbaa !6
  %1382 = fmul contract float %1381, 0x3FD4444440000000
  %1383 = fsub contract float %1377, %1382
  %1384 = add nuw nsw i32 %1261, 639
  %1385 = zext i32 %1384 to i64
  %1386 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1385
  %1387 = load float, float addrspace(1)* %1386, align 4, !tbaa !6
  %1388 = fmul contract float %1387, 0x4006AAAAA0000000
  %1389 = fadd contract float %1383, %1388
  %1390 = add nuw nsw i32 %1261, 730
  %1391 = zext i32 %1390 to i64
  %1392 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1391
  %1393 = load float, float addrspace(1)* %1392, align 4, !tbaa !6
  %1394 = fmul contract float %1393, 0x3FB5555560000000
  %1395 = fsub contract float %1389, %1394
  %1396 = fmul contract float %171, %1395
  %1397 = fadd contract float %1356, %1396
  %1398 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1354
  store float %1397, float addrspace(1)* %1398, align 4, !tbaa !6
  %1399 = or i32 %1261, 3
  %1400 = icmp eq i32 %1399, 91
  br i1 %1400, label %1838, label %1401, !llvm.loop !21

1401:                                             ; preds = %1260
  %1402 = zext i32 %1399 to i64
  %1403 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1402
  %1404 = load float, float addrspace(1)* %1403, align 4, !tbaa !6
  %1405 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1402
  %1406 = load float, float addrspace(1)* %1405, align 4, !tbaa !6
  %1407 = fmul contract float %1406, 0x3FEAF684C0000000
  %1408 = add nuw nsw i32 %1261, 276
  %1409 = zext i32 %1408 to i64
  %1410 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1409
  %1411 = load float, float addrspace(1)* %1410, align 4, !tbaa !6
  %1412 = fmul contract float %1411, 0x3FCB425EE0000000
  %1413 = fsub contract float %1412, %1407
  %1414 = add nuw nsw i32 %1261, 367
  %1415 = zext i32 %1414 to i64
  %1416 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1415
  %1417 = load float, float addrspace(1)* %1416, align 4, !tbaa !6
  %1418 = fmul contract float %1417, 0x401CEB2400000000
  %1419 = fsub contract float %1413, %1418
  %1420 = add nuw nsw i32 %1261, 458
  %1421 = zext i32 %1420 to i64
  %1422 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1421
  %1423 = load float, float addrspace(1)* %1422, align 4, !tbaa !6
  %1424 = fmul contract float %1423, 0x4017097B40000000
  %1425 = fadd contract float %1419, %1424
  %1426 = add nuw nsw i32 %1261, 549
  %1427 = zext i32 %1426 to i64
  %1428 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1427
  %1429 = load float, float addrspace(1)* %1428, align 4, !tbaa !6
  %1430 = fmul contract float %1429, 0x3FD4444440000000
  %1431 = fsub contract float %1425, %1430
  %1432 = add nuw nsw i32 %1261, 640
  %1433 = zext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1433
  %1435 = load float, float addrspace(1)* %1434, align 4, !tbaa !6
  %1436 = fmul contract float %1435, 0x4006AAAAA0000000
  %1437 = fadd contract float %1431, %1436
  %1438 = add nuw nsw i32 %1261, 731
  %1439 = zext i32 %1438 to i64
  %1440 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1439
  %1441 = load float, float addrspace(1)* %1440, align 4, !tbaa !6
  %1442 = fmul contract float %1441, 0x3FB5555560000000
  %1443 = fsub contract float %1437, %1442
  %1444 = fmul contract float %171, %1443
  %1445 = fadd contract float %1404, %1444
  %1446 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1402
  store float %1445, float addrspace(1)* %1446, align 4, !tbaa !6
  %1447 = add nuw nsw i32 %1261, 4
  br label %1260

1448:                                             ; preds = %189, %1503
  %1449 = phi i32 [ %1555, %1503 ], [ 0, %189 ]
  %1450 = zext i32 %1449 to i64
  %1451 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1450
  %1452 = load float, float addrspace(1)* %1451, align 4, !tbaa !6
  %1453 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1450
  %1454 = load float, float addrspace(1)* %1453, align 4, !tbaa !6
  %1455 = fmul contract float %1454, 0x3FE29959A0000000
  %1456 = add nuw nsw i32 %1449, 273
  %1457 = zext i32 %1456 to i64
  %1458 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1457
  %1459 = load float, float addrspace(1)* %1458, align 4, !tbaa !6
  %1460 = fmul contract float %1459, 0x4000A25760000000
  %1461 = fsub contract float %1455, %1460
  %1462 = add nuw nsw i32 %1449, 364
  %1463 = zext i32 %1462 to i64
  %1464 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1463
  %1465 = load float, float addrspace(1)* %1464, align 4, !tbaa !6
  %1466 = fmul contract float %1465, 0x40118B9D20000000
  %1467 = fadd contract float %1461, %1466
  %1468 = add nuw nsw i32 %1449, 455
  %1469 = zext i32 %1468 to i64
  %1470 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1469
  %1471 = load float, float addrspace(1)* %1470, align 4, !tbaa !6
  %1472 = fmul contract float %1471, 0x400D5DA8A0000000
  %1473 = fsub contract float %1467, %1472
  %1474 = add nuw nsw i32 %1449, 546
  %1475 = zext i32 %1474 to i64
  %1476 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1475
  %1477 = load float, float addrspace(1)* %1476, align 4, !tbaa !6
  %1478 = fmul contract float %1477, 0x3FE0A5D680000000
  %1479 = fadd contract float %1473, %1478
  %1480 = add nuw nsw i32 %1449, 637
  %1481 = zext i32 %1480 to i64
  %1482 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1481
  %1483 = load float, float addrspace(1)* %1482, align 4, !tbaa !6
  %1484 = fmul contract float %1483, 0x3FE18F9C20000000
  %1485 = fadd contract float %1479, %1484
  %1486 = add nuw nsw i32 %1449, 728
  %1487 = zext i32 %1486 to i64
  %1488 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1487
  %1489 = load float, float addrspace(1)* %1488, align 4, !tbaa !6
  %1490 = fmul contract float %1489, 0x3FD18F9C20000000
  %1491 = fadd contract float %1485, %1490
  %1492 = add nuw nsw i32 %1449, 819
  %1493 = zext i32 %1492 to i64
  %1494 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1493
  %1495 = load float, float addrspace(1)* %1494, align 4, !tbaa !6
  %1496 = fmul contract float %1495, 0x3FDC18F9C0000000
  %1497 = fadd contract float %1491, %1496
  %1498 = fmul contract float %171, %1497
  %1499 = fadd contract float %1452, %1498
  %1500 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1450
  store float %1499, float addrspace(1)* %1500, align 4, !tbaa !6
  %1501 = or i32 %1449, 1
  %1502 = icmp eq i32 %1501, 91
  br i1 %1502, label %1838, label %1503, !llvm.loop !22

1503:                                             ; preds = %1448
  %1504 = zext i32 %1501 to i64
  %1505 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1504
  %1506 = load float, float addrspace(1)* %1505, align 4, !tbaa !6
  %1507 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1504
  %1508 = load float, float addrspace(1)* %1507, align 4, !tbaa !6
  %1509 = fmul contract float %1508, 0x3FE29959A0000000
  %1510 = add nuw nsw i32 %1449, 274
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1511
  %1513 = load float, float addrspace(1)* %1512, align 4, !tbaa !6
  %1514 = fmul contract float %1513, 0x4000A25760000000
  %1515 = fsub contract float %1509, %1514
  %1516 = add nuw nsw i32 %1449, 365
  %1517 = zext i32 %1516 to i64
  %1518 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1517
  %1519 = load float, float addrspace(1)* %1518, align 4, !tbaa !6
  %1520 = fmul contract float %1519, 0x40118B9D20000000
  %1521 = fadd contract float %1515, %1520
  %1522 = add nuw nsw i32 %1449, 456
  %1523 = zext i32 %1522 to i64
  %1524 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1523
  %1525 = load float, float addrspace(1)* %1524, align 4, !tbaa !6
  %1526 = fmul contract float %1525, 0x400D5DA8A0000000
  %1527 = fsub contract float %1521, %1526
  %1528 = add nuw nsw i32 %1449, 547
  %1529 = zext i32 %1528 to i64
  %1530 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1529
  %1531 = load float, float addrspace(1)* %1530, align 4, !tbaa !6
  %1532 = fmul contract float %1531, 0x3FE0A5D680000000
  %1533 = fadd contract float %1527, %1532
  %1534 = add nuw nsw i32 %1449, 638
  %1535 = zext i32 %1534 to i64
  %1536 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1535
  %1537 = load float, float addrspace(1)* %1536, align 4, !tbaa !6
  %1538 = fmul contract float %1537, 0x3FE18F9C20000000
  %1539 = fadd contract float %1533, %1538
  %1540 = add nuw nsw i32 %1449, 729
  %1541 = zext i32 %1540 to i64
  %1542 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1541
  %1543 = load float, float addrspace(1)* %1542, align 4, !tbaa !6
  %1544 = fmul contract float %1543, 0x3FD18F9C20000000
  %1545 = fadd contract float %1539, %1544
  %1546 = add nuw nsw i32 %1449, 820
  %1547 = zext i32 %1546 to i64
  %1548 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1547
  %1549 = load float, float addrspace(1)* %1548, align 4, !tbaa !6
  %1550 = fmul contract float %1549, 0x3FDC18F9C0000000
  %1551 = fadd contract float %1545, %1550
  %1552 = fmul contract float %171, %1551
  %1553 = fadd contract float %1506, %1552
  %1554 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1504
  store float %1553, float addrspace(1)* %1554, align 4, !tbaa !6
  %1555 = add nuw nsw i32 %1449, 2
  br label %1448

1556:                                             ; preds = %189, %1679
  %1557 = phi i32 [ %1719, %1679 ], [ 0, %189 ]
  %1558 = zext i32 %1557 to i64
  %1559 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1558
  %1560 = load float, float addrspace(1)* %1559, align 4, !tbaa !6
  %1561 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1558
  %1562 = load float, float addrspace(1)* %1561, align 4, !tbaa !6
  %1563 = fmul contract float %1562, 0x3F8DF881E0000000
  %1564 = add nuw nsw i32 %1557, 455
  %1565 = zext i32 %1564 to i64
  %1566 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1565
  %1567 = load float, float addrspace(1)* %1566, align 4, !tbaa !6
  %1568 = fmul contract float %1567, 0x3FC2BB5120000000
  %1569 = fsub contract float %1563, %1568
  %1570 = add nuw nsw i32 %1557, 546
  %1571 = zext i32 %1570 to i64
  %1572 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1571
  %1573 = load float, float addrspace(1)* %1572, align 4, !tbaa !6
  %1574 = fmul contract float %1573, 0x3F8DF881E0000000
  %1575 = fsub contract float %1569, %1574
  %1576 = add nuw nsw i32 %1557, 637
  %1577 = zext i32 %1576 to i64
  %1578 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1577
  %1579 = load float, float addrspace(1)* %1578, align 4, !tbaa !6
  %1580 = fmul contract float %1579, 0x3FB2BB5120000000
  %1581 = fsub contract float %1575, %1580
  %1582 = add nuw nsw i32 %1557, 728
  %1583 = zext i32 %1582 to i64
  %1584 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1583
  %1585 = load float, float addrspace(1)* %1584, align 4, !tbaa !6
  %1586 = fmul contract float %1585, 0x3FB2BB5120000000
  %1587 = fadd contract float %1581, %1586
  %1588 = add nuw nsw i32 %1557, 819
  %1589 = zext i32 %1588 to i64
  %1590 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1589
  %1591 = load float, float addrspace(1)* %1590, align 4, !tbaa !6
  %1592 = fmul contract float %1591, 0x3FC2BB5120000000
  %1593 = fadd contract float %1587, %1592
  %1594 = fmul contract float %171, %1593
  %1595 = fadd contract float %1560, %1594
  %1596 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1558
  store float %1595, float addrspace(1)* %1596, align 4, !tbaa !6
  %1597 = or i32 %1557, 1
  %1598 = zext i32 %1597 to i64
  %1599 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1598
  %1600 = load float, float addrspace(1)* %1599, align 4, !tbaa !6
  %1601 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1598
  %1602 = load float, float addrspace(1)* %1601, align 4, !tbaa !6
  %1603 = fmul contract float %1602, 0x3F8DF881E0000000
  %1604 = add nuw nsw i32 %1557, 456
  %1605 = zext i32 %1604 to i64
  %1606 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1605
  %1607 = load float, float addrspace(1)* %1606, align 4, !tbaa !6
  %1608 = fmul contract float %1607, 0x3FC2BB5120000000
  %1609 = fsub contract float %1603, %1608
  %1610 = add nuw nsw i32 %1557, 547
  %1611 = zext i32 %1610 to i64
  %1612 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1611
  %1613 = load float, float addrspace(1)* %1612, align 4, !tbaa !6
  %1614 = fmul contract float %1613, 0x3F8DF881E0000000
  %1615 = fsub contract float %1609, %1614
  %1616 = add nuw nsw i32 %1557, 638
  %1617 = zext i32 %1616 to i64
  %1618 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1617
  %1619 = load float, float addrspace(1)* %1618, align 4, !tbaa !6
  %1620 = fmul contract float %1619, 0x3FB2BB5120000000
  %1621 = fsub contract float %1615, %1620
  %1622 = add nuw nsw i32 %1557, 729
  %1623 = zext i32 %1622 to i64
  %1624 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1623
  %1625 = load float, float addrspace(1)* %1624, align 4, !tbaa !6
  %1626 = fmul contract float %1625, 0x3FB2BB5120000000
  %1627 = fadd contract float %1621, %1626
  %1628 = add nuw nsw i32 %1557, 820
  %1629 = zext i32 %1628 to i64
  %1630 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1629
  %1631 = load float, float addrspace(1)* %1630, align 4, !tbaa !6
  %1632 = fmul contract float %1631, 0x3FC2BB5120000000
  %1633 = fadd contract float %1627, %1632
  %1634 = fmul contract float %171, %1633
  %1635 = fadd contract float %1600, %1634
  %1636 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1598
  store float %1635, float addrspace(1)* %1636, align 4, !tbaa !6
  %1637 = or i32 %1557, 2
  %1638 = zext i32 %1637 to i64
  %1639 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1638
  %1640 = load float, float addrspace(1)* %1639, align 4, !tbaa !6
  %1641 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1638
  %1642 = load float, float addrspace(1)* %1641, align 4, !tbaa !6
  %1643 = fmul contract float %1642, 0x3F8DF881E0000000
  %1644 = add nuw nsw i32 %1557, 457
  %1645 = zext i32 %1644 to i64
  %1646 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1645
  %1647 = load float, float addrspace(1)* %1646, align 4, !tbaa !6
  %1648 = fmul contract float %1647, 0x3FC2BB5120000000
  %1649 = fsub contract float %1643, %1648
  %1650 = add nuw nsw i32 %1557, 548
  %1651 = zext i32 %1650 to i64
  %1652 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1651
  %1653 = load float, float addrspace(1)* %1652, align 4, !tbaa !6
  %1654 = fmul contract float %1653, 0x3F8DF881E0000000
  %1655 = fsub contract float %1649, %1654
  %1656 = add nuw nsw i32 %1557, 639
  %1657 = zext i32 %1656 to i64
  %1658 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1657
  %1659 = load float, float addrspace(1)* %1658, align 4, !tbaa !6
  %1660 = fmul contract float %1659, 0x3FB2BB5120000000
  %1661 = fsub contract float %1655, %1660
  %1662 = add nuw nsw i32 %1557, 730
  %1663 = zext i32 %1662 to i64
  %1664 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1663
  %1665 = load float, float addrspace(1)* %1664, align 4, !tbaa !6
  %1666 = fmul contract float %1665, 0x3FB2BB5120000000
  %1667 = fadd contract float %1661, %1666
  %1668 = add nuw nsw i32 %1557, 821
  %1669 = zext i32 %1668 to i64
  %1670 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1669
  %1671 = load float, float addrspace(1)* %1670, align 4, !tbaa !6
  %1672 = fmul contract float %1671, 0x3FC2BB5120000000
  %1673 = fadd contract float %1667, %1672
  %1674 = fmul contract float %171, %1673
  %1675 = fadd contract float %1640, %1674
  %1676 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1638
  store float %1675, float addrspace(1)* %1676, align 4, !tbaa !6
  %1677 = or i32 %1557, 3
  %1678 = icmp eq i32 %1677, 91
  br i1 %1678, label %1838, label %1679, !llvm.loop !23

1679:                                             ; preds = %1556
  %1680 = zext i32 %1677 to i64
  %1681 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1680
  %1682 = load float, float addrspace(1)* %1681, align 4, !tbaa !6
  %1683 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1680
  %1684 = load float, float addrspace(1)* %1683, align 4, !tbaa !6
  %1685 = fmul contract float %1684, 0x3F8DF881E0000000
  %1686 = add nuw nsw i32 %1557, 458
  %1687 = zext i32 %1686 to i64
  %1688 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1687
  %1689 = load float, float addrspace(1)* %1688, align 4, !tbaa !6
  %1690 = fmul contract float %1689, 0x3FC2BB5120000000
  %1691 = fsub contract float %1685, %1690
  %1692 = add nuw nsw i32 %1557, 549
  %1693 = zext i32 %1692 to i64
  %1694 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1693
  %1695 = load float, float addrspace(1)* %1694, align 4, !tbaa !6
  %1696 = fmul contract float %1695, 0x3F8DF881E0000000
  %1697 = fsub contract float %1691, %1696
  %1698 = add nuw nsw i32 %1557, 640
  %1699 = zext i32 %1698 to i64
  %1700 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1699
  %1701 = load float, float addrspace(1)* %1700, align 4, !tbaa !6
  %1702 = fmul contract float %1701, 0x3FB2BB5120000000
  %1703 = fsub contract float %1697, %1702
  %1704 = add nuw nsw i32 %1557, 731
  %1705 = zext i32 %1704 to i64
  %1706 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1705
  %1707 = load float, float addrspace(1)* %1706, align 4, !tbaa !6
  %1708 = fmul contract float %1707, 0x3FB2BB5120000000
  %1709 = fadd contract float %1703, %1708
  %1710 = add nuw nsw i32 %1557, 822
  %1711 = zext i32 %1710 to i64
  %1712 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1711
  %1713 = load float, float addrspace(1)* %1712, align 4, !tbaa !6
  %1714 = fmul contract float %1713, 0x3FC2BB5120000000
  %1715 = fadd contract float %1709, %1714
  %1716 = fmul contract float %171, %1715
  %1717 = fadd contract float %1682, %1716
  %1718 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1680
  store float %1717, float addrspace(1)* %1718, align 4, !tbaa !6
  %1719 = add nuw nsw i32 %1557, 4
  br label %1556

1720:                                             ; preds = %189, %1780
  %1721 = phi i32 [ %1837, %1780 ], [ 0, %189 ]
  %1722 = zext i32 %1721 to i64
  %1723 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1722
  %1724 = load float, float addrspace(1)* %1723, align 4, !tbaa !6
  %1725 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1722
  %1726 = load float, float addrspace(1)* %1725, align 4, !tbaa !6
  %1727 = fmul contract float %1726, 0xBFDBBD10C0000000
  %1728 = add nuw nsw i32 %1721, 273
  %1729 = zext i32 %1728 to i64
  %1730 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1729
  %1731 = load float, float addrspace(1)* %1730, align 4, !tbaa !6
  %1732 = fmul contract float %1731, 0x4000A25760000000
  %1733 = fsub contract float %1727, %1732
  %1734 = add nuw nsw i32 %1721, 364
  %1735 = zext i32 %1734 to i64
  %1736 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1735
  %1737 = load float, float addrspace(1)* %1736, align 4, !tbaa !6
  %1738 = fmul contract float %1737, 0x40118B9D20000000
  %1739 = fadd contract float %1733, %1738
  %1740 = add nuw nsw i32 %1721, 455
  %1741 = zext i32 %1740 to i64
  %1742 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1741
  %1743 = load float, float addrspace(1)* %1742, align 4, !tbaa !6
  %1744 = fmul contract float %1743, 0x400C31F380000000
  %1745 = fsub contract float %1739, %1744
  %1746 = add nuw nsw i32 %1721, 546
  %1747 = zext i32 %1746 to i64
  %1748 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1747
  %1749 = load float, float addrspace(1)* %1748, align 4, !tbaa !6
  %1750 = fmul contract float %1749, 0x3FE11DB8A0000000
  %1751 = fadd contract float %1745, %1750
  %1752 = add nuw nsw i32 %1721, 637
  %1753 = zext i32 %1752 to i64
  %1754 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1753
  %1755 = load float, float addrspace(1)* %1754, align 4, !tbaa !6
  %1756 = fmul contract float %1755, 0x3FE3E70640000000
  %1757 = fadd contract float %1751, %1756
  %1758 = add nuw nsw i32 %1721, 728
  %1759 = zext i32 %1758 to i64
  %1760 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1759
  %1761 = load float, float addrspace(1)* %1760, align 4, !tbaa !6
  %1762 = fmul contract float %1761, 0x3FC9C18FA0000000
  %1763 = fadd contract float %1757, %1762
  %1764 = add nuw nsw i32 %1721, 819
  %1765 = zext i32 %1764 to i64
  %1766 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1765
  %1767 = load float, float addrspace(1)* %1766, align 4, !tbaa !6
  %1768 = fmul contract float %1767, 0x3FD2BB5120000000
  %1769 = fadd contract float %1763, %1768
  %1770 = add nuw nsw i32 %1721, 1001
  %1771 = zext i32 %1770 to i64
  %1772 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1771
  %1773 = load float, float addrspace(1)* %1772, align 4, !tbaa !6
  %1774 = fadd contract float %1773, %1769
  %1775 = fmul contract float %171, %1774
  %1776 = fadd contract float %1724, %1775
  %1777 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1722
  store float %1776, float addrspace(1)* %1777, align 4, !tbaa !6
  %1778 = or i32 %1721, 1
  %1779 = icmp eq i32 %1778, 91
  br i1 %1779, label %1838, label %1780, !llvm.loop !24

1780:                                             ; preds = %1720
  %1781 = zext i32 %1778 to i64
  %1782 = getelementptr inbounds float, float addrspace(1)* %166, i64 %1781
  %1783 = load float, float addrspace(1)* %1782, align 4, !tbaa !6
  %1784 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1781
  %1785 = load float, float addrspace(1)* %1784, align 4, !tbaa !6
  %1786 = fmul contract float %1785, 0xBFDBBD10C0000000
  %1787 = add nuw nsw i32 %1721, 274
  %1788 = zext i32 %1787 to i64
  %1789 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1788
  %1790 = load float, float addrspace(1)* %1789, align 4, !tbaa !6
  %1791 = fmul contract float %1790, 0x4000A25760000000
  %1792 = fsub contract float %1786, %1791
  %1793 = add nuw nsw i32 %1721, 365
  %1794 = zext i32 %1793 to i64
  %1795 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1794
  %1796 = load float, float addrspace(1)* %1795, align 4, !tbaa !6
  %1797 = fmul contract float %1796, 0x40118B9D20000000
  %1798 = fadd contract float %1792, %1797
  %1799 = add nuw nsw i32 %1721, 456
  %1800 = zext i32 %1799 to i64
  %1801 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1800
  %1802 = load float, float addrspace(1)* %1801, align 4, !tbaa !6
  %1803 = fmul contract float %1802, 0x400C31F380000000
  %1804 = fsub contract float %1798, %1803
  %1805 = add nuw nsw i32 %1721, 547
  %1806 = zext i32 %1805 to i64
  %1807 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1806
  %1808 = load float, float addrspace(1)* %1807, align 4, !tbaa !6
  %1809 = fmul contract float %1808, 0x3FE11DB8A0000000
  %1810 = fadd contract float %1804, %1809
  %1811 = add nuw nsw i32 %1721, 638
  %1812 = zext i32 %1811 to i64
  %1813 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1812
  %1814 = load float, float addrspace(1)* %1813, align 4, !tbaa !6
  %1815 = fmul contract float %1814, 0x3FE3E70640000000
  %1816 = fadd contract float %1810, %1815
  %1817 = add nuw nsw i32 %1721, 729
  %1818 = zext i32 %1817 to i64
  %1819 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1818
  %1820 = load float, float addrspace(1)* %1819, align 4, !tbaa !6
  %1821 = fmul contract float %1820, 0x3FC9C18FA0000000
  %1822 = fadd contract float %1816, %1821
  %1823 = add nuw nsw i32 %1721, 820
  %1824 = zext i32 %1823 to i64
  %1825 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1824
  %1826 = load float, float addrspace(1)* %1825, align 4, !tbaa !6
  %1827 = fmul contract float %1826, 0x3FD2BB5120000000
  %1828 = fadd contract float %1822, %1827
  %1829 = add nuw nsw i32 %1721, 1002
  %1830 = zext i32 %1829 to i64
  %1831 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1830
  %1832 = load float, float addrspace(1)* %1831, align 4, !tbaa !6
  %1833 = fadd contract float %1832, %1828
  %1834 = fmul contract float %171, %1833
  %1835 = fadd contract float %1783, %1834
  %1836 = getelementptr inbounds float, float addrspace(1)* %33, i64 %1781
  store float %1835, float addrspace(1)* %1836, align 4, !tbaa !6
  %1837 = add nuw nsw i32 %1721, 2
  br label %1720

1838:                                             ; preds = %1720, %1556, %1448, %1260, %1096, %980, %864, %707, %550, %435, %320, %200, %192, %189
  %1839 = phi float [ %191, %189 ], [ %169, %192 ], [ %188, %200 ], [ %187, %320 ], [ %179, %435 ], [ %185, %550 ], [ %183, %707 ], [ %181, %864 ], [ %179, %980 ], [ %177, %1096 ], [ %175, %1260 ], [ %173, %1448 ], [ %169, %1556 ], [ %173, %1720 ]
  %1840 = fptosi float %1839 to i32
  %1841 = mul nuw nsw i32 %190, 91
  %1842 = zext i32 %1841 to i64
  %1843 = getelementptr inbounds float, float addrspace(1)* %35, i64 %1842
  %1844 = sitofp i32 %1840 to float
  %1845 = load float, float addrspace(1)* %38, align 4, !tbaa !6
  %1846 = load float, float addrspace(1)* %33, align 4, !tbaa !6
  %1847 = load float, float addrspace(1)* %39, align 4, !tbaa !6
  %1848 = load float, float addrspace(1)* %40, align 4, !tbaa !6
  %1849 = load float, float addrspace(1)* %41, align 4, !tbaa !6
  %1850 = load float, float addrspace(1)* %42, align 4, !tbaa !6
  %1851 = load float, float addrspace(1)* %43, align 4, !tbaa !6
  %1852 = load float, float addrspace(1)* %44, align 4, !tbaa !6
  %1853 = load float, float addrspace(1)* %45, align 4, !tbaa !6
  %1854 = load float, float addrspace(1)* %46, align 4, !tbaa !6
  %1855 = load float, float addrspace(1)* %47, align 4, !tbaa !6
  %1856 = load float, float addrspace(1)* %48, align 4, !tbaa !6
  %1857 = load float, float addrspace(1)* %49, align 4, !tbaa !6
  %1858 = load float, float addrspace(1)* %50, align 4, !tbaa !6
  %1859 = load float, float addrspace(1)* %51, align 4, !tbaa !6
  %1860 = load float, float addrspace(1)* %52, align 4, !tbaa !6
  %1861 = load float, float addrspace(1)* %53, align 4, !tbaa !6
  %1862 = load float, float addrspace(1)* %54, align 4, !tbaa !6
  %1863 = load float, float addrspace(1)* %55, align 4, !tbaa !6
  %1864 = load float, float addrspace(1)* %56, align 4, !tbaa !6
  %1865 = load float, float addrspace(1)* %57, align 4, !tbaa !6
  %1866 = load float, float addrspace(1)* %58, align 4, !tbaa !6
  %1867 = load float, float addrspace(1)* %59, align 4, !tbaa !6
  %1868 = load float, float addrspace(1)* %60, align 4, !tbaa !6
  %1869 = load float, float addrspace(1)* %61, align 4, !tbaa !6
  %1870 = load float, float addrspace(1)* %62, align 4, !tbaa !6
  %1871 = load float, float addrspace(1)* %63, align 4, !tbaa !6
  %1872 = load float, float addrspace(1)* %64, align 4, !tbaa !6
  %1873 = load float, float addrspace(1)* %65, align 4, !tbaa !6
  %1874 = load float, float addrspace(1)* %66, align 4, !tbaa !6
  %1875 = load float, float addrspace(1)* %67, align 4, !tbaa !6
  %1876 = load float, float addrspace(1)* %68, align 4, !tbaa !6
  %1877 = load float, float addrspace(1)* %69, align 4, !tbaa !6
  %1878 = load float, float addrspace(1)* %70, align 4, !tbaa !6
  %1879 = load float, float addrspace(1)* %71, align 4, !tbaa !6
  %1880 = load float, float addrspace(1)* %72, align 4, !tbaa !6
  %1881 = load float, float addrspace(1)* %73, align 4, !tbaa !6
  %1882 = load float, float addrspace(1)* %74, align 4, !tbaa !6
  %1883 = load float, float addrspace(1)* %75, align 4, !tbaa !6
  %1884 = load float, float addrspace(1)* %76, align 4, !tbaa !6
  %1885 = fdiv contract float 1.400000e+02, %1876
  %1886 = tail call i1 @llvm.amdgcn.class.f32(float %1885, i32 144)
  %1887 = select i1 %1886, float 0x41F0000000000000, float 1.000000e+00
  %1888 = fmul float %1885, %1887
  %1889 = tail call float @llvm.log2.f32(float %1888)
  %1890 = fmul float %1889, 0x3FE62E42E0000000
  %1891 = tail call i1 @llvm.amdgcn.class.f32(float %1889, i32 519)
  %1892 = fneg float %1890
  %1893 = tail call float @llvm.fma.f32(float %1889, float 0x3FE62E42E0000000, float %1892)
  %1894 = tail call float @llvm.fma.f32(float %1889, float 0x3E6EFA39E0000000, float %1893)
  %1895 = fadd float %1890, %1894
  %1896 = select i1 %1891, float %1889, float %1895
  %1897 = select i1 %1886, float 0x40362E4300000000, float 0.000000e+00
  %1898 = fsub float %1896, %1897
  %1899 = fmul contract float %1898, 0x403AB65BE0000000
  %1900 = fdiv contract float 1.400000e+02, %1877
  %1901 = tail call i1 @llvm.amdgcn.class.f32(float %1900, i32 144)
  %1902 = select i1 %1901, float 0x41F0000000000000, float 1.000000e+00
  %1903 = fmul float %1900, %1902
  %1904 = tail call float @llvm.log2.f32(float %1903)
  %1905 = fmul float %1904, 0x3FE62E42E0000000
  %1906 = tail call i1 @llvm.amdgcn.class.f32(float %1904, i32 519)
  %1907 = fneg float %1905
  %1908 = tail call float @llvm.fma.f32(float %1904, float 0x3FE62E42E0000000, float %1907)
  %1909 = tail call float @llvm.fma.f32(float %1904, float 0x3E6EFA39E0000000, float %1908)
  %1910 = fadd float %1905, %1909
  %1911 = select i1 %1906, float %1904, float %1910
  %1912 = select i1 %1901, float 0x40362E4300000000, float 0.000000e+00
  %1913 = fsub float %1911, %1912
  %1914 = fmul contract float %1913, 0x403AB65BE0000000
  %1915 = fdiv contract float 0x40159999A0000000, %1879
  %1916 = tail call i1 @llvm.amdgcn.class.f32(float %1915, i32 144)
  %1917 = select i1 %1916, float 0x41F0000000000000, float 1.000000e+00
  %1918 = fmul float %1915, %1917
  %1919 = tail call float @llvm.log2.f32(float %1918)
  %1920 = fmul float %1919, 0x3FE62E42E0000000
  %1921 = tail call i1 @llvm.amdgcn.class.f32(float %1919, i32 519)
  %1922 = fneg float %1920
  %1923 = tail call float @llvm.fma.f32(float %1919, float 0x3FE62E42E0000000, float %1922)
  %1924 = tail call float @llvm.fma.f32(float %1919, float 0x3E6EFA39E0000000, float %1923)
  %1925 = fadd float %1920, %1924
  %1926 = select i1 %1921, float %1919, float %1925
  %1927 = select i1 %1916, float 0x40362E4300000000, float 0.000000e+00
  %1928 = fsub float %1926, %1927
  %1929 = fmul contract float %1928, 0x403AB65BE0000000
  %1930 = fdiv contract float 0x3FFCCCCCC0000000, %1880
  %1931 = tail call i1 @llvm.amdgcn.class.f32(float %1930, i32 144)
  %1932 = select i1 %1931, float 0x41F0000000000000, float 1.000000e+00
  %1933 = fmul float %1930, %1932
  %1934 = tail call float @llvm.log2.f32(float %1933)
  %1935 = fmul float %1934, 0x3FE62E42E0000000
  %1936 = tail call i1 @llvm.amdgcn.class.f32(float %1934, i32 519)
  %1937 = fneg float %1935
  %1938 = tail call float @llvm.fma.f32(float %1934, float 0x3FE62E42E0000000, float %1937)
  %1939 = tail call float @llvm.fma.f32(float %1934, float 0x3E6EFA39E0000000, float %1938)
  %1940 = fadd float %1935, %1939
  %1941 = select i1 %1936, float %1934, float %1940
  %1942 = select i1 %1931, float 0x40362E4300000000, float 0.000000e+00
  %1943 = fsub float %1941, %1942
  %1944 = fmul contract float %1943, 0x402AB65BE0000000
  %1945 = fdiv contract float 0x3FFCCCCCC0000000, %1881
  %1946 = tail call i1 @llvm.amdgcn.class.f32(float %1945, i32 144)
  %1947 = select i1 %1946, float 0x41F0000000000000, float 1.000000e+00
  %1948 = fmul float %1945, %1947
  %1949 = tail call float @llvm.log2.f32(float %1948)
  %1950 = fmul float %1949, 0x3FE62E42E0000000
  %1951 = tail call i1 @llvm.amdgcn.class.f32(float %1949, i32 519)
  %1952 = fneg float %1950
  %1953 = tail call float @llvm.fma.f32(float %1949, float 0x3FE62E42E0000000, float %1952)
  %1954 = tail call float @llvm.fma.f32(float %1949, float 0x3E6EFA39E0000000, float %1953)
  %1955 = fadd float %1950, %1954
  %1956 = select i1 %1951, float %1949, float %1955
  %1957 = select i1 %1946, float 0x40362E4300000000, float 0.000000e+00
  %1958 = fsub float %1956, %1957
  %1959 = fmul contract float %1958, 0x402AB65BE0000000
  %1960 = fpext float %1883 to double
  %1961 = fadd contract double %1960, 4.713000e+01
  %1962 = fmul contract double %1961, 3.200000e-01
  %1963 = fmul contract double %1961, -1.000000e-01
  %1964 = fmul double %1963, 0x3FF71547652B82FE
  %1965 = tail call double @llvm.rint.f64(double %1964)
  %1966 = fneg double %1965
  %1967 = tail call double @llvm.fma.f64(double %1966, double 0x3FE62E42FEFA39EF, double %1963)
  %1968 = tail call double @llvm.fma.f64(double %1966, double 0x3C7ABC9E3B39803F, double %1967)
  %1969 = tail call double @llvm.fma.f64(double %1968, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1970 = tail call double @llvm.fma.f64(double %1968, double %1969, double 0x3EC71DEE623FDE64)
  %1971 = tail call double @llvm.fma.f64(double %1968, double %1970, double 0x3EFA01997C89E6B0)
  %1972 = tail call double @llvm.fma.f64(double %1968, double %1971, double 0x3F2A01A014761F6E)
  %1973 = tail call double @llvm.fma.f64(double %1968, double %1972, double 0x3F56C16C1852B7B0)
  %1974 = tail call double @llvm.fma.f64(double %1968, double %1973, double 0x3F81111111122322)
  %1975 = tail call double @llvm.fma.f64(double %1968, double %1974, double 0x3FA55555555502A1)
  %1976 = tail call double @llvm.fma.f64(double %1968, double %1975, double 0x3FC5555555555511)
  %1977 = tail call double @llvm.fma.f64(double %1968, double %1976, double 0x3FE000000000000B)
  %1978 = tail call double @llvm.fma.f64(double %1968, double %1977, double 1.000000e+00)
  %1979 = tail call double @llvm.fma.f64(double %1968, double %1978, double 1.000000e+00)
  %1980 = fptosi double %1965 to i32
  %1981 = tail call double @llvm.amdgcn.ldexp.f64(double %1979, i32 %1980)
  %1982 = fcmp ogt double %1963, 1.024000e+03
  %1983 = fcmp olt double %1963, -1.075000e+03
  %1984 = fsub contract double 1.000000e+00, %1981
  %1985 = select i1 %1982, double 0xFFF0000000000000, double %1984
  %1986 = select i1 %1983, double 1.000000e+00, double %1985
  %1987 = fdiv contract double %1962, %1986
  %1988 = fptrunc double %1987 to float
  %1989 = fneg contract float %1883
  %1990 = fdiv contract float %1883, -1.100000e+01
  %1991 = fmul float %1990, 0x3FF7154760000000
  %1992 = tail call float @llvm.rint.f32(float %1991)
  %1993 = fcmp ogt float %1990, 0x40562E4300000000
  %1994 = fcmp olt float %1990, 0xC059D1DA00000000
  %1995 = fneg float %1991
  %1996 = tail call float @llvm.fma.f32(float %1990, float 0x3FF7154760000000, float %1995)
  %1997 = tail call float @llvm.fma.f32(float %1990, float 0x3E54AE0BE0000000, float %1996)
  %1998 = fsub float %1991, %1992
  %1999 = fadd float %1997, %1998
  %2000 = tail call float @llvm.exp2.f32(float %1999)
  %2001 = fptosi float %1992 to i32
  %2002 = tail call float @llvm.amdgcn.ldexp.f32(float %2000, i32 %2001)
  %2003 = select i1 %1994, float 0.000000e+00, float %2002
  %2004 = select i1 %1993, float 0x7FF0000000000000, float %2003
  %2005 = fpext float %2004 to double
  %2006 = fmul contract double %2005, 8.000000e-02
  %2007 = fptrunc double %2006 to float
  %2008 = fcmp contract ult float %1883, -4.000000e+01
  br i1 %2008, label %2069, label %2009

2009:                                             ; preds = %1838
  %2010 = fadd contract double %1960, 1.066000e+01
  %2011 = fdiv contract double %2010, -1.110000e+01
  %2012 = fmul double %2011, 0x3FF71547652B82FE
  %2013 = tail call double @llvm.rint.f64(double %2012)
  %2014 = fneg double %2013
  %2015 = tail call double @llvm.fma.f64(double %2014, double 0x3FE62E42FEFA39EF, double %2011)
  %2016 = tail call double @llvm.fma.f64(double %2014, double 0x3C7ABC9E3B39803F, double %2015)
  %2017 = tail call double @llvm.fma.f64(double %2016, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2018 = tail call double @llvm.fma.f64(double %2016, double %2017, double 0x3EC71DEE623FDE64)
  %2019 = tail call double @llvm.fma.f64(double %2016, double %2018, double 0x3EFA01997C89E6B0)
  %2020 = tail call double @llvm.fma.f64(double %2016, double %2019, double 0x3F2A01A014761F6E)
  %2021 = tail call double @llvm.fma.f64(double %2016, double %2020, double 0x3F56C16C1852B7B0)
  %2022 = tail call double @llvm.fma.f64(double %2016, double %2021, double 0x3F81111111122322)
  %2023 = tail call double @llvm.fma.f64(double %2016, double %2022, double 0x3FA55555555502A1)
  %2024 = tail call double @llvm.fma.f64(double %2016, double %2023, double 0x3FC5555555555511)
  %2025 = tail call double @llvm.fma.f64(double %2016, double %2024, double 0x3FE000000000000B)
  %2026 = tail call double @llvm.fma.f64(double %2016, double %2025, double 1.000000e+00)
  %2027 = tail call double @llvm.fma.f64(double %2016, double %2026, double 1.000000e+00)
  %2028 = fptosi double %2013 to i32
  %2029 = tail call double @llvm.amdgcn.ldexp.f64(double %2027, i32 %2028)
  %2030 = fcmp ogt double %2011, 1.024000e+03
  %2031 = fcmp olt double %2011, -1.075000e+03
  %2032 = fadd contract double %2029, 1.000000e+00
  %2033 = fmul contract double %2032, 1.300000e-01
  %2034 = fdiv contract double 1.000000e+00, %2033
  %2035 = select i1 %2030, double 0.000000e+00, double %2034
  %2036 = select i1 %2031, double 0x401EC4EC4EC4EC4E, double %2035
  %2037 = fmul contract double %1960, -2.535000e-07
  %2038 = fmul double %2037, 0x3FF71547652B82FE
  %2039 = tail call double @llvm.rint.f64(double %2038)
  %2040 = fneg double %2039
  %2041 = tail call double @llvm.fma.f64(double %2040, double 0x3FE62E42FEFA39EF, double %2037)
  %2042 = tail call double @llvm.fma.f64(double %2040, double 0x3C7ABC9E3B39803F, double %2041)
  %2043 = tail call double @llvm.fma.f64(double %2042, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2044 = tail call double @llvm.fma.f64(double %2042, double %2043, double 0x3EC71DEE623FDE64)
  %2045 = tail call double @llvm.fma.f64(double %2042, double %2044, double 0x3EFA01997C89E6B0)
  %2046 = tail call double @llvm.fma.f64(double %2042, double %2045, double 0x3F2A01A014761F6E)
  %2047 = tail call double @llvm.fma.f64(double %2042, double %2046, double 0x3F56C16C1852B7B0)
  %2048 = tail call double @llvm.fma.f64(double %2042, double %2047, double 0x3F81111111122322)
  %2049 = tail call double @llvm.fma.f64(double %2042, double %2048, double 0x3FA55555555502A1)
  %2050 = tail call double @llvm.fma.f64(double %2042, double %2049, double 0x3FC5555555555511)
  %2051 = tail call double @llvm.fma.f64(double %2042, double %2050, double 0x3FE000000000000B)
  %2052 = tail call double @llvm.fma.f64(double %2042, double %2051, double 1.000000e+00)
  %2053 = tail call double @llvm.fma.f64(double %2042, double %2052, double 1.000000e+00)
  %2054 = fptosi double %2039 to i32
  %2055 = tail call double @llvm.amdgcn.ldexp.f64(double %2053, i32 %2054)
  %2056 = fcmp ogt double %2037, 1.024000e+03
  %2057 = fcmp olt double %2037, -1.075000e+03
  %2058 = fmul contract double %2055, 3.000000e-01
  %2059 = select i1 %2056, double 0x7FF0000000000000, double %2058
  %2060 = select i1 %2057, double 0.000000e+00, double %2059
  %2061 = fadd contract float %1883, 3.200000e+01
  %2062 = fpext float %2061 to double
  %2063 = fmul contract double %2062, -1.000000e-01
  %2064 = fmul double %2063, 0x3FF71547652B82FE
  %2065 = tail call double @llvm.rint.f64(double %2064)
  %2066 = fneg double %2065
  %2067 = tail call double @llvm.fma.f64(double %2066, double 0x3FE62E42FEFA39EF, double %2063)
  %2068 = tail call double @llvm.fma.f64(double %2066, double 0x3C7ABC9E3B39803F, double %2067)
  br label %2255

2069:                                             ; preds = %1838
  %2070 = fadd contract float %1883, 8.000000e+01
  %2071 = fpext float %2070 to double
  %2072 = fdiv contract double %2071, -6.800000e+00
  %2073 = fmul double %2072, 0x3FF71547652B82FE
  %2074 = tail call double @llvm.rint.f64(double %2073)
  %2075 = fneg double %2074
  %2076 = tail call double @llvm.fma.f64(double %2075, double 0x3FE62E42FEFA39EF, double %2072)
  %2077 = tail call double @llvm.fma.f64(double %2075, double 0x3C7ABC9E3B39803F, double %2076)
  %2078 = tail call double @llvm.fma.f64(double %2077, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2079 = tail call double @llvm.fma.f64(double %2077, double %2078, double 0x3EC71DEE623FDE64)
  %2080 = tail call double @llvm.fma.f64(double %2077, double %2079, double 0x3EFA01997C89E6B0)
  %2081 = tail call double @llvm.fma.f64(double %2077, double %2080, double 0x3F2A01A014761F6E)
  %2082 = tail call double @llvm.fma.f64(double %2077, double %2081, double 0x3F56C16C1852B7B0)
  %2083 = tail call double @llvm.fma.f64(double %2077, double %2082, double 0x3F81111111122322)
  %2084 = tail call double @llvm.fma.f64(double %2077, double %2083, double 0x3FA55555555502A1)
  %2085 = tail call double @llvm.fma.f64(double %2077, double %2084, double 0x3FC5555555555511)
  %2086 = tail call double @llvm.fma.f64(double %2077, double %2085, double 0x3FE000000000000B)
  %2087 = tail call double @llvm.fma.f64(double %2077, double %2086, double 1.000000e+00)
  %2088 = tail call double @llvm.fma.f64(double %2077, double %2087, double 1.000000e+00)
  %2089 = fptosi double %2074 to i32
  %2090 = tail call double @llvm.amdgcn.ldexp.f64(double %2088, i32 %2089)
  %2091 = fcmp ogt double %2072, 1.024000e+03
  %2092 = fcmp olt double %2072, -1.075000e+03
  %2093 = fmul contract double %2090, 1.350000e-01
  %2094 = select i1 %2091, double 0x7FF0000000000000, double %2093
  %2095 = select i1 %2092, double 0.000000e+00, double %2094
  %2096 = fptrunc double %2095 to float
  %2097 = fmul contract double %1960, 7.900000e-02
  %2098 = fmul double %2097, 0x3FF71547652B82FE
  %2099 = tail call double @llvm.rint.f64(double %2098)
  %2100 = fneg double %2099
  %2101 = tail call double @llvm.fma.f64(double %2100, double 0x3FE62E42FEFA39EF, double %2097)
  %2102 = tail call double @llvm.fma.f64(double %2100, double 0x3C7ABC9E3B39803F, double %2101)
  %2103 = tail call double @llvm.fma.f64(double %2102, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2104 = tail call double @llvm.fma.f64(double %2102, double %2103, double 0x3EC71DEE623FDE64)
  %2105 = tail call double @llvm.fma.f64(double %2102, double %2104, double 0x3EFA01997C89E6B0)
  %2106 = tail call double @llvm.fma.f64(double %2102, double %2105, double 0x3F2A01A014761F6E)
  %2107 = tail call double @llvm.fma.f64(double %2102, double %2106, double 0x3F56C16C1852B7B0)
  %2108 = tail call double @llvm.fma.f64(double %2102, double %2107, double 0x3F81111111122322)
  %2109 = tail call double @llvm.fma.f64(double %2102, double %2108, double 0x3FA55555555502A1)
  %2110 = tail call double @llvm.fma.f64(double %2102, double %2109, double 0x3FC5555555555511)
  %2111 = tail call double @llvm.fma.f64(double %2102, double %2110, double 0x3FE000000000000B)
  %2112 = tail call double @llvm.fma.f64(double %2102, double %2111, double 1.000000e+00)
  %2113 = tail call double @llvm.fma.f64(double %2102, double %2112, double 1.000000e+00)
  %2114 = fptosi double %2099 to i32
  %2115 = tail call double @llvm.amdgcn.ldexp.f64(double %2113, i32 %2114)
  %2116 = fcmp ogt double %2097, 1.024000e+03
  %2117 = fcmp olt double %2097, -1.075000e+03
  %2118 = fmul contract double %2115, 3.560000e+00
  %2119 = select i1 %2116, double 0x7FF0000000000000, double %2118
  %2120 = select i1 %2117, double 0.000000e+00, double %2119
  %2121 = fmul contract double %1960, 3.500000e-01
  %2122 = fmul double %2121, 0x3FF71547652B82FE
  %2123 = tail call double @llvm.rint.f64(double %2122)
  %2124 = fneg double %2123
  %2125 = tail call double @llvm.fma.f64(double %2124, double 0x3FE62E42FEFA39EF, double %2121)
  %2126 = tail call double @llvm.fma.f64(double %2124, double 0x3C7ABC9E3B39803F, double %2125)
  %2127 = tail call double @llvm.fma.f64(double %2126, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2128 = tail call double @llvm.fma.f64(double %2126, double %2127, double 0x3EC71DEE623FDE64)
  %2129 = tail call double @llvm.fma.f64(double %2126, double %2128, double 0x3EFA01997C89E6B0)
  %2130 = tail call double @llvm.fma.f64(double %2126, double %2129, double 0x3F2A01A014761F6E)
  %2131 = tail call double @llvm.fma.f64(double %2126, double %2130, double 0x3F56C16C1852B7B0)
  %2132 = tail call double @llvm.fma.f64(double %2126, double %2131, double 0x3F81111111122322)
  %2133 = tail call double @llvm.fma.f64(double %2126, double %2132, double 0x3FA55555555502A1)
  %2134 = tail call double @llvm.fma.f64(double %2126, double %2133, double 0x3FC5555555555511)
  %2135 = tail call double @llvm.fma.f64(double %2126, double %2134, double 0x3FE000000000000B)
  %2136 = tail call double @llvm.fma.f64(double %2126, double %2135, double 1.000000e+00)
  %2137 = tail call double @llvm.fma.f64(double %2126, double %2136, double 1.000000e+00)
  %2138 = fptosi double %2123 to i32
  %2139 = tail call double @llvm.amdgcn.ldexp.f64(double %2137, i32 %2138)
  %2140 = fcmp ogt double %2121, 1.024000e+03
  %2141 = fcmp olt double %2121, -1.075000e+03
  %2142 = fmul contract double %2139, 3.100000e+05
  %2143 = select i1 %2140, double 0x7FF0000000000000, double %2142
  %2144 = select i1 %2141, double 0.000000e+00, double %2143
  %2145 = fadd contract double %2120, %2144
  %2146 = fmul contract double %1960, 2.444000e-01
  %2147 = fmul double %2146, 0x3FF71547652B82FE
  %2148 = tail call double @llvm.rint.f64(double %2147)
  %2149 = fneg double %2148
  %2150 = tail call double @llvm.fma.f64(double %2149, double 0x3FE62E42FEFA39EF, double %2146)
  %2151 = tail call double @llvm.fma.f64(double %2149, double 0x3C7ABC9E3B39803F, double %2150)
  %2152 = tail call double @llvm.fma.f64(double %2151, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2153 = tail call double @llvm.fma.f64(double %2151, double %2152, double 0x3EC71DEE623FDE64)
  %2154 = tail call double @llvm.fma.f64(double %2151, double %2153, double 0x3EFA01997C89E6B0)
  %2155 = tail call double @llvm.fma.f64(double %2151, double %2154, double 0x3F2A01A014761F6E)
  %2156 = tail call double @llvm.fma.f64(double %2151, double %2155, double 0x3F56C16C1852B7B0)
  %2157 = tail call double @llvm.fma.f64(double %2151, double %2156, double 0x3F81111111122322)
  %2158 = tail call double @llvm.fma.f64(double %2151, double %2157, double 0x3FA55555555502A1)
  %2159 = tail call double @llvm.fma.f64(double %2151, double %2158, double 0x3FC5555555555511)
  %2160 = tail call double @llvm.fma.f64(double %2151, double %2159, double 0x3FE000000000000B)
  %2161 = tail call double @llvm.fma.f64(double %2151, double %2160, double 1.000000e+00)
  %2162 = tail call double @llvm.fma.f64(double %2151, double %2161, double 1.000000e+00)
  %2163 = fptosi double %2148 to i32
  %2164 = tail call double @llvm.amdgcn.ldexp.f64(double %2162, i32 %2163)
  %2165 = fcmp ogt double %2146, 1.024000e+03
  %2166 = fcmp olt double %2146, -1.075000e+03
  %2167 = fmul contract double %2164, -1.271400e+05
  %2168 = select i1 %2165, double 0xFFF0000000000000, double %2167
  %2169 = select i1 %2166, double -0.000000e+00, double %2168
  %2170 = fmul contract double %1960, -4.391000e-02
  %2171 = fmul double %2170, 0x3FF71547652B82FE
  %2172 = tail call double @llvm.rint.f64(double %2171)
  %2173 = fneg double %2172
  %2174 = tail call double @llvm.fma.f64(double %2173, double 0x3FE62E42FEFA39EF, double %2170)
  %2175 = tail call double @llvm.fma.f64(double %2173, double 0x3C7ABC9E3B39803F, double %2174)
  %2176 = tail call double @llvm.fma.f64(double %2175, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2177 = tail call double @llvm.fma.f64(double %2175, double %2176, double 0x3EC71DEE623FDE64)
  %2178 = tail call double @llvm.fma.f64(double %2175, double %2177, double 0x3EFA01997C89E6B0)
  %2179 = tail call double @llvm.fma.f64(double %2175, double %2178, double 0x3F2A01A014761F6E)
  %2180 = tail call double @llvm.fma.f64(double %2175, double %2179, double 0x3F56C16C1852B7B0)
  %2181 = tail call double @llvm.fma.f64(double %2175, double %2180, double 0x3F81111111122322)
  %2182 = tail call double @llvm.fma.f64(double %2175, double %2181, double 0x3FA55555555502A1)
  %2183 = tail call double @llvm.fma.f64(double %2175, double %2182, double 0x3FC5555555555511)
  %2184 = tail call double @llvm.fma.f64(double %2175, double %2183, double 0x3FE000000000000B)
  %2185 = tail call double @llvm.fma.f64(double %2175, double %2184, double 1.000000e+00)
  %2186 = tail call double @llvm.fma.f64(double %2175, double %2185, double 1.000000e+00)
  %2187 = fptosi double %2172 to i32
  %2188 = tail call double @llvm.amdgcn.ldexp.f64(double %2186, i32 %2187)
  %2189 = fcmp ogt double %2170, 1.024000e+03
  %2190 = fcmp olt double %2170, -1.075000e+03
  %2191 = fmul contract double %2188, 3.474000e-05
  %2192 = select i1 %2189, double 0x7FF0000000000000, double %2191
  %2193 = select i1 %2190, double 0.000000e+00, double %2192
  %2194 = fsub contract double %2169, %2193
  %2195 = fadd contract double %1960, 3.778000e+01
  %2196 = fmul contract double %2195, %2194
  %2197 = fadd contract double %1960, 7.923000e+01
  %2198 = fmul contract double %2197, 3.110000e-01
  %2199 = fmul double %2198, 0x3FF71547652B82FE
  %2200 = tail call double @llvm.rint.f64(double %2199)
  %2201 = fneg double %2200
  %2202 = tail call double @llvm.fma.f64(double %2201, double 0x3FE62E42FEFA39EF, double %2198)
  %2203 = tail call double @llvm.fma.f64(double %2201, double 0x3C7ABC9E3B39803F, double %2202)
  %2204 = tail call double @llvm.fma.f64(double %2203, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2205 = tail call double @llvm.fma.f64(double %2203, double %2204, double 0x3EC71DEE623FDE64)
  %2206 = tail call double @llvm.fma.f64(double %2203, double %2205, double 0x3EFA01997C89E6B0)
  %2207 = tail call double @llvm.fma.f64(double %2203, double %2206, double 0x3F2A01A014761F6E)
  %2208 = tail call double @llvm.fma.f64(double %2203, double %2207, double 0x3F56C16C1852B7B0)
  %2209 = tail call double @llvm.fma.f64(double %2203, double %2208, double 0x3F81111111122322)
  %2210 = tail call double @llvm.fma.f64(double %2203, double %2209, double 0x3FA55555555502A1)
  %2211 = tail call double @llvm.fma.f64(double %2203, double %2210, double 0x3FC5555555555511)
  %2212 = tail call double @llvm.fma.f64(double %2203, double %2211, double 0x3FE000000000000B)
  %2213 = tail call double @llvm.fma.f64(double %2203, double %2212, double 1.000000e+00)
  %2214 = tail call double @llvm.fma.f64(double %2203, double %2213, double 1.000000e+00)
  %2215 = fptosi double %2200 to i32
  %2216 = tail call double @llvm.amdgcn.ldexp.f64(double %2214, i32 %2215)
  %2217 = fcmp ogt double %2198, 1.024000e+03
  %2218 = fcmp olt double %2198, -1.075000e+03
  %2219 = fadd contract double %2216, 1.000000e+00
  %2220 = select i1 %2217, double 0x7FF0000000000000, double %2219
  %2221 = select i1 %2218, double 1.000000e+00, double %2220
  %2222 = fdiv contract double %2196, %2221
  %2223 = fptrunc double %2222 to float
  %2224 = fmul contract double %1960, -1.052000e-02
  %2225 = fmul double %2224, 0x3FF71547652B82FE
  %2226 = tail call double @llvm.rint.f64(double %2225)
  %2227 = fneg double %2226
  %2228 = tail call double @llvm.fma.f64(double %2227, double 0x3FE62E42FEFA39EF, double %2224)
  %2229 = tail call double @llvm.fma.f64(double %2227, double 0x3C7ABC9E3B39803F, double %2228)
  %2230 = tail call double @llvm.fma.f64(double %2229, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2231 = tail call double @llvm.fma.f64(double %2229, double %2230, double 0x3EC71DEE623FDE64)
  %2232 = tail call double @llvm.fma.f64(double %2229, double %2231, double 0x3EFA01997C89E6B0)
  %2233 = tail call double @llvm.fma.f64(double %2229, double %2232, double 0x3F2A01A014761F6E)
  %2234 = tail call double @llvm.fma.f64(double %2229, double %2233, double 0x3F56C16C1852B7B0)
  %2235 = tail call double @llvm.fma.f64(double %2229, double %2234, double 0x3F81111111122322)
  %2236 = tail call double @llvm.fma.f64(double %2229, double %2235, double 0x3FA55555555502A1)
  %2237 = tail call double @llvm.fma.f64(double %2229, double %2236, double 0x3FC5555555555511)
  %2238 = tail call double @llvm.fma.f64(double %2229, double %2237, double 0x3FE000000000000B)
  %2239 = tail call double @llvm.fma.f64(double %2229, double %2238, double 1.000000e+00)
  %2240 = tail call double @llvm.fma.f64(double %2229, double %2239, double 1.000000e+00)
  %2241 = fptosi double %2226 to i32
  %2242 = tail call double @llvm.amdgcn.ldexp.f64(double %2240, i32 %2241)
  %2243 = fcmp ogt double %2224, 1.024000e+03
  %2244 = fcmp olt double %2224, -1.075000e+03
  %2245 = fmul contract double %2242, 1.212000e-01
  %2246 = select i1 %2243, double 0x7FF0000000000000, double %2245
  %2247 = select i1 %2244, double 0.000000e+00, double %2246
  %2248 = fadd contract double %1960, 4.014000e+01
  %2249 = fmul contract double %2248, -1.378000e-01
  %2250 = fmul double %2249, 0x3FF71547652B82FE
  %2251 = tail call double @llvm.rint.f64(double %2250)
  %2252 = fneg double %2251
  %2253 = tail call double @llvm.fma.f64(double %2252, double 0x3FE62E42FEFA39EF, double %2249)
  %2254 = tail call double @llvm.fma.f64(double %2252, double 0x3C7ABC9E3B39803F, double %2253)
  br label %2255

2255:                                             ; preds = %2069, %2009
  %2256 = phi double [ %2254, %2069 ], [ %2068, %2009 ]
  %2257 = phi double [ %2251, %2069 ], [ %2065, %2009 ]
  %2258 = phi double [ %2249, %2069 ], [ %2063, %2009 ]
  %2259 = phi double [ %2247, %2069 ], [ %2060, %2009 ]
  %2260 = phi float [ %2223, %2069 ], [ 0.000000e+00, %2009 ]
  %2261 = phi double [ %2145, %2069 ], [ %2036, %2009 ]
  %2262 = phi float [ %2096, %2069 ], [ 0.000000e+00, %2009 ]
  %2263 = tail call double @llvm.fma.f64(double %2256, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2264 = tail call double @llvm.fma.f64(double %2256, double %2263, double 0x3EC71DEE623FDE64)
  %2265 = tail call double @llvm.fma.f64(double %2256, double %2264, double 0x3EFA01997C89E6B0)
  %2266 = tail call double @llvm.fma.f64(double %2256, double %2265, double 0x3F2A01A014761F6E)
  %2267 = tail call double @llvm.fma.f64(double %2256, double %2266, double 0x3F56C16C1852B7B0)
  %2268 = tail call double @llvm.fma.f64(double %2256, double %2267, double 0x3F81111111122322)
  %2269 = tail call double @llvm.fma.f64(double %2256, double %2268, double 0x3FA55555555502A1)
  %2270 = tail call double @llvm.fma.f64(double %2256, double %2269, double 0x3FC5555555555511)
  %2271 = tail call double @llvm.fma.f64(double %2256, double %2270, double 0x3FE000000000000B)
  %2272 = tail call double @llvm.fma.f64(double %2256, double %2271, double 1.000000e+00)
  %2273 = tail call double @llvm.fma.f64(double %2256, double %2272, double 1.000000e+00)
  %2274 = fptosi double %2257 to i32
  %2275 = tail call double @llvm.amdgcn.ldexp.f64(double %2273, i32 %2274)
  %2276 = fcmp ogt double %2258, 1.024000e+03
  %2277 = fcmp olt double %2258, -1.075000e+03
  %2278 = fadd contract double %2275, 1.000000e+00
  %2279 = select i1 %2276, double 0x7FF0000000000000, double %2278
  %2280 = select i1 %2277, double 1.000000e+00, double %2279
  %2281 = fdiv contract double %2259, %2280
  %2282 = fptrunc double %2261 to float
  %2283 = fptrunc double %2281 to float
  %2284 = fsub contract float 1.000000e+00, %1846
  %2285 = fmul contract float %2284, %1988
  %2286 = fmul contract float %1846, %2007
  %2287 = fsub contract float %2285, %2286
  store float %2287, float addrspace(1)* %1843, align 4, !tbaa !6
  %2288 = fsub contract float 1.000000e+00, %1847
  %2289 = fmul contract float %2288, %2262
  %2290 = fmul contract float %1847, %2282
  %2291 = fsub contract float %2289, %2290
  %2292 = getelementptr inbounds float, float addrspace(1)* %1843, i64 1
  store float %2291, float addrspace(1)* %2292, align 4, !tbaa !6
  %2293 = fsub contract float 1.000000e+00, %1848
  %2294 = fmul contract float %2293, %2260
  %2295 = fmul contract float %1848, %2283
  %2296 = fsub contract float %2294, %2295
  %2297 = getelementptr inbounds float, float addrspace(1)* %1843, i64 2
  store float %2296, float addrspace(1)* %2297, align 4, !tbaa !6
  %2298 = tail call float @llvm.fabs.f32(float %1846)
  %2299 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2298)
  %2300 = fcmp olt float %2299, 0x3FE5555560000000
  %2301 = zext i1 %2300 to i32
  %2302 = tail call float @llvm.amdgcn.ldexp.f32(float %2299, i32 %2301)
  %2303 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2298)
  %2304 = sub nsw i32 %2303, %2301
  %2305 = fadd float %2302, -1.000000e+00
  %2306 = fadd float %2302, 1.000000e+00
  %2307 = fadd float %2306, -1.000000e+00
  %2308 = fsub float %2302, %2307
  %2309 = tail call float @llvm.amdgcn.rcp.f32(float %2306)
  %2310 = fmul float %2305, %2309
  %2311 = fmul float %2306, %2310
  %2312 = fneg float %2311
  %2313 = tail call float @llvm.fma.f32(float %2310, float %2306, float %2312)
  %2314 = tail call float @llvm.fma.f32(float %2310, float %2308, float %2313)
  %2315 = fadd float %2311, %2314
  %2316 = fsub float %2315, %2311
  %2317 = fsub float %2314, %2316
  %2318 = fsub float %2305, %2315
  %2319 = fsub float %2305, %2318
  %2320 = fsub float %2319, %2315
  %2321 = fsub float %2320, %2317
  %2322 = fadd float %2318, %2321
  %2323 = fmul float %2309, %2322
  %2324 = fadd float %2310, %2323
  %2325 = fsub float %2324, %2310
  %2326 = fsub float %2323, %2325
  %2327 = fmul float %2324, %2324
  %2328 = fneg float %2327
  %2329 = tail call float @llvm.fma.f32(float %2324, float %2324, float %2328)
  %2330 = fmul float %2326, 2.000000e+00
  %2331 = tail call float @llvm.fma.f32(float %2324, float %2330, float %2329)
  %2332 = fadd float %2327, %2331
  %2333 = fsub float %2332, %2327
  %2334 = fsub float %2331, %2333
  %2335 = tail call float @llvm.fmuladd.f32(float %2332, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2336 = tail call float @llvm.fmuladd.f32(float %2332, float %2335, float 0x3FD999BDE0000000)
  %2337 = sitofp i32 %2304 to float
  %2338 = fmul float %2337, 0x3FE62E4300000000
  %2339 = fneg float %2338
  %2340 = tail call float @llvm.fma.f32(float %2337, float 0x3FE62E4300000000, float %2339)
  %2341 = tail call float @llvm.fma.f32(float %2337, float 0xBE205C6100000000, float %2340)
  %2342 = fadd float %2338, %2341
  %2343 = fsub float %2342, %2338
  %2344 = fsub float %2341, %2343
  %2345 = tail call float @llvm.amdgcn.ldexp.f32(float %2324, i32 1)
  %2346 = fmul float %2324, %2332
  %2347 = fneg float %2346
  %2348 = tail call float @llvm.fma.f32(float %2332, float %2324, float %2347)
  %2349 = tail call float @llvm.fma.f32(float %2332, float %2326, float %2348)
  %2350 = tail call float @llvm.fma.f32(float %2334, float %2324, float %2349)
  %2351 = fadd float %2346, %2350
  %2352 = fsub float %2351, %2346
  %2353 = fsub float %2350, %2352
  %2354 = fmul float %2332, %2336
  %2355 = fneg float %2354
  %2356 = tail call float @llvm.fma.f32(float %2332, float %2336, float %2355)
  %2357 = tail call float @llvm.fma.f32(float %2334, float %2336, float %2356)
  %2358 = fadd float %2354, %2357
  %2359 = fsub float %2358, %2354
  %2360 = fsub float %2357, %2359
  %2361 = fadd float %2358, 0x3FE5555540000000
  %2362 = fadd float %2361, 0xBFE5555540000000
  %2363 = fsub float %2358, %2362
  %2364 = fadd float %2360, 0x3E2E720200000000
  %2365 = fadd float %2364, %2363
  %2366 = fadd float %2361, %2365
  %2367 = fsub float %2366, %2361
  %2368 = fsub float %2365, %2367
  %2369 = fmul float %2351, %2366
  %2370 = fneg float %2369
  %2371 = tail call float @llvm.fma.f32(float %2351, float %2366, float %2370)
  %2372 = tail call float @llvm.fma.f32(float %2351, float %2368, float %2371)
  %2373 = tail call float @llvm.fma.f32(float %2353, float %2366, float %2372)
  %2374 = tail call float @llvm.amdgcn.ldexp.f32(float %2326, i32 1)
  %2375 = fadd float %2369, %2373
  %2376 = fsub float %2375, %2369
  %2377 = fsub float %2373, %2376
  %2378 = fadd float %2345, %2375
  %2379 = fsub float %2378, %2345
  %2380 = fsub float %2375, %2379
  %2381 = fadd float %2374, %2377
  %2382 = fadd float %2381, %2380
  %2383 = fadd float %2378, %2382
  %2384 = fsub float %2383, %2378
  %2385 = fsub float %2382, %2384
  %2386 = fadd float %2342, %2383
  %2387 = fsub float %2386, %2342
  %2388 = fsub float %2386, %2387
  %2389 = fsub float %2342, %2388
  %2390 = fsub float %2383, %2387
  %2391 = fadd float %2390, %2389
  %2392 = fadd float %2344, %2385
  %2393 = fsub float %2392, %2344
  %2394 = fsub float %2392, %2393
  %2395 = fsub float %2344, %2394
  %2396 = fsub float %2385, %2393
  %2397 = fadd float %2396, %2395
  %2398 = fadd float %2392, %2391
  %2399 = fadd float %2386, %2398
  %2400 = fsub float %2399, %2386
  %2401 = fsub float %2398, %2400
  %2402 = fadd float %2397, %2401
  %2403 = fadd float %2399, %2402
  %2404 = fsub float %2403, %2399
  %2405 = fsub float %2402, %2404
  %2406 = fmul float %2403, 3.000000e+00
  %2407 = fneg float %2406
  %2408 = tail call float @llvm.fma.f32(float %2403, float 3.000000e+00, float %2407)
  %2409 = fmul float %2403, 0.000000e+00
  %2410 = tail call float @llvm.fma.f32(float %2405, float 3.000000e+00, float %2409)
  %2411 = fadd float %2408, %2410
  %2412 = fadd float %2406, %2411
  %2413 = fsub float %2412, %2406
  %2414 = fsub float %2411, %2413
  %2415 = tail call float @llvm.fabs.f32(float %2406) #3
  %2416 = fcmp oeq float %2415, 0x7FF0000000000000
  %2417 = select i1 %2416, float %2406, float %2412
  %2418 = tail call float @llvm.fabs.f32(float %2417) #3
  %2419 = fcmp oeq float %2418, 0x7FF0000000000000
  %2420 = select i1 %2419, float 0.000000e+00, float %2414
  %2421 = fcmp oeq float %2417, 0x40562E4300000000
  %2422 = select i1 %2421, float 0x3EE0000000000000, float 0.000000e+00
  %2423 = fsub float %2417, %2422
  %2424 = fadd float %2422, %2420
  %2425 = fmul float %2423, 0x3FF7154760000000
  %2426 = tail call float @llvm.rint.f32(float %2425)
  %2427 = fcmp ogt float %2423, 0x40562E4300000000
  %2428 = fcmp olt float %2423, 0xC059D1DA00000000
  %2429 = fneg float %2425
  %2430 = tail call float @llvm.fma.f32(float %2423, float 0x3FF7154760000000, float %2429)
  %2431 = tail call float @llvm.fma.f32(float %2423, float 0x3E54AE0BE0000000, float %2430)
  %2432 = fsub float %2425, %2426
  %2433 = fadd float %2431, %2432
  %2434 = tail call float @llvm.exp2.f32(float %2433)
  %2435 = fptosi float %2426 to i32
  %2436 = tail call float @llvm.amdgcn.ldexp.f32(float %2434, i32 %2435)
  %2437 = select i1 %2428, float 0.000000e+00, float %2436
  %2438 = select i1 %2427, float 0x7FF0000000000000, float %2437
  %2439 = tail call float @llvm.fma.f32(float %2438, float %2424, float %2438)
  %2440 = tail call float @llvm.fabs.f32(float %2438) #3
  %2441 = fcmp oeq float %2440, 0x7FF0000000000000
  %2442 = select i1 %2441, float %2438, float %2439
  %2443 = fcmp uge float %1846, 0.000000e+00
  %2444 = select i1 %2443, float 0.000000e+00, float -0.000000e+00
  %2445 = tail call float @llvm.copysign.f32(float %2442, float %2444)
  %2446 = fcmp oeq float %2298, 0x7FF0000000000000
  %2447 = fcmp oeq float %1846, 0.000000e+00
  %2448 = or i1 %2447, %2446
  %2449 = select i1 %2447, float 0.000000e+00, float 0x7FF0000000000000
  %2450 = tail call float @llvm.copysign.f32(float %2449, float %1846)
  %2451 = select i1 %2448, float %2450, float %2445
  %2452 = fcmp uno float %1846, 0.000000e+00
  %2453 = select i1 %2452, float 0x7FF8000000000000, float %2451
  %2454 = fmul contract float %2453, 0x3FFC28F5C0000000
  %2455 = fmul contract float %1847, %2454
  %2456 = fmul contract float %1848, %2455
  %2457 = fsub contract float %1883, %1899
  %2458 = fmul contract float %2457, %2456
  %2459 = fmul contract float %2453, 0x402C7AE140000000
  %2460 = fmul contract float %1847, %2459
  %2461 = fmul contract float %1848, %2460
  %2462 = fsub contract float %1883, %1914
  %2463 = fmul contract float %2462, %2461
  %2464 = fmul contract float %2457, 0x3F0120E4A0000000
  %2465 = fmul contract float %2462, 0x3F3152B8A0000000
  %2466 = fmul contract double %1960, -1.000000e-01
  %2467 = fmul contract double %2466, 0x3FA32ACBC0000000
  %2468 = fmul double %2467, 0x3FF71547652B82FE
  %2469 = tail call double @llvm.rint.f64(double %2468)
  %2470 = fneg double %2469
  %2471 = tail call double @llvm.fma.f64(double %2470, double 0x3FE62E42FEFA39EF, double %2467)
  %2472 = tail call double @llvm.fma.f64(double %2470, double 0x3C7ABC9E3B39803F, double %2471)
  %2473 = tail call double @llvm.fma.f64(double %2472, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2474 = tail call double @llvm.fma.f64(double %2472, double %2473, double 0x3EC71DEE623FDE64)
  %2475 = tail call double @llvm.fma.f64(double %2472, double %2474, double 0x3EFA01997C89E6B0)
  %2476 = tail call double @llvm.fma.f64(double %2472, double %2475, double 0x3F2A01A014761F6E)
  %2477 = tail call double @llvm.fma.f64(double %2472, double %2476, double 0x3F56C16C1852B7B0)
  %2478 = tail call double @llvm.fma.f64(double %2472, double %2477, double 0x3F81111111122322)
  %2479 = tail call double @llvm.fma.f64(double %2472, double %2478, double 0x3FA55555555502A1)
  %2480 = tail call double @llvm.fma.f64(double %2472, double %2479, double 0x3FC5555555555511)
  %2481 = tail call double @llvm.fma.f64(double %2472, double %2480, double 0x3FE000000000000B)
  %2482 = tail call double @llvm.fma.f64(double %2472, double %2481, double 1.000000e+00)
  %2483 = tail call double @llvm.fma.f64(double %2472, double %2482, double 1.000000e+00)
  %2484 = fptosi double %2469 to i32
  %2485 = tail call double @llvm.amdgcn.ldexp.f64(double %2483, i32 %2484)
  %2486 = fcmp ogt double %2467, 1.024000e+03
  %2487 = fcmp olt double %2467, -1.075000e+03
  %2488 = fmul contract double %2485, 1.245000e-01
  %2489 = fadd contract double %2488, 1.000000e+00
  %2490 = select i1 %2486, double 0x7FF0000000000000, double %2489
  %2491 = select i1 %2487, double 1.000000e+00, double %2490
  %2492 = fmul contract float %1883, 0xBFA32ACBC0000000
  %2493 = fmul float %2492, 0x3FF7154760000000
  %2494 = tail call float @llvm.rint.f32(float %2493)
  %2495 = fcmp ogt float %2492, 0x40562E4300000000
  %2496 = fcmp olt float %2492, 0xC059D1DA00000000
  %2497 = fneg float %2493
  %2498 = tail call float @llvm.fma.f32(float %2492, float 0x3FF7154760000000, float %2497)
  %2499 = tail call float @llvm.fma.f32(float %2492, float 0x3E54AE0BE0000000, float %2498)
  %2500 = fsub float %2493, %2494
  %2501 = fadd float %2499, %2500
  %2502 = tail call float @llvm.exp2.f32(float %2501)
  %2503 = fptosi float %2494 to i32
  %2504 = tail call float @llvm.amdgcn.ldexp.f32(float %2502, i32 %2503)
  %2505 = select i1 %2496, float 0.000000e+00, float %2504
  %2506 = select i1 %2495, float 0x7FF0000000000000, float %2505
  %2507 = fpext float %2506 to double
  %2508 = fmul contract double %2507, 0x3FA2B47B9FBE76C8
  %2509 = fadd contract double %2508, %2491
  %2510 = fdiv contract double 1.000000e+00, %2509
  %2511 = fptrunc double %2510 to float
  %2512 = fmul contract float %2511, 0x3FCADA6DA0000000
  %2513 = fmul contract float %2512, 0x40159999A0000000
  %2514 = fdiv contract float 1.100000e+01, %1876
  %2515 = tail call float @llvm.fabs.f32(float %2514)
  %2516 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2515)
  %2517 = fcmp olt float %2516, 0x3FE5555560000000
  %2518 = zext i1 %2517 to i32
  %2519 = tail call float @llvm.amdgcn.ldexp.f32(float %2516, i32 %2518)
  %2520 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2515)
  %2521 = sub nsw i32 %2520, %2518
  %2522 = fadd float %2519, -1.000000e+00
  %2523 = fadd float %2519, 1.000000e+00
  %2524 = fadd float %2523, -1.000000e+00
  %2525 = fsub float %2519, %2524
  %2526 = tail call float @llvm.amdgcn.rcp.f32(float %2523)
  %2527 = fmul float %2522, %2526
  %2528 = fmul float %2523, %2527
  %2529 = fneg float %2528
  %2530 = tail call float @llvm.fma.f32(float %2527, float %2523, float %2529)
  %2531 = tail call float @llvm.fma.f32(float %2527, float %2525, float %2530)
  %2532 = fadd float %2528, %2531
  %2533 = fsub float %2532, %2528
  %2534 = fsub float %2531, %2533
  %2535 = fsub float %2522, %2532
  %2536 = fsub float %2522, %2535
  %2537 = fsub float %2536, %2532
  %2538 = fsub float %2537, %2534
  %2539 = fadd float %2535, %2538
  %2540 = fmul float %2526, %2539
  %2541 = fadd float %2527, %2540
  %2542 = fsub float %2541, %2527
  %2543 = fsub float %2540, %2542
  %2544 = fmul float %2541, %2541
  %2545 = fneg float %2544
  %2546 = tail call float @llvm.fma.f32(float %2541, float %2541, float %2545)
  %2547 = fmul float %2543, 2.000000e+00
  %2548 = tail call float @llvm.fma.f32(float %2541, float %2547, float %2546)
  %2549 = fadd float %2544, %2548
  %2550 = fsub float %2549, %2544
  %2551 = fsub float %2548, %2550
  %2552 = tail call float @llvm.fmuladd.f32(float %2549, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2553 = tail call float @llvm.fmuladd.f32(float %2549, float %2552, float 0x3FD999BDE0000000)
  %2554 = sitofp i32 %2521 to float
  %2555 = fmul float %2554, 0x3FE62E4300000000
  %2556 = fneg float %2555
  %2557 = tail call float @llvm.fma.f32(float %2554, float 0x3FE62E4300000000, float %2556)
  %2558 = tail call float @llvm.fma.f32(float %2554, float 0xBE205C6100000000, float %2557)
  %2559 = fadd float %2555, %2558
  %2560 = fsub float %2559, %2555
  %2561 = fsub float %2558, %2560
  %2562 = tail call float @llvm.amdgcn.ldexp.f32(float %2541, i32 1)
  %2563 = fmul float %2541, %2549
  %2564 = fneg float %2563
  %2565 = tail call float @llvm.fma.f32(float %2549, float %2541, float %2564)
  %2566 = tail call float @llvm.fma.f32(float %2549, float %2543, float %2565)
  %2567 = tail call float @llvm.fma.f32(float %2551, float %2541, float %2566)
  %2568 = fadd float %2563, %2567
  %2569 = fsub float %2568, %2563
  %2570 = fsub float %2567, %2569
  %2571 = fmul float %2549, %2553
  %2572 = fneg float %2571
  %2573 = tail call float @llvm.fma.f32(float %2549, float %2553, float %2572)
  %2574 = tail call float @llvm.fma.f32(float %2551, float %2553, float %2573)
  %2575 = fadd float %2571, %2574
  %2576 = fsub float %2575, %2571
  %2577 = fsub float %2574, %2576
  %2578 = fadd float %2575, 0x3FE5555540000000
  %2579 = fadd float %2578, 0xBFE5555540000000
  %2580 = fsub float %2575, %2579
  %2581 = fadd float %2577, 0x3E2E720200000000
  %2582 = fadd float %2581, %2580
  %2583 = fadd float %2578, %2582
  %2584 = fsub float %2583, %2578
  %2585 = fsub float %2582, %2584
  %2586 = fmul float %2568, %2583
  %2587 = fneg float %2586
  %2588 = tail call float @llvm.fma.f32(float %2568, float %2583, float %2587)
  %2589 = tail call float @llvm.fma.f32(float %2568, float %2585, float %2588)
  %2590 = tail call float @llvm.fma.f32(float %2570, float %2583, float %2589)
  %2591 = tail call float @llvm.amdgcn.ldexp.f32(float %2543, i32 1)
  %2592 = fadd float %2586, %2590
  %2593 = fsub float %2592, %2586
  %2594 = fsub float %2590, %2593
  %2595 = fadd float %2562, %2592
  %2596 = fsub float %2595, %2562
  %2597 = fsub float %2592, %2596
  %2598 = fadd float %2591, %2594
  %2599 = fadd float %2598, %2597
  %2600 = fadd float %2595, %2599
  %2601 = fsub float %2600, %2595
  %2602 = fsub float %2599, %2601
  %2603 = fadd float %2559, %2600
  %2604 = fsub float %2603, %2559
  %2605 = fsub float %2603, %2604
  %2606 = fsub float %2559, %2605
  %2607 = fsub float %2600, %2604
  %2608 = fadd float %2607, %2606
  %2609 = fadd float %2561, %2602
  %2610 = fsub float %2609, %2561
  %2611 = fsub float %2609, %2610
  %2612 = fsub float %2561, %2611
  %2613 = fsub float %2602, %2610
  %2614 = fadd float %2613, %2612
  %2615 = fadd float %2609, %2608
  %2616 = fadd float %2603, %2615
  %2617 = fsub float %2616, %2603
  %2618 = fsub float %2615, %2617
  %2619 = fadd float %2614, %2618
  %2620 = fadd float %2616, %2619
  %2621 = fsub float %2620, %2616
  %2622 = fsub float %2619, %2621
  %2623 = fmul float %2620, 4.000000e+00
  %2624 = fneg float %2623
  %2625 = tail call float @llvm.fma.f32(float %2620, float 4.000000e+00, float %2624)
  %2626 = fmul float %2620, 0.000000e+00
  %2627 = tail call float @llvm.fma.f32(float %2622, float 4.000000e+00, float %2626)
  %2628 = fadd float %2625, %2627
  %2629 = fadd float %2623, %2628
  %2630 = fsub float %2629, %2623
  %2631 = fsub float %2628, %2630
  %2632 = tail call float @llvm.fabs.f32(float %2623) #3
  %2633 = fcmp oeq float %2632, 0x7FF0000000000000
  %2634 = select i1 %2633, float %2623, float %2629
  %2635 = tail call float @llvm.fabs.f32(float %2634) #3
  %2636 = fcmp oeq float %2635, 0x7FF0000000000000
  %2637 = select i1 %2636, float 0.000000e+00, float %2631
  %2638 = fcmp oeq float %2634, 0x40562E4300000000
  %2639 = select i1 %2638, float 0x3EE0000000000000, float 0.000000e+00
  %2640 = fsub float %2634, %2639
  %2641 = fadd float %2639, %2637
  %2642 = fmul float %2640, 0x3FF7154760000000
  %2643 = tail call float @llvm.rint.f32(float %2642)
  %2644 = fcmp ogt float %2640, 0x40562E4300000000
  %2645 = fcmp olt float %2640, 0xC059D1DA00000000
  %2646 = fneg float %2642
  %2647 = tail call float @llvm.fma.f32(float %2640, float 0x3FF7154760000000, float %2646)
  %2648 = tail call float @llvm.fma.f32(float %2640, float 0x3E54AE0BE0000000, float %2647)
  %2649 = fsub float %2642, %2643
  %2650 = fadd float %2648, %2649
  %2651 = tail call float @llvm.exp2.f32(float %2650)
  %2652 = fptosi float %2643 to i32
  %2653 = tail call float @llvm.amdgcn.ldexp.f32(float %2651, i32 %2652)
  %2654 = select i1 %2645, float 0.000000e+00, float %2653
  %2655 = select i1 %2644, float 0x7FF0000000000000, float %2654
  %2656 = tail call float @llvm.fma.f32(float %2655, float %2641, float %2655)
  %2657 = tail call float @llvm.fabs.f32(float %2655) #3
  %2658 = fcmp oeq float %2657, 0x7FF0000000000000
  %2659 = select i1 %2658, float %2655, float %2656
  %2660 = tail call float @llvm.fabs.f32(float %2659)
  %2661 = fcmp oeq float %2515, 0x7FF0000000000000
  %2662 = fcmp oeq float %2514, 0.000000e+00
  %2663 = or i1 %2662, %2661
  %2664 = select i1 %2662, float 0.000000e+00, float 0x7FF0000000000000
  %2665 = select i1 %2663, float %2664, float %2660
  %2666 = fcmp uno float %2514, 0.000000e+00
  %2667 = fadd contract float %2665, 1.000000e+00
  %2668 = select i1 %2666, float 0x7FF8000000000000, float %2667
  %2669 = fdiv contract float %2513, %2668
  %2670 = fdiv contract float %2669, 0x401B9999A0000000
  %2671 = fmul contract float %2511, 0x3FFB288BE0000000
  %2672 = fmul contract float %2671, 0x40159999A0000000
  %2673 = fdiv contract float 1.100000e+01, %1877
  %2674 = tail call float @llvm.fabs.f32(float %2673)
  %2675 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2674)
  %2676 = fcmp olt float %2675, 0x3FE5555560000000
  %2677 = zext i1 %2676 to i32
  %2678 = tail call float @llvm.amdgcn.ldexp.f32(float %2675, i32 %2677)
  %2679 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2674)
  %2680 = sub nsw i32 %2679, %2677
  %2681 = fadd float %2678, -1.000000e+00
  %2682 = fadd float %2678, 1.000000e+00
  %2683 = fadd float %2682, -1.000000e+00
  %2684 = fsub float %2678, %2683
  %2685 = tail call float @llvm.amdgcn.rcp.f32(float %2682)
  %2686 = fmul float %2681, %2685
  %2687 = fmul float %2682, %2686
  %2688 = fneg float %2687
  %2689 = tail call float @llvm.fma.f32(float %2686, float %2682, float %2688)
  %2690 = tail call float @llvm.fma.f32(float %2686, float %2684, float %2689)
  %2691 = fadd float %2687, %2690
  %2692 = fsub float %2691, %2687
  %2693 = fsub float %2690, %2692
  %2694 = fsub float %2681, %2691
  %2695 = fsub float %2681, %2694
  %2696 = fsub float %2695, %2691
  %2697 = fsub float %2696, %2693
  %2698 = fadd float %2694, %2697
  %2699 = fmul float %2685, %2698
  %2700 = fadd float %2686, %2699
  %2701 = fsub float %2700, %2686
  %2702 = fsub float %2699, %2701
  %2703 = fmul float %2700, %2700
  %2704 = fneg float %2703
  %2705 = tail call float @llvm.fma.f32(float %2700, float %2700, float %2704)
  %2706 = fmul float %2702, 2.000000e+00
  %2707 = tail call float @llvm.fma.f32(float %2700, float %2706, float %2705)
  %2708 = fadd float %2703, %2707
  %2709 = fsub float %2708, %2703
  %2710 = fsub float %2707, %2709
  %2711 = tail call float @llvm.fmuladd.f32(float %2708, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2712 = tail call float @llvm.fmuladd.f32(float %2708, float %2711, float 0x3FD999BDE0000000)
  %2713 = sitofp i32 %2680 to float
  %2714 = fmul float %2713, 0x3FE62E4300000000
  %2715 = fneg float %2714
  %2716 = tail call float @llvm.fma.f32(float %2713, float 0x3FE62E4300000000, float %2715)
  %2717 = tail call float @llvm.fma.f32(float %2713, float 0xBE205C6100000000, float %2716)
  %2718 = fadd float %2714, %2717
  %2719 = fsub float %2718, %2714
  %2720 = fsub float %2717, %2719
  %2721 = tail call float @llvm.amdgcn.ldexp.f32(float %2700, i32 1)
  %2722 = fmul float %2700, %2708
  %2723 = fneg float %2722
  %2724 = tail call float @llvm.fma.f32(float %2708, float %2700, float %2723)
  %2725 = tail call float @llvm.fma.f32(float %2708, float %2702, float %2724)
  %2726 = tail call float @llvm.fma.f32(float %2710, float %2700, float %2725)
  %2727 = fadd float %2722, %2726
  %2728 = fsub float %2727, %2722
  %2729 = fsub float %2726, %2728
  %2730 = fmul float %2708, %2712
  %2731 = fneg float %2730
  %2732 = tail call float @llvm.fma.f32(float %2708, float %2712, float %2731)
  %2733 = tail call float @llvm.fma.f32(float %2710, float %2712, float %2732)
  %2734 = fadd float %2730, %2733
  %2735 = fsub float %2734, %2730
  %2736 = fsub float %2733, %2735
  %2737 = fadd float %2734, 0x3FE5555540000000
  %2738 = fadd float %2737, 0xBFE5555540000000
  %2739 = fsub float %2734, %2738
  %2740 = fadd float %2736, 0x3E2E720200000000
  %2741 = fadd float %2740, %2739
  %2742 = fadd float %2737, %2741
  %2743 = fsub float %2742, %2737
  %2744 = fsub float %2741, %2743
  %2745 = fmul float %2727, %2742
  %2746 = fneg float %2745
  %2747 = tail call float @llvm.fma.f32(float %2727, float %2742, float %2746)
  %2748 = tail call float @llvm.fma.f32(float %2727, float %2744, float %2747)
  %2749 = tail call float @llvm.fma.f32(float %2729, float %2742, float %2748)
  %2750 = tail call float @llvm.amdgcn.ldexp.f32(float %2702, i32 1)
  %2751 = fadd float %2745, %2749
  %2752 = fsub float %2751, %2745
  %2753 = fsub float %2749, %2752
  %2754 = fadd float %2721, %2751
  %2755 = fsub float %2754, %2721
  %2756 = fsub float %2751, %2755
  %2757 = fadd float %2750, %2753
  %2758 = fadd float %2757, %2756
  %2759 = fadd float %2754, %2758
  %2760 = fsub float %2759, %2754
  %2761 = fsub float %2758, %2760
  %2762 = fadd float %2718, %2759
  %2763 = fsub float %2762, %2718
  %2764 = fsub float %2762, %2763
  %2765 = fsub float %2718, %2764
  %2766 = fsub float %2759, %2763
  %2767 = fadd float %2766, %2765
  %2768 = fadd float %2720, %2761
  %2769 = fsub float %2768, %2720
  %2770 = fsub float %2768, %2769
  %2771 = fsub float %2720, %2770
  %2772 = fsub float %2761, %2769
  %2773 = fadd float %2772, %2771
  %2774 = fadd float %2768, %2767
  %2775 = fadd float %2762, %2774
  %2776 = fsub float %2775, %2762
  %2777 = fsub float %2774, %2776
  %2778 = fadd float %2773, %2777
  %2779 = fadd float %2775, %2778
  %2780 = fsub float %2779, %2775
  %2781 = fsub float %2778, %2780
  %2782 = fmul float %2779, 4.000000e+00
  %2783 = fneg float %2782
  %2784 = tail call float @llvm.fma.f32(float %2779, float 4.000000e+00, float %2783)
  %2785 = fmul float %2779, 0.000000e+00
  %2786 = tail call float @llvm.fma.f32(float %2781, float 4.000000e+00, float %2785)
  %2787 = fadd float %2784, %2786
  %2788 = fadd float %2782, %2787
  %2789 = fsub float %2788, %2782
  %2790 = fsub float %2787, %2789
  %2791 = tail call float @llvm.fabs.f32(float %2782) #3
  %2792 = fcmp oeq float %2791, 0x7FF0000000000000
  %2793 = select i1 %2792, float %2782, float %2788
  %2794 = tail call float @llvm.fabs.f32(float %2793) #3
  %2795 = fcmp oeq float %2794, 0x7FF0000000000000
  %2796 = select i1 %2795, float 0.000000e+00, float %2790
  %2797 = fcmp oeq float %2793, 0x40562E4300000000
  %2798 = select i1 %2797, float 0x3EE0000000000000, float 0.000000e+00
  %2799 = fsub float %2793, %2798
  %2800 = fadd float %2798, %2796
  %2801 = fmul float %2799, 0x3FF7154760000000
  %2802 = tail call float @llvm.rint.f32(float %2801)
  %2803 = fcmp ogt float %2799, 0x40562E4300000000
  %2804 = fcmp olt float %2799, 0xC059D1DA00000000
  %2805 = fneg float %2801
  %2806 = tail call float @llvm.fma.f32(float %2799, float 0x3FF7154760000000, float %2805)
  %2807 = tail call float @llvm.fma.f32(float %2799, float 0x3E54AE0BE0000000, float %2806)
  %2808 = fsub float %2801, %2802
  %2809 = fadd float %2807, %2808
  %2810 = tail call float @llvm.exp2.f32(float %2809)
  %2811 = fptosi float %2802 to i32
  %2812 = tail call float @llvm.amdgcn.ldexp.f32(float %2810, i32 %2811)
  %2813 = select i1 %2804, float 0.000000e+00, float %2812
  %2814 = select i1 %2803, float 0x7FF0000000000000, float %2813
  %2815 = tail call float @llvm.fma.f32(float %2814, float %2800, float %2814)
  %2816 = tail call float @llvm.fabs.f32(float %2814) #3
  %2817 = fcmp oeq float %2816, 0x7FF0000000000000
  %2818 = select i1 %2817, float %2814, float %2815
  %2819 = tail call float @llvm.fabs.f32(float %2818)
  %2820 = fcmp oeq float %2674, 0x7FF0000000000000
  %2821 = fcmp oeq float %2673, 0.000000e+00
  %2822 = or i1 %2821, %2820
  %2823 = select i1 %2821, float 0.000000e+00, float 0x7FF0000000000000
  %2824 = select i1 %2822, float %2823, float %2819
  %2825 = fcmp uno float %2673, 0.000000e+00
  %2826 = fadd contract float %2824, 1.000000e+00
  %2827 = select i1 %2825, float 0x7FF8000000000000, float %2826
  %2828 = fdiv contract float %2672, %2827
  %2829 = fdiv contract float %2828, 0x401B9999A0000000
  %2830 = fadd contract float %1883, 5.000000e+01
  %2831 = fneg contract float %2830
  %2832 = fpext float %2831 to double
  %2833 = fdiv contract double %2832, 7.500000e+00
  %2834 = fmul double %2833, 0x3FF71547652B82FE
  %2835 = tail call double @llvm.rint.f64(double %2834)
  %2836 = fneg double %2835
  %2837 = tail call double @llvm.fma.f64(double %2836, double 0x3FE62E42FEFA39EF, double %2833)
  %2838 = tail call double @llvm.fma.f64(double %2836, double 0x3C7ABC9E3B39803F, double %2837)
  %2839 = tail call double @llvm.fma.f64(double %2838, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2840 = tail call double @llvm.fma.f64(double %2838, double %2839, double 0x3EC71DEE623FDE64)
  %2841 = tail call double @llvm.fma.f64(double %2838, double %2840, double 0x3EFA01997C89E6B0)
  %2842 = tail call double @llvm.fma.f64(double %2838, double %2841, double 0x3F2A01A014761F6E)
  %2843 = tail call double @llvm.fma.f64(double %2838, double %2842, double 0x3F56C16C1852B7B0)
  %2844 = tail call double @llvm.fma.f64(double %2838, double %2843, double 0x3F81111111122322)
  %2845 = tail call double @llvm.fma.f64(double %2838, double %2844, double 0x3FA55555555502A1)
  %2846 = tail call double @llvm.fma.f64(double %2838, double %2845, double 0x3FC5555555555511)
  %2847 = tail call double @llvm.fma.f64(double %2838, double %2846, double 0x3FE000000000000B)
  %2848 = tail call double @llvm.fma.f64(double %2838, double %2847, double 1.000000e+00)
  %2849 = tail call double @llvm.fma.f64(double %2838, double %2848, double 1.000000e+00)
  %2850 = fptosi double %2835 to i32
  %2851 = tail call double @llvm.amdgcn.ldexp.f64(double %2849, i32 %2850)
  %2852 = fcmp ogt double %2833, 1.024000e+03
  %2853 = fcmp olt double %2833, -1.075000e+03
  %2854 = fadd contract double %2851, 1.000000e+00
  %2855 = fdiv contract double 1.000000e+00, %2854
  %2856 = select i1 %2852, double 0.000000e+00, double %2855
  %2857 = select i1 %2853, double 1.000000e+00, double %2856
  %2858 = fptrunc double %2857 to float
  %2859 = fadd contract float %1883, 7.000000e+00
  %2860 = fpext float %2859 to double
  %2861 = fmul contract double %2860, 1.380000e-03
  %2862 = fmul contract double %2860, -1.230000e-01
  %2863 = fmul double %2862, 0x3FF71547652B82FE
  %2864 = tail call double @llvm.rint.f64(double %2863)
  %2865 = fneg double %2864
  %2866 = tail call double @llvm.fma.f64(double %2865, double 0x3FE62E42FEFA39EF, double %2862)
  %2867 = tail call double @llvm.fma.f64(double %2865, double 0x3C7ABC9E3B39803F, double %2866)
  %2868 = tail call double @llvm.fma.f64(double %2867, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2869 = tail call double @llvm.fma.f64(double %2867, double %2868, double 0x3EC71DEE623FDE64)
  %2870 = tail call double @llvm.fma.f64(double %2867, double %2869, double 0x3EFA01997C89E6B0)
  %2871 = tail call double @llvm.fma.f64(double %2867, double %2870, double 0x3F2A01A014761F6E)
  %2872 = tail call double @llvm.fma.f64(double %2867, double %2871, double 0x3F56C16C1852B7B0)
  %2873 = tail call double @llvm.fma.f64(double %2867, double %2872, double 0x3F81111111122322)
  %2874 = tail call double @llvm.fma.f64(double %2867, double %2873, double 0x3FA55555555502A1)
  %2875 = tail call double @llvm.fma.f64(double %2867, double %2874, double 0x3FC5555555555511)
  %2876 = tail call double @llvm.fma.f64(double %2867, double %2875, double 0x3FE000000000000B)
  %2877 = tail call double @llvm.fma.f64(double %2867, double %2876, double 1.000000e+00)
  %2878 = tail call double @llvm.fma.f64(double %2867, double %2877, double 1.000000e+00)
  %2879 = fptosi double %2864 to i32
  %2880 = tail call double @llvm.amdgcn.ldexp.f64(double %2878, i32 %2879)
  %2881 = fcmp ogt double %2862, 1.024000e+03
  %2882 = fcmp olt double %2862, -1.075000e+03
  %2883 = fsub contract double 1.000000e+00, %2880
  %2884 = select i1 %2881, double 0xFFF0000000000000, double %2883
  %2885 = select i1 %2882, double 1.000000e+00, double %2884
  %2886 = fdiv contract double %2861, %2885
  %2887 = fadd contract float %1883, 1.000000e+01
  %2888 = fpext float %2887 to double
  %2889 = fmul contract double %2888, 6.100000e-04
  %2890 = fmul contract double %2888, 1.450000e-01
  %2891 = fmul double %2890, 0x3FF71547652B82FE
  %2892 = tail call double @llvm.rint.f64(double %2891)
  %2893 = fneg double %2892
  %2894 = tail call double @llvm.fma.f64(double %2893, double 0x3FE62E42FEFA39EF, double %2890)
  %2895 = tail call double @llvm.fma.f64(double %2893, double 0x3C7ABC9E3B39803F, double %2894)
  %2896 = tail call double @llvm.fma.f64(double %2895, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2897 = tail call double @llvm.fma.f64(double %2895, double %2896, double 0x3EC71DEE623FDE64)
  %2898 = tail call double @llvm.fma.f64(double %2895, double %2897, double 0x3EFA01997C89E6B0)
  %2899 = tail call double @llvm.fma.f64(double %2895, double %2898, double 0x3F2A01A014761F6E)
  %2900 = tail call double @llvm.fma.f64(double %2895, double %2899, double 0x3F56C16C1852B7B0)
  %2901 = tail call double @llvm.fma.f64(double %2895, double %2900, double 0x3F81111111122322)
  %2902 = tail call double @llvm.fma.f64(double %2895, double %2901, double 0x3FA55555555502A1)
  %2903 = tail call double @llvm.fma.f64(double %2895, double %2902, double 0x3FC5555555555511)
  %2904 = tail call double @llvm.fma.f64(double %2895, double %2903, double 0x3FE000000000000B)
  %2905 = tail call double @llvm.fma.f64(double %2895, double %2904, double 1.000000e+00)
  %2906 = tail call double @llvm.fma.f64(double %2895, double %2905, double 1.000000e+00)
  %2907 = fptosi double %2892 to i32
  %2908 = tail call double @llvm.amdgcn.ldexp.f64(double %2906, i32 %2907)
  %2909 = fcmp ogt double %2890, 1.024000e+03
  %2910 = fcmp olt double %2890, -1.075000e+03
  %2911 = fadd contract double %2908, -1.000000e+00
  %2912 = select i1 %2909, double 0x7FF0000000000000, double %2911
  %2913 = select i1 %2910, double -1.000000e+00, double %2912
  %2914 = fdiv contract double %2889, %2913
  %2915 = fadd contract double %2886, %2914
  %2916 = fdiv contract double 1.000000e+00, %2915
  %2917 = fptrunc double %2916 to float
  %2918 = fsub contract float %2858, %1857
  %2919 = fdiv contract float %2918, %2917
  %2920 = getelementptr inbounds float, float addrspace(1)* %1843, i64 11
  store float %2919, float addrspace(1)* %2920, align 4, !tbaa !6
  %2921 = fadd contract float %1883, 3.300000e+01
  %2922 = fpext float %2921 to double
  %2923 = fdiv contract double %2922, 2.240000e+01
  %2924 = fmul double %2923, 0x3FF71547652B82FE
  %2925 = tail call double @llvm.rint.f64(double %2924)
  %2926 = fneg double %2925
  %2927 = tail call double @llvm.fma.f64(double %2926, double 0x3FE62E42FEFA39EF, double %2923)
  %2928 = tail call double @llvm.fma.f64(double %2926, double 0x3C7ABC9E3B39803F, double %2927)
  %2929 = fsub contract float %1883, %1929
  %2930 = tail call i1 @llvm.amdgcn.class.f32(float %1880, i32 144)
  %2931 = select i1 %2930, float 0x41F0000000000000, float 1.000000e+00
  %2932 = fmul float %1880, %2931
  %2933 = tail call float @llvm.log2.f32(float %2932)
  %2934 = fmul float %2933, 0x3FD3441340000000
  %2935 = tail call i1 @llvm.amdgcn.class.f32(float %2933, i32 519)
  %2936 = fneg float %2934
  %2937 = tail call float @llvm.fma.f32(float %2933, float 0x3FD3441340000000, float %2936)
  %2938 = tail call float @llvm.fma.f32(float %2933, float 0x3E509F79E0000000, float %2937)
  %2939 = fadd float %2934, %2938
  %2940 = select i1 %2935, float %2933, float %2939
  %2941 = select i1 %2930, float 0x4023441360000000, float 0.000000e+00
  %2942 = fsub contract float %2941, %2940
  %2943 = fadd contract float %2942, 3.000000e+00
  %2944 = tail call i1 @llvm.amdgcn.class.f32(float %1881, i32 144)
  %2945 = select i1 %2944, float 0x41F0000000000000, float 1.000000e+00
  %2946 = fmul float %1881, %2945
  %2947 = tail call float @llvm.log2.f32(float %2946)
  %2948 = fmul float %2947, 0x3FD3441340000000
  %2949 = tail call i1 @llvm.amdgcn.class.f32(float %2947, i32 519)
  %2950 = fneg float %2948
  %2951 = tail call float @llvm.fma.f32(float %2947, float 0x3FD3441340000000, float %2950)
  %2952 = tail call float @llvm.fma.f32(float %2947, float 0x3E509F79E0000000, float %2951)
  %2953 = fadd float %2948, %2952
  %2954 = select i1 %2949, float %2947, float %2953
  %2955 = select i1 %2944, float 0x4023441360000000, float 0.000000e+00
  %2956 = fsub contract float %2955, %2954
  %2957 = fadd contract float %2956, 3.000000e+00
  %2958 = fpext float %2943 to double
  %2959 = fadd contract double %2958, -7.200000e+00
  %2960 = fdiv contract double %2959, 6.000000e-01
  %2961 = fmul double %2960, 0x3FF71547652B82FE
  %2962 = tail call double @llvm.rint.f64(double %2961)
  %2963 = fneg double %2962
  %2964 = tail call double @llvm.fma.f64(double %2963, double 0x3FE62E42FEFA39EF, double %2960)
  %2965 = tail call double @llvm.fma.f64(double %2963, double 0x3C7ABC9E3B39803F, double %2964)
  %2966 = fpext float %2957 to double
  %2967 = fadd contract double %2966, -7.200000e+00
  %2968 = fdiv contract double %2967, 6.000000e-01
  %2969 = fmul double %2968, 0x3FF71547652B82FE
  %2970 = tail call double @llvm.rint.f64(double %2969)
  %2971 = fneg double %2970
  %2972 = tail call double @llvm.fma.f64(double %2971, double 0x3FE62E42FEFA39EF, double %2968)
  %2973 = tail call double @llvm.fma.f64(double %2971, double 0x3C7ABC9E3B39803F, double %2972)
  %2974 = fmul contract float %1878, 0x3F92C51980000000
  %2975 = fadd contract float %1879, %2974
  %2976 = fdiv contract float 0x401FDD6380000000, %2975
  %2977 = tail call i1 @llvm.amdgcn.class.f32(float %2976, i32 144)
  %2978 = select i1 %2977, float 0x41F0000000000000, float 1.000000e+00
  %2979 = fmul float %2976, %2978
  %2980 = tail call float @llvm.log2.f32(float %2979)
  %2981 = fmul float %2980, 0x3FE62E42E0000000
  %2982 = tail call i1 @llvm.amdgcn.class.f32(float %2980, i32 519)
  %2983 = fneg float %2981
  %2984 = tail call float @llvm.fma.f32(float %2980, float 0x3FE62E42E0000000, float %2983)
  %2985 = tail call float @llvm.fma.f32(float %2980, float 0x3E6EFA39E0000000, float %2984)
  %2986 = fadd float %2981, %2985
  %2987 = select i1 %2982, float %2980, float %2986
  %2988 = select i1 %2977, float 0x40362E4300000000, float 0.000000e+00
  %2989 = fsub float %2987, %2988
  %2990 = fmul contract float %2989, 0x403AB65BE0000000
  %2991 = fadd contract double %1960, -1.500000e+00
  %2992 = fdiv contract double %2991, -1.670000e+01
  %2993 = fmul double %2992, 0x3FF71547652B82FE
  %2994 = tail call double @llvm.rint.f64(double %2993)
  %2995 = fneg double %2994
  %2996 = tail call double @llvm.fma.f64(double %2995, double 0x3FE62E42FEFA39EF, double %2992)
  %2997 = tail call double @llvm.fma.f64(double %2995, double 0x3C7ABC9E3B39803F, double %2996)
  %2998 = tail call double @llvm.fma.f64(double %2997, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %2999 = tail call double @llvm.fma.f64(double %2997, double %2998, double 0x3EC71DEE623FDE64)
  %3000 = tail call double @llvm.fma.f64(double %2997, double %2999, double 0x3EFA01997C89E6B0)
  %3001 = tail call double @llvm.fma.f64(double %2997, double %3000, double 0x3F2A01A014761F6E)
  %3002 = tail call double @llvm.fma.f64(double %2997, double %3001, double 0x3F56C16C1852B7B0)
  %3003 = tail call double @llvm.fma.f64(double %2997, double %3002, double 0x3F81111111122322)
  %3004 = tail call double @llvm.fma.f64(double %2997, double %3003, double 0x3FA55555555502A1)
  %3005 = tail call double @llvm.fma.f64(double %2997, double %3004, double 0x3FC5555555555511)
  %3006 = tail call double @llvm.fma.f64(double %2997, double %3005, double 0x3FE000000000000B)
  %3007 = tail call double @llvm.fma.f64(double %2997, double %3006, double 1.000000e+00)
  %3008 = tail call double @llvm.fma.f64(double %2997, double %3007, double 1.000000e+00)
  %3009 = fptosi double %2994 to i32
  %3010 = tail call double @llvm.amdgcn.ldexp.f64(double %3008, i32 %3009)
  %3011 = fcmp ogt double %2992, 1.024000e+03
  %3012 = fcmp olt double %2992, -1.075000e+03
  %3013 = fadd contract double %3010, 1.000000e+00
  %3014 = fdiv contract double 1.000000e+00, %3013
  %3015 = select i1 %3011, double 0.000000e+00, double %3014
  %3016 = select i1 %3012, double 1.000000e+00, double %3015
  %3017 = fptrunc double %3016 to float
  %3018 = fadd contract float %1883, 3.000000e+01
  %3019 = fpext float %3018 to double
  %3020 = fmul contract double %3019, 7.190000e-05
  %3021 = fmul contract double %3019, -1.480000e-01
  %3022 = fmul double %3021, 0x3FF71547652B82FE
  %3023 = tail call double @llvm.rint.f64(double %3022)
  %3024 = fneg double %3023
  %3025 = tail call double @llvm.fma.f64(double %3024, double 0x3FE62E42FEFA39EF, double %3021)
  %3026 = tail call double @llvm.fma.f64(double %3024, double 0x3C7ABC9E3B39803F, double %3025)
  %3027 = tail call double @llvm.fma.f64(double %3026, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3028 = tail call double @llvm.fma.f64(double %3026, double %3027, double 0x3EC71DEE623FDE64)
  %3029 = tail call double @llvm.fma.f64(double %3026, double %3028, double 0x3EFA01997C89E6B0)
  %3030 = tail call double @llvm.fma.f64(double %3026, double %3029, double 0x3F2A01A014761F6E)
  %3031 = tail call double @llvm.fma.f64(double %3026, double %3030, double 0x3F56C16C1852B7B0)
  %3032 = tail call double @llvm.fma.f64(double %3026, double %3031, double 0x3F81111111122322)
  %3033 = tail call double @llvm.fma.f64(double %3026, double %3032, double 0x3FA55555555502A1)
  %3034 = tail call double @llvm.fma.f64(double %3026, double %3033, double 0x3FC5555555555511)
  %3035 = tail call double @llvm.fma.f64(double %3026, double %3034, double 0x3FE000000000000B)
  %3036 = tail call double @llvm.fma.f64(double %3026, double %3035, double 1.000000e+00)
  %3037 = tail call double @llvm.fma.f64(double %3026, double %3036, double 1.000000e+00)
  %3038 = fptosi double %3023 to i32
  %3039 = tail call double @llvm.amdgcn.ldexp.f64(double %3037, i32 %3038)
  %3040 = fcmp ogt double %3021, 1.024000e+03
  %3041 = fcmp olt double %3021, -1.075000e+03
  %3042 = fsub contract double 1.000000e+00, %3039
  %3043 = select i1 %3040, double 0xFFF0000000000000, double %3042
  %3044 = select i1 %3041, double 1.000000e+00, double %3043
  %3045 = fdiv contract double %3020, %3044
  %3046 = fmul contract double %3019, 1.310000e-04
  %3047 = fmul contract double %3019, 0x3FB19652BD3C3611
  %3048 = fmul double %3047, 0x3FF71547652B82FE
  %3049 = tail call double @llvm.rint.f64(double %3048)
  %3050 = fneg double %3049
  %3051 = tail call double @llvm.fma.f64(double %3050, double 0x3FE62E42FEFA39EF, double %3047)
  %3052 = tail call double @llvm.fma.f64(double %3050, double 0x3C7ABC9E3B39803F, double %3051)
  %3053 = tail call double @llvm.fma.f64(double %3052, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3054 = tail call double @llvm.fma.f64(double %3052, double %3053, double 0x3EC71DEE623FDE64)
  %3055 = tail call double @llvm.fma.f64(double %3052, double %3054, double 0x3EFA01997C89E6B0)
  %3056 = tail call double @llvm.fma.f64(double %3052, double %3055, double 0x3F2A01A014761F6E)
  %3057 = tail call double @llvm.fma.f64(double %3052, double %3056, double 0x3F56C16C1852B7B0)
  %3058 = tail call double @llvm.fma.f64(double %3052, double %3057, double 0x3F81111111122322)
  %3059 = tail call double @llvm.fma.f64(double %3052, double %3058, double 0x3FA55555555502A1)
  %3060 = tail call double @llvm.fma.f64(double %3052, double %3059, double 0x3FC5555555555511)
  %3061 = tail call double @llvm.fma.f64(double %3052, double %3060, double 0x3FE000000000000B)
  %3062 = tail call double @llvm.fma.f64(double %3052, double %3061, double 1.000000e+00)
  %3063 = tail call double @llvm.fma.f64(double %3052, double %3062, double 1.000000e+00)
  %3064 = fptosi double %3049 to i32
  %3065 = tail call double @llvm.amdgcn.ldexp.f64(double %3063, i32 %3064)
  %3066 = fcmp ogt double %3047, 1.024000e+03
  %3067 = fcmp olt double %3047, -1.075000e+03
  %3068 = fadd contract double %3065, -1.000000e+00
  %3069 = select i1 %3066, double 0x7FF0000000000000, double %3068
  %3070 = select i1 %3067, double -1.000000e+00, double %3069
  %3071 = fdiv contract double %3046, %3070
  %3072 = fadd contract double %3045, %3071
  %3073 = fdiv contract double 1.000000e+00, %3072
  %3074 = fptrunc double %3073 to float
  %3075 = fsub contract float %3017, %1858
  %3076 = fdiv contract float %3075, %3074
  %3077 = getelementptr inbounds float, float addrspace(1)* %1843, i64 12
  store float %3076, float addrspace(1)* %3077, align 4, !tbaa !6
  %3078 = tail call float @llvm.fabs.f32(float %1857)
  %3079 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3078)
  %3080 = fcmp olt float %3079, 0x3FE5555560000000
  %3081 = zext i1 %3080 to i32
  %3082 = tail call float @llvm.amdgcn.ldexp.f32(float %3079, i32 %3081)
  %3083 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3078)
  %3084 = sub nsw i32 %3083, %3081
  %3085 = fadd float %3082, -1.000000e+00
  %3086 = fadd float %3082, 1.000000e+00
  %3087 = fadd float %3086, -1.000000e+00
  %3088 = fsub float %3082, %3087
  %3089 = tail call float @llvm.amdgcn.rcp.f32(float %3086)
  %3090 = fmul float %3085, %3089
  %3091 = fmul float %3086, %3090
  %3092 = fneg float %3091
  %3093 = tail call float @llvm.fma.f32(float %3090, float %3086, float %3092)
  %3094 = tail call float @llvm.fma.f32(float %3090, float %3088, float %3093)
  %3095 = fadd float %3091, %3094
  %3096 = fsub float %3095, %3091
  %3097 = fsub float %3094, %3096
  %3098 = fsub float %3085, %3095
  %3099 = fsub float %3085, %3098
  %3100 = fsub float %3099, %3095
  %3101 = fsub float %3100, %3097
  %3102 = fadd float %3098, %3101
  %3103 = fmul float %3089, %3102
  %3104 = fadd float %3090, %3103
  %3105 = fsub float %3104, %3090
  %3106 = fsub float %3103, %3105
  %3107 = fmul float %3104, %3104
  %3108 = fneg float %3107
  %3109 = tail call float @llvm.fma.f32(float %3104, float %3104, float %3108)
  %3110 = fmul float %3106, 2.000000e+00
  %3111 = tail call float @llvm.fma.f32(float %3104, float %3110, float %3109)
  %3112 = fadd float %3107, %3111
  %3113 = fsub float %3112, %3107
  %3114 = fsub float %3111, %3113
  %3115 = tail call float @llvm.fmuladd.f32(float %3112, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3116 = tail call float @llvm.fmuladd.f32(float %3112, float %3115, float 0x3FD999BDE0000000)
  %3117 = sitofp i32 %3084 to float
  %3118 = fmul float %3117, 0x3FE62E4300000000
  %3119 = fneg float %3118
  %3120 = tail call float @llvm.fma.f32(float %3117, float 0x3FE62E4300000000, float %3119)
  %3121 = tail call float @llvm.fma.f32(float %3117, float 0xBE205C6100000000, float %3120)
  %3122 = fadd float %3118, %3121
  %3123 = fsub float %3122, %3118
  %3124 = fsub float %3121, %3123
  %3125 = tail call float @llvm.amdgcn.ldexp.f32(float %3104, i32 1)
  %3126 = fmul float %3104, %3112
  %3127 = fneg float %3126
  %3128 = tail call float @llvm.fma.f32(float %3112, float %3104, float %3127)
  %3129 = tail call float @llvm.fma.f32(float %3112, float %3106, float %3128)
  %3130 = tail call float @llvm.fma.f32(float %3114, float %3104, float %3129)
  %3131 = fadd float %3126, %3130
  %3132 = fsub float %3131, %3126
  %3133 = fsub float %3130, %3132
  %3134 = fmul float %3112, %3116
  %3135 = fneg float %3134
  %3136 = tail call float @llvm.fma.f32(float %3112, float %3116, float %3135)
  %3137 = tail call float @llvm.fma.f32(float %3114, float %3116, float %3136)
  %3138 = fadd float %3134, %3137
  %3139 = fsub float %3138, %3134
  %3140 = fsub float %3137, %3139
  %3141 = fadd float %3138, 0x3FE5555540000000
  %3142 = fadd float %3141, 0xBFE5555540000000
  %3143 = fsub float %3138, %3142
  %3144 = fadd float %3140, 0x3E2E720200000000
  %3145 = fadd float %3144, %3143
  %3146 = fadd float %3141, %3145
  %3147 = fsub float %3146, %3141
  %3148 = fsub float %3145, %3147
  %3149 = fmul float %3131, %3146
  %3150 = fneg float %3149
  %3151 = tail call float @llvm.fma.f32(float %3131, float %3146, float %3150)
  %3152 = tail call float @llvm.fma.f32(float %3131, float %3148, float %3151)
  %3153 = tail call float @llvm.fma.f32(float %3133, float %3146, float %3152)
  %3154 = tail call float @llvm.amdgcn.ldexp.f32(float %3106, i32 1)
  %3155 = fadd float %3149, %3153
  %3156 = fsub float %3155, %3149
  %3157 = fsub float %3153, %3156
  %3158 = fadd float %3125, %3155
  %3159 = fsub float %3158, %3125
  %3160 = fsub float %3155, %3159
  %3161 = fadd float %3154, %3157
  %3162 = fadd float %3161, %3160
  %3163 = fadd float %3158, %3162
  %3164 = fsub float %3163, %3158
  %3165 = fsub float %3162, %3164
  %3166 = fadd float %3122, %3163
  %3167 = fsub float %3166, %3122
  %3168 = fsub float %3166, %3167
  %3169 = fsub float %3122, %3168
  %3170 = fsub float %3163, %3167
  %3171 = fadd float %3170, %3169
  %3172 = fadd float %3124, %3165
  %3173 = fsub float %3172, %3124
  %3174 = fsub float %3172, %3173
  %3175 = fsub float %3124, %3174
  %3176 = fsub float %3165, %3173
  %3177 = fadd float %3176, %3175
  %3178 = fadd float %3172, %3171
  %3179 = fadd float %3166, %3178
  %3180 = fsub float %3179, %3166
  %3181 = fsub float %3178, %3180
  %3182 = fadd float %3177, %3181
  %3183 = fadd float %3179, %3182
  %3184 = fsub float %3183, %3179
  %3185 = fsub float %3182, %3184
  %3186 = fmul float %3183, 2.000000e+00
  %3187 = fneg float %3186
  %3188 = tail call float @llvm.fma.f32(float %3183, float 2.000000e+00, float %3187)
  %3189 = fmul float %3183, 0.000000e+00
  %3190 = tail call float @llvm.fma.f32(float %3185, float 2.000000e+00, float %3189)
  %3191 = fadd float %3188, %3190
  %3192 = fadd float %3186, %3191
  %3193 = tail call float @llvm.fabs.f32(float %3186) #3
  %3194 = fcmp oeq float %3193, 0x7FF0000000000000
  %3195 = select i1 %3194, float %3186, float %3192
  %3196 = fcmp oeq float %3195, 0x40562E4300000000
  %3197 = select i1 %3196, float 0x3EE0000000000000, float 0.000000e+00
  %3198 = fsub float %3195, %3197
  %3199 = fmul float %3198, 0x3FF7154760000000
  %3200 = tail call float @llvm.rint.f32(float %3199)
  %3201 = fcmp ogt float %3198, 0x40562E4300000000
  %3202 = fcmp olt float %3198, 0xC059D1DA00000000
  %3203 = fneg float %3199
  %3204 = tail call float @llvm.fma.f32(float %3198, float 0x3FF7154760000000, float %3203)
  %3205 = tail call float @llvm.fma.f32(float %3198, float 0x3E54AE0BE0000000, float %3204)
  %3206 = fsub float %3199, %3200
  %3207 = fadd float %3205, %3206
  %3208 = tail call float @llvm.exp2.f32(float %3207)
  %3209 = fptosi float %3200 to i32
  %3210 = tail call float @llvm.amdgcn.ldexp.f32(float %3208, i32 %3209)
  %3211 = select i1 %3202, float 0.000000e+00, float %3210
  %3212 = select i1 %3201, float 0x7FF0000000000000, float %3211
  %3213 = fcmp oeq float %1857, 0.000000e+00
  %3214 = fsub contract float %1883, %2990
  %3215 = tail call float @llvm.fabs.f32(float %1858)
  %3216 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3215)
  %3217 = fcmp olt float %3216, 0x3FE5555560000000
  %3218 = zext i1 %3217 to i32
  %3219 = tail call float @llvm.amdgcn.ldexp.f32(float %3216, i32 %3218)
  %3220 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3215)
  %3221 = sub nsw i32 %3220, %3218
  %3222 = fadd float %3219, -1.000000e+00
  %3223 = fadd float %3219, 1.000000e+00
  %3224 = fadd float %3223, -1.000000e+00
  %3225 = fsub float %3219, %3224
  %3226 = tail call float @llvm.amdgcn.rcp.f32(float %3223)
  %3227 = fmul float %3222, %3226
  %3228 = fmul float %3223, %3227
  %3229 = fneg float %3228
  %3230 = tail call float @llvm.fma.f32(float %3227, float %3223, float %3229)
  %3231 = tail call float @llvm.fma.f32(float %3227, float %3225, float %3230)
  %3232 = fadd float %3228, %3231
  %3233 = fsub float %3232, %3228
  %3234 = fsub float %3231, %3233
  %3235 = fsub float %3222, %3232
  %3236 = fsub float %3222, %3235
  %3237 = fsub float %3236, %3232
  %3238 = fsub float %3237, %3234
  %3239 = fadd float %3235, %3238
  %3240 = fmul float %3226, %3239
  %3241 = fadd float %3227, %3240
  %3242 = fsub float %3241, %3227
  %3243 = fsub float %3240, %3242
  %3244 = fmul float %3241, %3241
  %3245 = fneg float %3244
  %3246 = tail call float @llvm.fma.f32(float %3241, float %3241, float %3245)
  %3247 = fmul float %3243, 2.000000e+00
  %3248 = tail call float @llvm.fma.f32(float %3241, float %3247, float %3246)
  %3249 = fadd float %3244, %3248
  %3250 = fsub float %3249, %3244
  %3251 = fsub float %3248, %3250
  %3252 = tail call float @llvm.fmuladd.f32(float %3249, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3253 = tail call float @llvm.fmuladd.f32(float %3249, float %3252, float 0x3FD999BDE0000000)
  %3254 = sitofp i32 %3221 to float
  %3255 = fmul float %3254, 0x3FE62E4300000000
  %3256 = fneg float %3255
  %3257 = tail call float @llvm.fma.f32(float %3254, float 0x3FE62E4300000000, float %3256)
  %3258 = tail call float @llvm.fma.f32(float %3254, float 0xBE205C6100000000, float %3257)
  %3259 = fadd float %3255, %3258
  %3260 = fsub float %3259, %3255
  %3261 = fsub float %3258, %3260
  %3262 = tail call float @llvm.amdgcn.ldexp.f32(float %3241, i32 1)
  %3263 = fmul float %3241, %3249
  %3264 = fneg float %3263
  %3265 = tail call float @llvm.fma.f32(float %3249, float %3241, float %3264)
  %3266 = tail call float @llvm.fma.f32(float %3249, float %3243, float %3265)
  %3267 = tail call float @llvm.fma.f32(float %3251, float %3241, float %3266)
  %3268 = fadd float %3263, %3267
  %3269 = fsub float %3268, %3263
  %3270 = fsub float %3267, %3269
  %3271 = fmul float %3249, %3253
  %3272 = fneg float %3271
  %3273 = tail call float @llvm.fma.f32(float %3249, float %3253, float %3272)
  %3274 = tail call float @llvm.fma.f32(float %3251, float %3253, float %3273)
  %3275 = fadd float %3271, %3274
  %3276 = fsub float %3275, %3271
  %3277 = fsub float %3274, %3276
  %3278 = fadd float %3275, 0x3FE5555540000000
  %3279 = fadd float %3278, 0xBFE5555540000000
  %3280 = fsub float %3275, %3279
  %3281 = fadd float %3277, 0x3E2E720200000000
  %3282 = fadd float %3281, %3280
  %3283 = fadd float %3278, %3282
  %3284 = fsub float %3283, %3278
  %3285 = fsub float %3282, %3284
  %3286 = fmul float %3268, %3283
  %3287 = fneg float %3286
  %3288 = tail call float @llvm.fma.f32(float %3268, float %3283, float %3287)
  %3289 = tail call float @llvm.fma.f32(float %3268, float %3285, float %3288)
  %3290 = tail call float @llvm.fma.f32(float %3270, float %3283, float %3289)
  %3291 = tail call float @llvm.amdgcn.ldexp.f32(float %3243, i32 1)
  %3292 = fadd float %3286, %3290
  %3293 = fsub float %3292, %3286
  %3294 = fsub float %3290, %3293
  %3295 = fadd float %3262, %3292
  %3296 = fsub float %3295, %3262
  %3297 = fsub float %3292, %3296
  %3298 = fadd float %3291, %3294
  %3299 = fadd float %3298, %3297
  %3300 = fadd float %3295, %3299
  %3301 = fsub float %3300, %3295
  %3302 = fsub float %3299, %3301
  %3303 = fadd float %3259, %3300
  %3304 = fsub float %3303, %3259
  %3305 = fsub float %3303, %3304
  %3306 = fsub float %3259, %3305
  %3307 = fsub float %3300, %3304
  %3308 = fadd float %3307, %3306
  %3309 = fadd float %3261, %3302
  %3310 = fsub float %3309, %3261
  %3311 = fsub float %3309, %3310
  %3312 = fsub float %3261, %3311
  %3313 = fsub float %3302, %3310
  %3314 = fadd float %3313, %3312
  %3315 = fadd float %3309, %3308
  %3316 = fadd float %3303, %3315
  %3317 = fsub float %3316, %3303
  %3318 = fsub float %3315, %3317
  %3319 = fadd float %3314, %3318
  %3320 = fadd float %3316, %3319
  %3321 = fsub float %3320, %3316
  %3322 = fsub float %3319, %3321
  %3323 = fmul float %3320, 2.000000e+00
  %3324 = fneg float %3323
  %3325 = tail call float @llvm.fma.f32(float %3320, float 2.000000e+00, float %3324)
  %3326 = fmul float %3320, 0.000000e+00
  %3327 = tail call float @llvm.fma.f32(float %3322, float 2.000000e+00, float %3326)
  %3328 = fadd float %3325, %3327
  %3329 = fadd float %3323, %3328
  %3330 = tail call float @llvm.fabs.f32(float %3323) #3
  %3331 = fcmp oeq float %3330, 0x7FF0000000000000
  %3332 = select i1 %3331, float %3323, float %3329
  %3333 = fcmp oeq float %3332, 0x40562E4300000000
  %3334 = select i1 %3333, float 0x3EE0000000000000, float 0.000000e+00
  %3335 = fsub float %3332, %3334
  %3336 = fmul float %3335, 0x3FF7154760000000
  %3337 = tail call float @llvm.rint.f32(float %3336)
  %3338 = fcmp ogt float %3335, 0x40562E4300000000
  %3339 = fcmp olt float %3335, 0xC059D1DA00000000
  %3340 = fneg float %3336
  %3341 = tail call float @llvm.fma.f32(float %3335, float 0x3FF7154760000000, float %3340)
  %3342 = tail call float @llvm.fma.f32(float %3335, float 0x3E54AE0BE0000000, float %3341)
  %3343 = fsub float %3336, %3337
  %3344 = fadd float %3342, %3343
  %3345 = tail call float @llvm.exp2.f32(float %3344)
  %3346 = fptosi float %3337 to i32
  %3347 = tail call float @llvm.amdgcn.ldexp.f32(float %3345, i32 %3346)
  %3348 = select i1 %3339, float 0.000000e+00, float %3347
  %3349 = select i1 %3338, float 0x7FF0000000000000, float %3348
  %3350 = fcmp oeq float %1858, 0.000000e+00
  %3351 = fdiv contract double %1960, 5.980000e+00
  %3352 = fsub contract double 7.488000e+00, %3351
  %3353 = fmul double %3352, 0x3FF71547652B82FE
  %3354 = tail call double @llvm.rint.f64(double %3353)
  %3355 = fneg double %3354
  %3356 = tail call double @llvm.fma.f64(double %3355, double 0x3FE62E42FEFA39EF, double %3352)
  %3357 = tail call double @llvm.fma.f64(double %3355, double 0x3C7ABC9E3B39803F, double %3356)
  %3358 = tail call double @llvm.fma.f64(double %3357, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3359 = tail call double @llvm.fma.f64(double %3357, double %3358, double 0x3EC71DEE623FDE64)
  %3360 = tail call double @llvm.fma.f64(double %3357, double %3359, double 0x3EFA01997C89E6B0)
  %3361 = tail call double @llvm.fma.f64(double %3357, double %3360, double 0x3F2A01A014761F6E)
  %3362 = tail call double @llvm.fma.f64(double %3357, double %3361, double 0x3F56C16C1852B7B0)
  %3363 = tail call double @llvm.fma.f64(double %3357, double %3362, double 0x3F81111111122322)
  %3364 = tail call double @llvm.fma.f64(double %3357, double %3363, double 0x3FA55555555502A1)
  %3365 = tail call double @llvm.fma.f64(double %3357, double %3364, double 0x3FC5555555555511)
  %3366 = tail call double @llvm.fma.f64(double %3357, double %3365, double 0x3FE000000000000B)
  %3367 = tail call double @llvm.fma.f64(double %3357, double %3366, double 1.000000e+00)
  %3368 = tail call double @llvm.fma.f64(double %3357, double %3367, double 1.000000e+00)
  %3369 = fptosi double %3354 to i32
  %3370 = tail call double @llvm.amdgcn.ldexp.f64(double %3368, i32 %3369)
  %3371 = fcmp ogt double %3352, 1.024000e+03
  %3372 = fcmp olt double %3352, -1.075000e+03
  %3373 = fadd contract double %3370, 1.000000e+00
  %3374 = fdiv contract double 1.000000e+00, %3373
  %3375 = select i1 %3371, double 0.000000e+00, double %3374
  %3376 = select i1 %3372, double 1.000000e+00, double %3375
  %3377 = fptrunc double %3376 to float
  %3378 = fadd contract double %1960, 3.000000e+00
  %3379 = fdiv contract double %3378, -1.500000e+01
  %3380 = fmul double %3379, 0x3FF71547652B82FE
  %3381 = tail call double @llvm.rint.f64(double %3380)
  %3382 = fneg double %3381
  %3383 = tail call double @llvm.fma.f64(double %3382, double 0x3FE62E42FEFA39EF, double %3379)
  %3384 = tail call double @llvm.fma.f64(double %3382, double 0x3C7ABC9E3B39803F, double %3383)
  %3385 = tail call double @llvm.fma.f64(double %3384, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3386 = tail call double @llvm.fma.f64(double %3384, double %3385, double 0x3EC71DEE623FDE64)
  %3387 = tail call double @llvm.fma.f64(double %3384, double %3386, double 0x3EFA01997C89E6B0)
  %3388 = tail call double @llvm.fma.f64(double %3384, double %3387, double 0x3F2A01A014761F6E)
  %3389 = tail call double @llvm.fma.f64(double %3384, double %3388, double 0x3F56C16C1852B7B0)
  %3390 = tail call double @llvm.fma.f64(double %3384, double %3389, double 0x3F81111111122322)
  %3391 = tail call double @llvm.fma.f64(double %3384, double %3390, double 0x3FA55555555502A1)
  %3392 = tail call double @llvm.fma.f64(double %3384, double %3391, double 0x3FC5555555555511)
  %3393 = tail call double @llvm.fma.f64(double %3384, double %3392, double 0x3FE000000000000B)
  %3394 = tail call double @llvm.fma.f64(double %3384, double %3393, double 1.000000e+00)
  %3395 = tail call double @llvm.fma.f64(double %3384, double %3394, double 1.000000e+00)
  %3396 = fptosi double %3381 to i32
  %3397 = tail call double @llvm.amdgcn.ldexp.f64(double %3395, i32 %3396)
  %3398 = fcmp ogt double %3379, 1.024000e+03
  %3399 = fcmp olt double %3379, -1.075000e+03
  %3400 = fadd contract double %3397, 1.000000e+00
  %3401 = fdiv contract double 1.000000e+00, %3400
  %3402 = select i1 %3398, double 0.000000e+00, double %3401
  %3403 = select i1 %3399, double 1.000000e+00, double %3402
  %3404 = fptrunc double %3403 to float
  %3405 = fadd contract double %1960, 3.350000e+01
  %3406 = fdiv contract double %3405, 1.000000e+01
  %3407 = fmul double %3406, 0x3FF71547652B82FE
  %3408 = tail call double @llvm.rint.f64(double %3407)
  %3409 = fneg double %3408
  %3410 = tail call double @llvm.fma.f64(double %3409, double 0x3FE62E42FEFA39EF, double %3406)
  %3411 = tail call double @llvm.fma.f64(double %3409, double 0x3C7ABC9E3B39803F, double %3410)
  %3412 = tail call double @llvm.fma.f64(double %3411, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3413 = tail call double @llvm.fma.f64(double %3411, double %3412, double 0x3EC71DEE623FDE64)
  %3414 = tail call double @llvm.fma.f64(double %3411, double %3413, double 0x3EFA01997C89E6B0)
  %3415 = tail call double @llvm.fma.f64(double %3411, double %3414, double 0x3F2A01A014761F6E)
  %3416 = tail call double @llvm.fma.f64(double %3411, double %3415, double 0x3F56C16C1852B7B0)
  %3417 = tail call double @llvm.fma.f64(double %3411, double %3416, double 0x3F81111111122322)
  %3418 = tail call double @llvm.fma.f64(double %3411, double %3417, double 0x3FA55555555502A1)
  %3419 = tail call double @llvm.fma.f64(double %3411, double %3418, double 0x3FC5555555555511)
  %3420 = tail call double @llvm.fma.f64(double %3411, double %3419, double 0x3FE000000000000B)
  %3421 = tail call double @llvm.fma.f64(double %3411, double %3420, double 1.000000e+00)
  %3422 = tail call double @llvm.fma.f64(double %3411, double %3421, double 1.000000e+00)
  %3423 = fptosi double %3408 to i32
  %3424 = tail call double @llvm.amdgcn.ldexp.f64(double %3422, i32 %3423)
  %3425 = fcmp ogt double %3406, 1.024000e+03
  %3426 = fcmp olt double %3406, -1.075000e+03
  %3427 = fadd contract double %3424, 1.000000e+00
  %3428 = select i1 %3425, double 0x7FF0000000000000, double %3427
  %3429 = select i1 %3426, double 1.000000e+00, double %3428
  %3430 = fdiv contract double 1.000000e+00, %3429
  %3431 = fptrunc double %3430 to float
  %3432 = fdiv contract double %3378, 1.500000e+01
  %3433 = fmul double %3432, 0x3FF71547652B82FE
  %3434 = tail call double @llvm.rint.f64(double %3433)
  %3435 = fneg double %3434
  %3436 = tail call double @llvm.fma.f64(double %3435, double 0x3FE62E42FEFA39EF, double %3432)
  %3437 = tail call double @llvm.fma.f64(double %3435, double 0x3C7ABC9E3B39803F, double %3436)
  %3438 = tail call double @llvm.fma.f64(double %3437, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3439 = tail call double @llvm.fma.f64(double %3437, double %3438, double 0x3EC71DEE623FDE64)
  %3440 = tail call double @llvm.fma.f64(double %3437, double %3439, double 0x3EFA01997C89E6B0)
  %3441 = tail call double @llvm.fma.f64(double %3437, double %3440, double 0x3F2A01A014761F6E)
  %3442 = tail call double @llvm.fma.f64(double %3437, double %3441, double 0x3F56C16C1852B7B0)
  %3443 = tail call double @llvm.fma.f64(double %3437, double %3442, double 0x3F81111111122322)
  %3444 = tail call double @llvm.fma.f64(double %3437, double %3443, double 0x3FA55555555502A1)
  %3445 = tail call double @llvm.fma.f64(double %3437, double %3444, double 0x3FC5555555555511)
  %3446 = tail call double @llvm.fma.f64(double %3437, double %3445, double 0x3FE000000000000B)
  %3447 = tail call double @llvm.fma.f64(double %3437, double %3446, double 1.000000e+00)
  %3448 = tail call double @llvm.fma.f64(double %3437, double %3447, double 1.000000e+00)
  %3449 = fptosi double %3434 to i32
  %3450 = tail call double @llvm.amdgcn.ldexp.f64(double %3448, i32 %3449)
  %3451 = fcmp ogt double %3432, 1.024000e+03
  %3452 = fcmp olt double %3432, -1.075000e+03
  %3453 = fadd contract double %3450, 1.000000e+00
  %3454 = fdiv contract double 9.000000e+00, %3453
  %3455 = fadd contract double %3454, 5.000000e-01
  %3456 = select i1 %3451, double 5.000000e-01, double %3455
  %3457 = select i1 %3452, double 9.500000e+00, double %3456
  %3458 = fptrunc double %3457 to float
  %3459 = fadd contract double %1960, 6.000000e+01
  %3460 = fdiv contract double %3459, 1.000000e+01
  %3461 = fmul double %3460, 0x3FF71547652B82FE
  %3462 = tail call double @llvm.rint.f64(double %3461)
  %3463 = fneg double %3462
  %3464 = tail call double @llvm.fma.f64(double %3463, double 0x3FE62E42FEFA39EF, double %3460)
  %3465 = tail call double @llvm.fma.f64(double %3463, double 0x3C7ABC9E3B39803F, double %3464)
  %3466 = tail call double @llvm.fma.f64(double %3465, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3467 = tail call double @llvm.fma.f64(double %3465, double %3466, double 0x3EC71DEE623FDE64)
  %3468 = tail call double @llvm.fma.f64(double %3465, double %3467, double 0x3EFA01997C89E6B0)
  %3469 = tail call double @llvm.fma.f64(double %3465, double %3468, double 0x3F2A01A014761F6E)
  %3470 = tail call double @llvm.fma.f64(double %3465, double %3469, double 0x3F56C16C1852B7B0)
  %3471 = tail call double @llvm.fma.f64(double %3465, double %3470, double 0x3F81111111122322)
  %3472 = tail call double @llvm.fma.f64(double %3465, double %3471, double 0x3FA55555555502A1)
  %3473 = tail call double @llvm.fma.f64(double %3465, double %3472, double 0x3FC5555555555511)
  %3474 = tail call double @llvm.fma.f64(double %3465, double %3473, double 0x3FE000000000000B)
  %3475 = tail call double @llvm.fma.f64(double %3465, double %3474, double 1.000000e+00)
  %3476 = tail call double @llvm.fma.f64(double %3465, double %3475, double 1.000000e+00)
  %3477 = fptosi double %3462 to i32
  %3478 = tail call double @llvm.amdgcn.ldexp.f64(double %3476, i32 %3477)
  %3479 = fcmp ogt double %3460, 1.024000e+03
  %3480 = fcmp olt double %3460, -1.075000e+03
  %3481 = fadd contract double %3478, 1.000000e+00
  %3482 = select i1 %3479, double 0x7FF0000000000000, double %3481
  %3483 = select i1 %3480, double 1.000000e+00, double %3482
  %3484 = fdiv contract double 3.000000e+03, %3483
  %3485 = fadd contract double %3484, 3.000000e+01
  %3486 = fptrunc double %3485 to float
  %3487 = fdiv contract double 2.800000e+03, %3483
  %3488 = fadd contract double %3487, 2.200000e+02
  %3489 = fptrunc double %3488 to float
  %3490 = fsub contract float %3404, %1853
  %3491 = fdiv contract float %3490, %3458
  %3492 = getelementptr inbounds float, float addrspace(1)* %1843, i64 7
  store float %3491, float addrspace(1)* %3492, align 4, !tbaa !6
  %3493 = fsub contract float %3431, %1854
  %3494 = fdiv contract float %3493, %3486
  %3495 = getelementptr inbounds float, float addrspace(1)* %1843, i64 8
  store float %3494, float addrspace(1)* %3495, align 4, !tbaa !6
  %3496 = fsub contract float %3431, %1884
  %3497 = fdiv contract float %3496, %3489
  %3498 = getelementptr inbounds float, float addrspace(1)* %1843, i64 39
  store float %3497, float addrspace(1)* %3498, align 4, !tbaa !6
  %3499 = fpext float %2929 to double
  %3500 = fmul contract float %1883, %1989
  %3501 = fdiv contract float %3500, 3.000000e+01
  %3502 = fdiv contract float %3501, 3.000000e+01
  %3503 = fmul float %3502, 0x3FF7154760000000
  %3504 = tail call float @llvm.rint.f32(float %3503)
  %3505 = fcmp ogt float %3502, 0x40562E4300000000
  %3506 = fcmp olt float %3502, 0xC059D1DA00000000
  %3507 = fneg float %3503
  %3508 = tail call float @llvm.fma.f32(float %3502, float 0x3FF7154760000000, float %3507)
  %3509 = tail call float @llvm.fma.f32(float %3502, float 0x3E54AE0BE0000000, float %3508)
  %3510 = fsub float %3503, %3504
  %3511 = fadd float %3509, %3510
  %3512 = tail call float @llvm.exp2.f32(float %3511)
  %3513 = fptosi float %3504 to i32
  %3514 = tail call float @llvm.amdgcn.ldexp.f32(float %3512, i32 %3513)
  %3515 = select i1 %3506, float 0.000000e+00, float %3514
  %3516 = select i1 %3505, float 0x7FF0000000000000, float %3515
  %3517 = fpext float %3516 to double
  %3518 = fmul contract double %3517, 3.500000e+00
  %3519 = fadd contract double %3518, 1.500000e+00
  %3520 = fptrunc double %3519 to float
  %3521 = fdiv contract double 2.000000e+01, %3429
  %3522 = fadd contract double %3521, 2.000000e+01
  %3523 = fptrunc double %3522 to float
  %3524 = fsub contract float %3404, %1855
  %3525 = fdiv contract float %3524, %3520
  %3526 = getelementptr inbounds float, float addrspace(1)* %1843, i64 9
  store float %3525, float addrspace(1)* %3526, align 4, !tbaa !6
  %3527 = fsub contract float %3431, %1856
  %3528 = fdiv contract float %3527, %3523
  %3529 = getelementptr inbounds float, float addrspace(1)* %1843, i64 10
  store float %3528, float addrspace(1)* %3529, align 4, !tbaa !6
  %3530 = fadd contract double %3499, -5.921500e+01
  %3531 = fmul contract double %3530, 2.385000e-01
  %3532 = fmul double %3531, 0x3FF71547652B82FE
  %3533 = tail call double @llvm.rint.f64(double %3532)
  %3534 = fneg double %3533
  %3535 = tail call double @llvm.fma.f64(double %3534, double 0x3FE62E42FEFA39EF, double %3531)
  %3536 = tail call double @llvm.fma.f64(double %3534, double 0x3C7ABC9E3B39803F, double %3535)
  %3537 = tail call double @llvm.fma.f64(double %3536, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3538 = tail call double @llvm.fma.f64(double %3536, double %3537, double 0x3EC71DEE623FDE64)
  %3539 = tail call double @llvm.fma.f64(double %3536, double %3538, double 0x3EFA01997C89E6B0)
  %3540 = tail call double @llvm.fma.f64(double %3536, double %3539, double 0x3F2A01A014761F6E)
  %3541 = tail call double @llvm.fma.f64(double %3536, double %3540, double 0x3F56C16C1852B7B0)
  %3542 = tail call double @llvm.fma.f64(double %3536, double %3541, double 0x3F81111111122322)
  %3543 = tail call double @llvm.fma.f64(double %3536, double %3542, double 0x3FA55555555502A1)
  %3544 = tail call double @llvm.fma.f64(double %3536, double %3543, double 0x3FC5555555555511)
  %3545 = tail call double @llvm.fma.f64(double %3536, double %3544, double 0x3FE000000000000B)
  %3546 = tail call double @llvm.fma.f64(double %3536, double %3545, double 1.000000e+00)
  %3547 = tail call double @llvm.fma.f64(double %3536, double %3546, double 1.000000e+00)
  %3548 = fptosi double %3533 to i32
  %3549 = tail call double @llvm.amdgcn.ldexp.f64(double %3547, i32 %3548)
  %3550 = fcmp ogt double %3531, 1.024000e+03
  %3551 = fcmp olt double %3531, -1.075000e+03
  %3552 = fadd contract double %3549, 1.000000e+00
  %3553 = fdiv contract double 1.020000e+00, %3552
  %3554 = select i1 %3550, double 0.000000e+00, double %3553
  %3555 = select i1 %3551, double 1.020000e+00, double %3554
  %3556 = fptrunc double %3555 to float
  %3557 = fadd contract double %1960, 5.476000e+00
  %3558 = fpext float %1929 to double
  %3559 = fsub contract double %3557, %3558
  %3560 = fmul contract double %3559, 8.032000e-02
  %3561 = fmul double %3560, 0x3FF71547652B82FE
  %3562 = tail call double @llvm.rint.f64(double %3561)
  %3563 = fneg double %3562
  %3564 = tail call double @llvm.fma.f64(double %3563, double 0x3FE62E42FEFA39EF, double %3560)
  %3565 = tail call double @llvm.fma.f64(double %3563, double 0x3C7ABC9E3B39803F, double %3564)
  %3566 = fadd contract double %3499, -5.943100e+02
  %3567 = fmul contract double %3566, 6.175000e-02
  %3568 = fmul double %3567, 0x3FF71547652B82FE
  %3569 = tail call double @llvm.rint.f64(double %3568)
  %3570 = fneg double %3569
  %3571 = tail call double @llvm.fma.f64(double %3570, double 0x3FE62E42FEFA39EF, double %3567)
  %3572 = tail call double @llvm.fma.f64(double %3570, double 0x3C7ABC9E3B39803F, double %3571)
  %3573 = fadd contract double %3499, 4.753000e+00
  %3574 = fmul contract double %3573, -5.143000e-01
  %3575 = fmul double %3574, 0x3FF71547652B82FE
  %3576 = tail call double @llvm.rint.f64(double %3575)
  %3577 = fneg double %3576
  %3578 = tail call double @llvm.fma.f64(double %3577, double 0x3FE62E42FEFA39EF, double %3574)
  %3579 = tail call double @llvm.fma.f64(double %3577, double 0x3C7ABC9E3B39803F, double %3578)
  %3580 = fadd contract float %1883, 0x404EC0F3A0000000
  %3581 = fadd contract double %1960, 1.450000e+01
  %3582 = fdiv contract double %3581, -6.000000e+00
  %3583 = fmul double %3582, 0x3FF71547652B82FE
  %3584 = tail call double @llvm.rint.f64(double %3583)
  %3585 = fneg double %3584
  %3586 = tail call double @llvm.fma.f64(double %3585, double 0x3FE62E42FEFA39EF, double %3582)
  %3587 = tail call double @llvm.fma.f64(double %3585, double 0x3C7ABC9E3B39803F, double %3586)
  %3588 = tail call double @llvm.fma.f64(double %3587, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3589 = tail call double @llvm.fma.f64(double %3587, double %3588, double 0x3EC71DEE623FDE64)
  %3590 = tail call double @llvm.fma.f64(double %3587, double %3589, double 0x3EFA01997C89E6B0)
  %3591 = tail call double @llvm.fma.f64(double %3587, double %3590, double 0x3F2A01A014761F6E)
  %3592 = tail call double @llvm.fma.f64(double %3587, double %3591, double 0x3F56C16C1852B7B0)
  %3593 = tail call double @llvm.fma.f64(double %3587, double %3592, double 0x3F81111111122322)
  %3594 = tail call double @llvm.fma.f64(double %3587, double %3593, double 0x3FA55555555502A1)
  %3595 = tail call double @llvm.fma.f64(double %3587, double %3594, double 0x3FC5555555555511)
  %3596 = tail call double @llvm.fma.f64(double %3587, double %3595, double 0x3FE000000000000B)
  %3597 = tail call double @llvm.fma.f64(double %3587, double %3596, double 1.000000e+00)
  %3598 = tail call double @llvm.fma.f64(double %3587, double %3597, double 1.000000e+00)
  %3599 = fptosi double %3584 to i32
  %3600 = tail call double @llvm.amdgcn.ldexp.f64(double %3598, i32 %3599)
  %3601 = fcmp ogt double %3582, 1.024000e+03
  %3602 = select i1 %3601, double 0x7FF0000000000000, double %3600
  %3603 = fcmp olt double %3582, -1.075000e+03
  %3604 = select i1 %3603, double 0.000000e+00, double %3602
  %3605 = fadd contract double %3604, 1.000000e+00
  %3606 = fdiv contract double 1.000000e+00, %3605
  %3607 = fptrunc double %3606 to float
  %3608 = fpext float %3607 to double
  %3609 = fsub contract double 1.000000e+00, %3604
  %3610 = fmul contract double %3609, %3608
  %3611 = fmul contract double %3581, 3.500000e-02
  %3612 = fdiv contract double %3610, %3611
  %3613 = fptrunc double %3612 to float
  %3614 = fadd contract double %1960, 3.506000e+01
  %3615 = fdiv contract double %3614, 3.600000e+00
  %3616 = fmul double %3615, 0x3FF71547652B82FE
  %3617 = tail call double @llvm.rint.f64(double %3616)
  %3618 = fneg double %3617
  %3619 = tail call double @llvm.fma.f64(double %3618, double 0x3FE62E42FEFA39EF, double %3615)
  %3620 = tail call double @llvm.fma.f64(double %3618, double 0x3C7ABC9E3B39803F, double %3619)
  %3621 = tail call double @llvm.fma.f64(double %3620, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3622 = tail call double @llvm.fma.f64(double %3620, double %3621, double 0x3EC71DEE623FDE64)
  %3623 = tail call double @llvm.fma.f64(double %3620, double %3622, double 0x3EFA01997C89E6B0)
  %3624 = tail call double @llvm.fma.f64(double %3620, double %3623, double 0x3F2A01A014761F6E)
  %3625 = tail call double @llvm.fma.f64(double %3620, double %3624, double 0x3F56C16C1852B7B0)
  %3626 = tail call double @llvm.fma.f64(double %3620, double %3625, double 0x3F81111111122322)
  %3627 = tail call double @llvm.fma.f64(double %3620, double %3626, double 0x3FA55555555502A1)
  %3628 = tail call double @llvm.fma.f64(double %3620, double %3627, double 0x3FC5555555555511)
  %3629 = tail call double @llvm.fma.f64(double %3620, double %3628, double 0x3FE000000000000B)
  %3630 = tail call double @llvm.fma.f64(double %3620, double %3629, double 1.000000e+00)
  %3631 = tail call double @llvm.fma.f64(double %3620, double %3630, double 1.000000e+00)
  %3632 = fptosi double %3617 to i32
  %3633 = tail call double @llvm.amdgcn.ldexp.f64(double %3631, i32 %3632)
  %3634 = fcmp ogt double %3615, 1.024000e+03
  %3635 = fcmp olt double %3615, -1.075000e+03
  %3636 = fadd contract double %3633, 1.000000e+00
  %3637 = fdiv contract double 1.000000e+00, %3636
  %3638 = select i1 %3634, double 0.000000e+00, double %3637
  %3639 = select i1 %3635, double 1.000000e+00, double %3638
  %3640 = fsub contract float 5.000000e+01, %1883
  %3641 = fdiv contract float %3640, 2.000000e+01
  %3642 = fmul float %3641, 0x3FF7154760000000
  %3643 = tail call float @llvm.rint.f32(float %3642)
  %3644 = fcmp ogt float %3641, 0x40562E4300000000
  %3645 = fcmp olt float %3641, 0xC059D1DA00000000
  %3646 = fneg float %3642
  %3647 = tail call float @llvm.fma.f32(float %3641, float 0x3FF7154760000000, float %3646)
  %3648 = tail call float @llvm.fma.f32(float %3641, float 0x3E54AE0BE0000000, float %3647)
  %3649 = fsub float %3642, %3643
  %3650 = fadd float %3648, %3649
  %3651 = tail call float @llvm.exp2.f32(float %3650)
  %3652 = fptosi float %3643 to i32
  %3653 = tail call float @llvm.amdgcn.ldexp.f32(float %3651, i32 %3652)
  %3654 = fadd contract float %3653, 1.000000e+00
  %3655 = select i1 %3645, float 1.000000e+00, float %3654
  %3656 = select i1 %3644, float 0x7FF0000000000000, float %3655
  %3657 = fpext float %3656 to double
  %3658 = fdiv contract double 6.000000e-01, %3657
  %3659 = fadd contract double %3658, %3639
  %3660 = fptrunc double %3659 to float
  %3661 = fmul contract double %3581, 3.370000e-02
  %3662 = tail call double @llvm.fabs.f64(double %3661)
  %3663 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3662)
  %3664 = fcmp olt double %3663, 0x3FE5555555555555
  %3665 = zext i1 %3664 to i32
  %3666 = tail call double @llvm.amdgcn.ldexp.f64(double %3663, i32 %3665)
  %3667 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3662)
  %3668 = sub nsw i32 %3667, %3665
  %3669 = fadd double %3666, -1.000000e+00
  %3670 = fadd double %3666, 1.000000e+00
  %3671 = fadd double %3670, -1.000000e+00
  %3672 = fsub double %3666, %3671
  %3673 = tail call double @llvm.amdgcn.rcp.f64(double %3670)
  %3674 = fneg double %3670
  %3675 = tail call double @llvm.fma.f64(double %3674, double %3673, double 1.000000e+00)
  %3676 = tail call double @llvm.fma.f64(double %3675, double %3673, double %3673)
  %3677 = tail call double @llvm.fma.f64(double %3674, double %3676, double 1.000000e+00)
  %3678 = tail call double @llvm.fma.f64(double %3677, double %3676, double %3676)
  %3679 = fmul double %3669, %3678
  %3680 = fmul double %3670, %3679
  %3681 = fneg double %3680
  %3682 = tail call double @llvm.fma.f64(double %3679, double %3670, double %3681)
  %3683 = tail call double @llvm.fma.f64(double %3679, double %3672, double %3682)
  %3684 = fadd double %3680, %3683
  %3685 = fsub double %3684, %3680
  %3686 = fsub double %3683, %3685
  %3687 = fsub double %3669, %3684
  %3688 = fsub double %3669, %3687
  %3689 = fsub double %3688, %3684
  %3690 = fsub double %3689, %3686
  %3691 = fadd double %3687, %3690
  %3692 = fmul double %3678, %3691
  %3693 = fadd double %3679, %3692
  %3694 = fsub double %3693, %3679
  %3695 = fsub double %3692, %3694
  %3696 = fmul double %3693, %3693
  %3697 = fneg double %3696
  %3698 = tail call double @llvm.fma.f64(double %3693, double %3693, double %3697)
  %3699 = fmul double %3695, 2.000000e+00
  %3700 = tail call double @llvm.fma.f64(double %3693, double %3699, double %3698)
  %3701 = fadd double %3696, %3700
  %3702 = fsub double %3701, %3696
  %3703 = fsub double %3700, %3702
  %3704 = tail call double @llvm.fma.f64(double %3701, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %3705 = tail call double @llvm.fma.f64(double %3701, double %3704, double 0x3FBE25E43ABE935A)
  %3706 = tail call double @llvm.fma.f64(double %3701, double %3705, double 0x3FC110EF47E6C9C2)
  %3707 = tail call double @llvm.fma.f64(double %3701, double %3706, double 0x3FC3B13BCFA74449)
  %3708 = tail call double @llvm.fma.f64(double %3701, double %3707, double 0x3FC745D171BF3C30)
  %3709 = tail call double @llvm.fma.f64(double %3701, double %3708, double 0x3FCC71C71C7792CE)
  %3710 = tail call double @llvm.fma.f64(double %3701, double %3709, double 0x3FD24924924920DA)
  %3711 = tail call double @llvm.fma.f64(double %3701, double %3710, double 0x3FD999999999999C)
  %3712 = sitofp i32 %3668 to double
  %3713 = fmul double %3712, 0x3FE62E42FEFA39EF
  %3714 = fneg double %3713
  %3715 = tail call double @llvm.fma.f64(double %3712, double 0x3FE62E42FEFA39EF, double %3714)
  %3716 = tail call double @llvm.fma.f64(double %3712, double 0x3C7ABC9E3B39803F, double %3715)
  %3717 = fadd double %3713, %3716
  %3718 = fsub double %3717, %3713
  %3719 = fsub double %3716, %3718
  %3720 = tail call double @llvm.amdgcn.ldexp.f64(double %3693, i32 1)
  %3721 = tail call double @llvm.amdgcn.ldexp.f64(double %3695, i32 1)
  %3722 = fmul double %3693, %3701
  %3723 = fneg double %3722
  %3724 = tail call double @llvm.fma.f64(double %3701, double %3693, double %3723)
  %3725 = tail call double @llvm.fma.f64(double %3701, double %3695, double %3724)
  %3726 = tail call double @llvm.fma.f64(double %3703, double %3693, double %3725)
  %3727 = fadd double %3722, %3726
  %3728 = fsub double %3727, %3722
  %3729 = fsub double %3726, %3728
  %3730 = fmul double %3701, %3711
  %3731 = fneg double %3730
  %3732 = tail call double @llvm.fma.f64(double %3701, double %3711, double %3731)
  %3733 = tail call double @llvm.fma.f64(double %3703, double %3711, double %3732)
  %3734 = fadd double %3730, %3733
  %3735 = fsub double %3734, %3730
  %3736 = fsub double %3733, %3735
  %3737 = fadd double %3734, 0x3FE5555555555555
  %3738 = fadd double %3737, 0xBFE5555555555555
  %3739 = fsub double %3734, %3738
  %3740 = fadd double %3736, 0x3C8543B0D5DF274D
  %3741 = fadd double %3740, %3739
  %3742 = fadd double %3737, %3741
  %3743 = fsub double %3742, %3737
  %3744 = fsub double %3741, %3743
  %3745 = fmul double %3727, %3742
  %3746 = fneg double %3745
  %3747 = tail call double @llvm.fma.f64(double %3727, double %3742, double %3746)
  %3748 = tail call double @llvm.fma.f64(double %3727, double %3744, double %3747)
  %3749 = tail call double @llvm.fma.f64(double %3729, double %3742, double %3748)
  %3750 = fadd double %3745, %3749
  %3751 = fsub double %3750, %3745
  %3752 = fsub double %3749, %3751
  %3753 = fadd double %3720, %3750
  %3754 = fsub double %3753, %3720
  %3755 = fsub double %3750, %3754
  %3756 = fadd double %3721, %3752
  %3757 = fadd double %3756, %3755
  %3758 = fadd double %3753, %3757
  %3759 = fsub double %3758, %3753
  %3760 = fsub double %3757, %3759
  %3761 = fadd double %3717, %3758
  %3762 = fsub double %3761, %3717
  %3763 = fsub double %3761, %3762
  %3764 = fsub double %3717, %3763
  %3765 = fsub double %3758, %3762
  %3766 = fadd double %3765, %3764
  %3767 = fadd double %3719, %3760
  %3768 = fsub double %3767, %3719
  %3769 = fsub double %3767, %3768
  %3770 = fsub double %3719, %3769
  %3771 = fsub double %3760, %3768
  %3772 = fadd double %3771, %3770
  %3773 = fadd double %3767, %3766
  %3774 = fadd double %3761, %3773
  %3775 = fsub double %3774, %3761
  %3776 = fsub double %3773, %3775
  %3777 = fadd double %3772, %3776
  %3778 = fadd double %3774, %3777
  %3779 = fsub double %3778, %3774
  %3780 = fsub double %3777, %3779
  %3781 = fmul double %3778, 2.000000e+00
  %3782 = fneg double %3781
  %3783 = tail call double @llvm.fma.f64(double %3778, double 2.000000e+00, double %3782)
  %3784 = tail call double @llvm.fma.f64(double %3780, double 2.000000e+00, double %3783)
  %3785 = fadd double %3781, %3784
  %3786 = fsub double %3785, %3781
  %3787 = fsub double %3784, %3786
  %3788 = tail call double @llvm.fabs.f64(double %3781) #3
  %3789 = fcmp oeq double %3788, 0x7FF0000000000000
  %3790 = select i1 %3789, double %3781, double %3785
  %3791 = tail call double @llvm.fabs.f64(double %3790) #3
  %3792 = fcmp oeq double %3791, 0x7FF0000000000000
  %3793 = select i1 %3792, double 0.000000e+00, double %3787
  %3794 = fmul double %3790, 0x3FF71547652B82FE
  %3795 = tail call double @llvm.rint.f64(double %3794)
  %3796 = fneg double %3795
  %3797 = tail call double @llvm.fma.f64(double %3796, double 0x3FE62E42FEFA39EF, double %3790)
  %3798 = tail call double @llvm.fma.f64(double %3796, double 0x3C7ABC9E3B39803F, double %3797)
  %3799 = tail call double @llvm.fma.f64(double %3798, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3800 = tail call double @llvm.fma.f64(double %3798, double %3799, double 0x3EC71DEE623FDE64)
  %3801 = tail call double @llvm.fma.f64(double %3798, double %3800, double 0x3EFA01997C89E6B0)
  %3802 = tail call double @llvm.fma.f64(double %3798, double %3801, double 0x3F2A01A014761F6E)
  %3803 = tail call double @llvm.fma.f64(double %3798, double %3802, double 0x3F56C16C1852B7B0)
  %3804 = tail call double @llvm.fma.f64(double %3798, double %3803, double 0x3F81111111122322)
  %3805 = tail call double @llvm.fma.f64(double %3798, double %3804, double 0x3FA55555555502A1)
  %3806 = tail call double @llvm.fma.f64(double %3798, double %3805, double 0x3FC5555555555511)
  %3807 = tail call double @llvm.fma.f64(double %3798, double %3806, double 0x3FE000000000000B)
  %3808 = tail call double @llvm.fma.f64(double %3798, double %3807, double 1.000000e+00)
  %3809 = tail call double @llvm.fma.f64(double %3798, double %3808, double 1.000000e+00)
  %3810 = fptosi double %3795 to i32
  %3811 = tail call double @llvm.amdgcn.ldexp.f64(double %3809, i32 %3810)
  %3812 = fcmp ogt double %3790, 1.024000e+03
  %3813 = select i1 %3812, double 0x7FF0000000000000, double %3811
  %3814 = fcmp olt double %3790, -1.075000e+03
  %3815 = select i1 %3814, double 0.000000e+00, double %3813
  %3816 = tail call double @llvm.fma.f64(double %3815, double %3793, double %3815)
  %3817 = tail call double @llvm.fabs.f64(double %3815) #3
  %3818 = fcmp oeq double %3817, 0x7FF0000000000000
  %3819 = select i1 %3818, double %3815, double %3816
  %3820 = tail call double @llvm.fabs.f64(double %3819)
  %3821 = fcmp oeq double %3662, 0x7FF0000000000000
  %3822 = fcmp oeq double %3661, 0.000000e+00
  %3823 = or i1 %3822, %3821
  %3824 = select i1 %3822, double 0.000000e+00, double 0x7FF0000000000000
  %3825 = select i1 %3823, double %3824, double %3820
  %3826 = fcmp uno double %3661, 0.000000e+00
  %3827 = select i1 %3826, double 0x7FF8000000000000, double %3825
  %3828 = fneg contract double %3827
  %3829 = fmul double %3827, 0xBFF71547652B82FE
  %3830 = tail call double @llvm.rint.f64(double %3829)
  %3831 = fneg double %3830
  %3832 = tail call double @llvm.fma.f64(double %3831, double 0x3FE62E42FEFA39EF, double %3828)
  %3833 = tail call double @llvm.fma.f64(double %3831, double 0x3C7ABC9E3B39803F, double %3832)
  %3834 = tail call double @llvm.fma.f64(double %3833, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %3835 = tail call double @llvm.fma.f64(double %3833, double %3834, double 0x3EC71DEE623FDE64)
  %3836 = tail call double @llvm.fma.f64(double %3833, double %3835, double 0x3EFA01997C89E6B0)
  %3837 = tail call double @llvm.fma.f64(double %3833, double %3836, double 0x3F2A01A014761F6E)
  %3838 = tail call double @llvm.fma.f64(double %3833, double %3837, double 0x3F56C16C1852B7B0)
  %3839 = tail call double @llvm.fma.f64(double %3833, double %3838, double 0x3F81111111122322)
  %3840 = tail call double @llvm.fma.f64(double %3833, double %3839, double 0x3FA55555555502A1)
  %3841 = tail call double @llvm.fma.f64(double %3833, double %3840, double 0x3FC5555555555511)
  %3842 = tail call double @llvm.fma.f64(double %3833, double %3841, double 0x3FE000000000000B)
  %3843 = tail call double @llvm.fma.f64(double %3833, double %3842, double 1.000000e+00)
  %3844 = tail call double @llvm.fma.f64(double %3833, double %3843, double 1.000000e+00)
  %3845 = fptosi double %3830 to i32
  %3846 = tail call double @llvm.amdgcn.ldexp.f64(double %3844, i32 %3845)
  %3847 = fcmp ogt double %3827, 1.075000e+03
  %3848 = fmul contract double %3846, 1.970000e-02
  %3849 = fadd contract double %3848, 2.000000e-02
  %3850 = fdiv contract double 1.000000e+00, %3849
  %3851 = select i1 %3847, double 5.000000e+01, double %3850
  %3852 = fptrunc double %3851 to float
  %3853 = fsub contract float %3607, %1849
  %3854 = fdiv contract float %3853, %3613
  %3855 = getelementptr inbounds float, float addrspace(1)* %1843, i64 3
  store float %3854, float addrspace(1)* %3855, align 4, !tbaa !6
  %3856 = fsub contract float %3660, %1850
  %3857 = fdiv contract float %3856, %3852
  %3858 = getelementptr inbounds float, float addrspace(1)* %1843, i64 4
  store float %3857, float addrspace(1)* %3858, align 4, !tbaa !6
  %3859 = fpext float %1880 to double
  %3860 = fmul contract double %3859, 1.700000e+00
  %3861 = fsub contract float 1.000000e+00, %1851
  %3862 = fpext float %3861 to double
  %3863 = fmul contract double %3860, %3862
  %3864 = fpext float %1851 to double
  %3865 = fmul contract double %3864, 1.190000e-02
  %3866 = fsub contract double %3863, %3865
  %3867 = fptrunc double %3866 to float
  %3868 = getelementptr inbounds float, float addrspace(1)* %1843, i64 5
  store float %3867, float addrspace(1)* %3868, align 4, !tbaa !6
  %3869 = fpext float %1881 to double
  %3870 = fmul contract double %3869, 1.700000e+00
  %3871 = fsub contract float 1.000000e+00, %1852
  %3872 = fpext float %3871 to double
  %3873 = fmul contract double %3870, %3872
  %3874 = fpext float %1852 to double
  %3875 = fmul contract double %3874, 1.190000e-02
  %3876 = fsub contract double %3873, %3875
  %3877 = fptrunc double %3876 to float
  %3878 = getelementptr inbounds float, float addrspace(1)* %1843, i64 6
  store float %3877, float addrspace(1)* %3878, align 4, !tbaa !6
  %3879 = fmul contract float %1883, 9.648500e+04
  %3880 = fmul contract float %3879, 0x3FA32ACBC0000000
  %3881 = fmul contract float %3880, 0x3F61B1D920000000
  %3882 = fpext float %3881 to double
  %3883 = fmul contract double %3859, 3.410000e-01
  %3884 = fmul contract float %1883, 2.000000e+00
  %3885 = fmul contract float %3884, 0x3FA32ACBC0000000
  %3886 = fmul float %3885, 0x3FF7154760000000
  %3887 = tail call float @llvm.rint.f32(float %3886)
  %3888 = fcmp ogt float %3885, 0x40562E4300000000
  %3889 = fcmp olt float %3885, 0xC059D1DA00000000
  %3890 = fneg float %3886
  %3891 = tail call float @llvm.fma.f32(float %3885, float 0x3FF7154760000000, float %3890)
  %3892 = tail call float @llvm.fma.f32(float %3885, float 0x3E54AE0BE0000000, float %3891)
  %3893 = fsub float %3886, %3887
  %3894 = fadd float %3892, %3893
  %3895 = tail call float @llvm.exp2.f32(float %3894)
  %3896 = fptosi float %3887 to i32
  %3897 = tail call float @llvm.amdgcn.ldexp.f32(float %3895, i32 %3896)
  %3898 = select i1 %3889, float 0.000000e+00, float %3897
  %3899 = select i1 %3888, float 0x7FF0000000000000, float %3898
  %3900 = fpext float %3899 to double
  %3901 = fmul contract double %3883, %3900
  %3902 = fadd contract double %3901, 0xBFE3A43FDD0E5605
  %3903 = fmul contract double %3902, %3882
  %3904 = fadd contract float %3899, -1.000000e+00
  %3905 = fpext float %3904 to double
  %3906 = fdiv contract double %3903, %3905
  %3907 = fptrunc double %3906 to float
  %3908 = fmul contract double %3869, 3.410000e-01
  %3909 = fmul contract double %3908, %3900
  %3910 = fadd contract double %3909, 0xBFE3A43FDD0E5605
  %3911 = fmul contract double %3910, %3882
  %3912 = fdiv contract double %3911, %3905
  %3913 = fptrunc double %3912 to float
  %3914 = fmul contract float %1883, 0x3FA32ACBC0000000
  %3915 = fmul float %3914, 0x3FF7154760000000
  %3916 = tail call float @llvm.rint.f32(float %3915)
  %3917 = fcmp ogt float %3914, 0x40562E4300000000
  %3918 = fcmp olt float %3914, 0xC059D1DA00000000
  %3919 = fneg float %3915
  %3920 = tail call float @llvm.fma.f32(float %3914, float 0x3FF7154760000000, float %3919)
  %3921 = tail call float @llvm.fma.f32(float %3914, float 0x3E54AE0BE0000000, float %3920)
  %3922 = fsub float %3915, %3916
  %3923 = fadd float %3921, %3922
  %3924 = tail call float @llvm.exp2.f32(float %3923)
  %3925 = fptosi float %3916 to i32
  %3926 = tail call float @llvm.amdgcn.ldexp.f32(float %3924, i32 %3925)
  %3927 = select i1 %3918, float 0.000000e+00, float %3926
  %3928 = select i1 %3917, float 0x7FF0000000000000, float %3927
  %3929 = fmul contract float %3880, 0x3E501B2B20000000
  %3930 = fpext float %3929 to double
  %3931 = fpext float %1876 to double
  %3932 = fmul contract double %3931, 7.500000e-01
  %3933 = fpext float %3928 to double
  %3934 = fmul contract double %3932, %3933
  %3935 = fadd contract double %3934, -1.050000e+02
  %3936 = fmul contract double %3935, %3930
  %3937 = fadd contract float %3928, -1.000000e+00
  %3938 = fpext float %3937 to double
  %3939 = fdiv contract double %3936, %3938
  %3940 = fptrunc double %3939 to float
  %3941 = fpext float %1877 to double
  %3942 = fmul contract double %3941, 7.500000e-01
  %3943 = fmul contract double %3942, %3933
  %3944 = fadd contract double %3943, -1.050000e+02
  %3945 = fmul contract double %3944, %3930
  %3946 = fdiv contract double %3945, %3938
  %3947 = fptrunc double %3946 to float
  %3948 = fmul contract float %3907, 0x3FECCCCCC0000000
  %3949 = fmul contract float %1849, %3948
  %3950 = fmul contract float %1850, %3949
  %3951 = fmul contract float %3861, %3950
  %3952 = fpext float %3951 to double
  %3953 = fmul contract double %3952, 4.500000e-01
  %3954 = fptrunc double %3953 to float
  %3955 = fmul contract float %3913, 0x3FB9999A00000000
  %3956 = fmul contract float %1849, %3955
  %3957 = fmul contract float %1850, %3956
  %3958 = fmul contract float %3871, %3957
  %3959 = fpext float %3958 to double
  %3960 = fmul contract double %3959, 4.500000e-01
  %3961 = fptrunc double %3960 to float
  %3962 = fadd contract float %3954, %3961
  %3963 = fmul contract float %3962, 0xBDE2FAF640000000
  %3964 = fdiv contract float %3963, 0x3ED15D4E40000000
  %3965 = fmul contract float %3964, 1.000000e+03
  %3966 = getelementptr inbounds float, float addrspace(1)* %1843, i64 42
  store float %3965, float addrspace(1)* %3966, align 4, !tbaa !6
  %3967 = fmul contract float %3940, 0x3FECCCCCC0000000
  %3968 = fmul contract float %1849, %3967
  %3969 = fmul contract float %1850, %3968
  %3970 = fmul contract float %3861, %3969
  %3971 = fpext float %3970 to double
  %3972 = fmul contract double %3971, 4.500000e-01
  %3973 = fptrunc double %3972 to float
  %3974 = fmul contract float %3947, 0x3FB9999A00000000
  %3975 = fmul contract float %1849, %3974
  %3976 = fmul contract float %1850, %3975
  %3977 = fmul contract float %3871, %3976
  %3978 = fpext float %3977 to double
  %3979 = fmul contract double %3978, 4.500000e-01
  %3980 = fptrunc double %3979 to float
  %3981 = fdiv contract float 0x3F30C6F7A0000000, %1880
  %3982 = tail call float @llvm.fabs.f32(float %3981)
  %3983 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3982)
  %3984 = fcmp olt float %3983, 0x3FE5555560000000
  %3985 = zext i1 %3984 to i32
  %3986 = tail call float @llvm.amdgcn.ldexp.f32(float %3983, i32 %3985)
  %3987 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3982)
  %3988 = sub nsw i32 %3987, %3985
  %3989 = fadd float %3986, -1.000000e+00
  %3990 = fadd float %3986, 1.000000e+00
  %3991 = fadd float %3990, -1.000000e+00
  %3992 = fsub float %3986, %3991
  %3993 = tail call float @llvm.amdgcn.rcp.f32(float %3990)
  %3994 = fmul float %3989, %3993
  %3995 = fmul float %3990, %3994
  %3996 = fneg float %3995
  %3997 = tail call float @llvm.fma.f32(float %3994, float %3990, float %3996)
  %3998 = tail call float @llvm.fma.f32(float %3994, float %3992, float %3997)
  %3999 = fadd float %3995, %3998
  %4000 = fsub float %3999, %3995
  %4001 = fsub float %3998, %4000
  %4002 = fsub float %3989, %3999
  %4003 = fsub float %3989, %4002
  %4004 = fsub float %4003, %3999
  %4005 = fsub float %4004, %4001
  %4006 = fadd float %4002, %4005
  %4007 = fmul float %3993, %4006
  %4008 = fadd float %3994, %4007
  %4009 = fsub float %4008, %3994
  %4010 = fsub float %4007, %4009
  %4011 = fmul float %4008, %4008
  %4012 = fneg float %4011
  %4013 = tail call float @llvm.fma.f32(float %4008, float %4008, float %4012)
  %4014 = fmul float %4010, 2.000000e+00
  %4015 = tail call float @llvm.fma.f32(float %4008, float %4014, float %4013)
  %4016 = fadd float %4011, %4015
  %4017 = fsub float %4016, %4011
  %4018 = fsub float %4015, %4017
  %4019 = tail call float @llvm.fmuladd.f32(float %4016, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4020 = tail call float @llvm.fmuladd.f32(float %4016, float %4019, float 0x3FD999BDE0000000)
  %4021 = sitofp i32 %3988 to float
  %4022 = fmul float %4021, 0x3FE62E4300000000
  %4023 = fneg float %4022
  %4024 = tail call float @llvm.fma.f32(float %4021, float 0x3FE62E4300000000, float %4023)
  %4025 = tail call float @llvm.fma.f32(float %4021, float 0xBE205C6100000000, float %4024)
  %4026 = fadd float %4022, %4025
  %4027 = fsub float %4026, %4022
  %4028 = fsub float %4025, %4027
  %4029 = tail call float @llvm.amdgcn.ldexp.f32(float %4008, i32 1)
  %4030 = fmul float %4008, %4016
  %4031 = fneg float %4030
  %4032 = tail call float @llvm.fma.f32(float %4016, float %4008, float %4031)
  %4033 = tail call float @llvm.fma.f32(float %4016, float %4010, float %4032)
  %4034 = tail call float @llvm.fma.f32(float %4018, float %4008, float %4033)
  %4035 = fadd float %4030, %4034
  %4036 = fsub float %4035, %4030
  %4037 = fsub float %4034, %4036
  %4038 = fmul float %4016, %4020
  %4039 = fneg float %4038
  %4040 = tail call float @llvm.fma.f32(float %4016, float %4020, float %4039)
  %4041 = tail call float @llvm.fma.f32(float %4018, float %4020, float %4040)
  %4042 = fadd float %4038, %4041
  %4043 = fsub float %4042, %4038
  %4044 = fsub float %4041, %4043
  %4045 = fadd float %4042, 0x3FE5555540000000
  %4046 = fadd float %4045, 0xBFE5555540000000
  %4047 = fsub float %4042, %4046
  %4048 = fadd float %4044, 0x3E2E720200000000
  %4049 = fadd float %4048, %4047
  %4050 = fadd float %4045, %4049
  %4051 = fsub float %4050, %4045
  %4052 = fsub float %4049, %4051
  %4053 = fmul float %4035, %4050
  %4054 = fneg float %4053
  %4055 = tail call float @llvm.fma.f32(float %4035, float %4050, float %4054)
  %4056 = tail call float @llvm.fma.f32(float %4035, float %4052, float %4055)
  %4057 = tail call float @llvm.fma.f32(float %4037, float %4050, float %4056)
  %4058 = tail call float @llvm.amdgcn.ldexp.f32(float %4010, i32 1)
  %4059 = fadd float %4053, %4057
  %4060 = fsub float %4059, %4053
  %4061 = fsub float %4057, %4060
  %4062 = fadd float %4029, %4059
  %4063 = fsub float %4062, %4029
  %4064 = fsub float %4059, %4063
  %4065 = fadd float %4058, %4061
  %4066 = fadd float %4065, %4064
  %4067 = fadd float %4062, %4066
  %4068 = fsub float %4067, %4062
  %4069 = fsub float %4066, %4068
  %4070 = fadd float %4026, %4067
  %4071 = fsub float %4070, %4026
  %4072 = fsub float %4070, %4071
  %4073 = fsub float %4026, %4072
  %4074 = fsub float %4067, %4071
  %4075 = fadd float %4074, %4073
  %4076 = fadd float %4028, %4069
  %4077 = fsub float %4076, %4028
  %4078 = fsub float %4076, %4077
  %4079 = fsub float %4028, %4078
  %4080 = fsub float %4069, %4077
  %4081 = fadd float %4080, %4079
  %4082 = fadd float %4076, %4075
  %4083 = fadd float %4070, %4082
  %4084 = fsub float %4083, %4070
  %4085 = fsub float %4082, %4084
  %4086 = fadd float %4081, %4085
  %4087 = fadd float %4083, %4086
  %4088 = fsub float %4087, %4083
  %4089 = fsub float %4086, %4088
  %4090 = fmul float %4087, 3.000000e+00
  %4091 = fneg float %4090
  %4092 = tail call float @llvm.fma.f32(float %4087, float 3.000000e+00, float %4091)
  %4093 = fmul float %4087, 0.000000e+00
  %4094 = tail call float @llvm.fma.f32(float %4089, float 3.000000e+00, float %4093)
  %4095 = fadd float %4092, %4094
  %4096 = fadd float %4090, %4095
  %4097 = fsub float %4096, %4090
  %4098 = fsub float %4095, %4097
  %4099 = tail call float @llvm.fabs.f32(float %4090) #3
  %4100 = fcmp oeq float %4099, 0x7FF0000000000000
  %4101 = select i1 %4100, float %4090, float %4096
  %4102 = tail call float @llvm.fabs.f32(float %4101) #3
  %4103 = fcmp oeq float %4102, 0x7FF0000000000000
  %4104 = select i1 %4103, float 0.000000e+00, float %4098
  %4105 = fcmp oeq float %4101, 0x40562E4300000000
  %4106 = select i1 %4105, float 0x3EE0000000000000, float 0.000000e+00
  %4107 = fsub float %4101, %4106
  %4108 = fadd float %4106, %4104
  %4109 = fmul float %4107, 0x3FF7154760000000
  %4110 = tail call float @llvm.rint.f32(float %4109)
  %4111 = fcmp ogt float %4107, 0x40562E4300000000
  %4112 = fcmp olt float %4107, 0xC059D1DA00000000
  %4113 = fneg float %4109
  %4114 = tail call float @llvm.fma.f32(float %4107, float 0x3FF7154760000000, float %4113)
  %4115 = tail call float @llvm.fma.f32(float %4107, float 0x3E54AE0BE0000000, float %4114)
  %4116 = fsub float %4109, %4110
  %4117 = fadd float %4115, %4116
  %4118 = tail call float @llvm.exp2.f32(float %4117)
  %4119 = fptosi float %4110 to i32
  %4120 = tail call float @llvm.amdgcn.ldexp.f32(float %4118, i32 %4119)
  %4121 = select i1 %4112, float 0.000000e+00, float %4120
  %4122 = select i1 %4111, float 0x7FF0000000000000, float %4121
  %4123 = tail call float @llvm.fma.f32(float %4122, float %4108, float %4122)
  %4124 = tail call float @llvm.fabs.f32(float %4122) #3
  %4125 = fcmp oeq float %4124, 0x7FF0000000000000
  %4126 = select i1 %4125, float %4122, float %4123
  %4127 = fcmp uge float %3981, 0.000000e+00
  %4128 = select i1 %4127, float 0.000000e+00, float -0.000000e+00
  %4129 = tail call float @llvm.copysign.f32(float %4126, float %4128)
  %4130 = fcmp oeq float %3982, 0x7FF0000000000000
  %4131 = fcmp oeq float %3981, 0.000000e+00
  %4132 = or i1 %4131, %4130
  %4133 = select i1 %4131, float 0.000000e+00, float 0x7FF0000000000000
  %4134 = tail call float @llvm.copysign.f32(float %4133, float %3981)
  %4135 = select i1 %4132, float %4134, float %4129
  %4136 = fcmp uno float %3981, 0.000000e+00
  %4137 = fadd contract float %4135, 1.000000e+00
  %4138 = fdiv contract float 1.000000e+00, %4137
  %4139 = fdiv contract float 0x3F30C6F7A0000000, %1881
  %4140 = tail call float @llvm.fabs.f32(float %4139)
  %4141 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4140)
  %4142 = fcmp olt float %4141, 0x3FE5555560000000
  %4143 = zext i1 %4142 to i32
  %4144 = tail call float @llvm.amdgcn.ldexp.f32(float %4141, i32 %4143)
  %4145 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4140)
  %4146 = sub nsw i32 %4145, %4143
  %4147 = fadd float %4144, -1.000000e+00
  %4148 = fadd float %4144, 1.000000e+00
  %4149 = fadd float %4148, -1.000000e+00
  %4150 = fsub float %4144, %4149
  %4151 = tail call float @llvm.amdgcn.rcp.f32(float %4148)
  %4152 = fmul float %4147, %4151
  %4153 = fmul float %4148, %4152
  %4154 = fneg float %4153
  %4155 = tail call float @llvm.fma.f32(float %4152, float %4148, float %4154)
  %4156 = tail call float @llvm.fma.f32(float %4152, float %4150, float %4155)
  %4157 = fadd float %4153, %4156
  %4158 = fsub float %4157, %4153
  %4159 = fsub float %4156, %4158
  %4160 = fsub float %4147, %4157
  %4161 = fsub float %4147, %4160
  %4162 = fsub float %4161, %4157
  %4163 = fsub float %4162, %4159
  %4164 = fadd float %4160, %4163
  %4165 = fmul float %4151, %4164
  %4166 = fadd float %4152, %4165
  %4167 = fsub float %4166, %4152
  %4168 = fsub float %4165, %4167
  %4169 = fmul float %4166, %4166
  %4170 = fneg float %4169
  %4171 = tail call float @llvm.fma.f32(float %4166, float %4166, float %4170)
  %4172 = fmul float %4168, 2.000000e+00
  %4173 = tail call float @llvm.fma.f32(float %4166, float %4172, float %4171)
  %4174 = fadd float %4169, %4173
  %4175 = fsub float %4174, %4169
  %4176 = fsub float %4173, %4175
  %4177 = tail call float @llvm.fmuladd.f32(float %4174, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4178 = tail call float @llvm.fmuladd.f32(float %4174, float %4177, float 0x3FD999BDE0000000)
  %4179 = sitofp i32 %4146 to float
  %4180 = fmul float %4179, 0x3FE62E4300000000
  %4181 = fneg float %4180
  %4182 = tail call float @llvm.fma.f32(float %4179, float 0x3FE62E4300000000, float %4181)
  %4183 = tail call float @llvm.fma.f32(float %4179, float 0xBE205C6100000000, float %4182)
  %4184 = fadd float %4180, %4183
  %4185 = fsub float %4184, %4180
  %4186 = fsub float %4183, %4185
  %4187 = tail call float @llvm.amdgcn.ldexp.f32(float %4166, i32 1)
  %4188 = fmul float %4166, %4174
  %4189 = fneg float %4188
  %4190 = tail call float @llvm.fma.f32(float %4174, float %4166, float %4189)
  %4191 = tail call float @llvm.fma.f32(float %4174, float %4168, float %4190)
  %4192 = tail call float @llvm.fma.f32(float %4176, float %4166, float %4191)
  %4193 = fadd float %4188, %4192
  %4194 = fsub float %4193, %4188
  %4195 = fsub float %4192, %4194
  %4196 = fmul float %4174, %4178
  %4197 = fneg float %4196
  %4198 = tail call float @llvm.fma.f32(float %4174, float %4178, float %4197)
  %4199 = tail call float @llvm.fma.f32(float %4176, float %4178, float %4198)
  %4200 = fadd float %4196, %4199
  %4201 = fsub float %4200, %4196
  %4202 = fsub float %4199, %4201
  %4203 = fadd float %4200, 0x3FE5555540000000
  %4204 = fadd float %4203, 0xBFE5555540000000
  %4205 = fsub float %4200, %4204
  %4206 = fadd float %4202, 0x3E2E720200000000
  %4207 = fadd float %4206, %4205
  %4208 = fadd float %4203, %4207
  %4209 = fsub float %4208, %4203
  %4210 = fsub float %4207, %4209
  %4211 = fmul float %4193, %4208
  %4212 = fneg float %4211
  %4213 = tail call float @llvm.fma.f32(float %4193, float %4208, float %4212)
  %4214 = tail call float @llvm.fma.f32(float %4193, float %4210, float %4213)
  %4215 = tail call float @llvm.fma.f32(float %4195, float %4208, float %4214)
  %4216 = tail call float @llvm.amdgcn.ldexp.f32(float %4168, i32 1)
  %4217 = fadd float %4211, %4215
  %4218 = fsub float %4217, %4211
  %4219 = fsub float %4215, %4218
  %4220 = fadd float %4187, %4217
  %4221 = fsub float %4220, %4187
  %4222 = fsub float %4217, %4221
  %4223 = fadd float %4216, %4219
  %4224 = fadd float %4223, %4222
  %4225 = fadd float %4220, %4224
  %4226 = fsub float %4225, %4220
  %4227 = fsub float %4224, %4226
  %4228 = fadd float %4184, %4225
  %4229 = fsub float %4228, %4184
  %4230 = fsub float %4228, %4229
  %4231 = fsub float %4184, %4230
  %4232 = fsub float %4225, %4229
  %4233 = fadd float %4232, %4231
  %4234 = fadd float %4186, %4227
  %4235 = fsub float %4234, %4186
  %4236 = fsub float %4234, %4235
  %4237 = fsub float %4186, %4236
  %4238 = fsub float %4227, %4235
  %4239 = fadd float %4238, %4237
  %4240 = fadd float %4234, %4233
  %4241 = fadd float %4228, %4240
  %4242 = fsub float %4241, %4228
  %4243 = fsub float %4240, %4242
  %4244 = fadd float %4239, %4243
  %4245 = fadd float %4241, %4244
  %4246 = fsub float %4245, %4241
  %4247 = fsub float %4244, %4246
  %4248 = fmul float %4245, 3.000000e+00
  %4249 = fneg float %4248
  %4250 = tail call float @llvm.fma.f32(float %4245, float 3.000000e+00, float %4249)
  %4251 = fmul float %4245, 0.000000e+00
  %4252 = tail call float @llvm.fma.f32(float %4247, float 3.000000e+00, float %4251)
  %4253 = fadd float %4250, %4252
  %4254 = fadd float %4248, %4253
  %4255 = fsub float %4254, %4248
  %4256 = fsub float %4253, %4255
  %4257 = tail call float @llvm.fabs.f32(float %4248) #3
  %4258 = fcmp oeq float %4257, 0x7FF0000000000000
  %4259 = select i1 %4258, float %4248, float %4254
  %4260 = tail call float @llvm.fabs.f32(float %4259) #3
  %4261 = fcmp oeq float %4260, 0x7FF0000000000000
  %4262 = select i1 %4261, float 0.000000e+00, float %4256
  %4263 = fcmp oeq float %4259, 0x40562E4300000000
  %4264 = select i1 %4263, float 0x3EE0000000000000, float 0.000000e+00
  %4265 = fsub float %4259, %4264
  %4266 = fadd float %4264, %4262
  %4267 = fmul float %4265, 0x3FF7154760000000
  %4268 = tail call float @llvm.rint.f32(float %4267)
  %4269 = fcmp ogt float %4265, 0x40562E4300000000
  %4270 = fcmp olt float %4265, 0xC059D1DA00000000
  %4271 = fneg float %4267
  %4272 = tail call float @llvm.fma.f32(float %4265, float 0x3FF7154760000000, float %4271)
  %4273 = tail call float @llvm.fma.f32(float %4265, float 0x3E54AE0BE0000000, float %4272)
  %4274 = fsub float %4267, %4268
  %4275 = fadd float %4273, %4274
  %4276 = tail call float @llvm.exp2.f32(float %4275)
  %4277 = fptosi float %4268 to i32
  %4278 = tail call float @llvm.amdgcn.ldexp.f32(float %4276, i32 %4277)
  %4279 = select i1 %4270, float 0.000000e+00, float %4278
  %4280 = select i1 %4269, float 0x7FF0000000000000, float %4279
  %4281 = tail call float @llvm.fma.f32(float %4280, float %4266, float %4280)
  %4282 = tail call float @llvm.fabs.f32(float %4280) #3
  %4283 = fcmp oeq float %4282, 0x7FF0000000000000
  %4284 = select i1 %4283, float %4280, float %4281
  %4285 = fcmp uge float %4139, 0.000000e+00
  %4286 = select i1 %4285, float 0.000000e+00, float -0.000000e+00
  %4287 = tail call float @llvm.copysign.f32(float %4284, float %4286)
  %4288 = fcmp oeq float %4140, 0x7FF0000000000000
  %4289 = fcmp oeq float %4139, 0.000000e+00
  %4290 = or i1 %4289, %4288
  %4291 = select i1 %4289, float 0.000000e+00, float 0x7FF0000000000000
  %4292 = tail call float @llvm.copysign.f32(float %4291, float %4139)
  %4293 = select i1 %4290, float %4292, float %4287
  %4294 = fcmp uno float %4139, 0.000000e+00
  %4295 = fadd contract float %4293, 1.000000e+00
  %4296 = fdiv contract float 1.000000e+00, %4295
  %4297 = fmul contract float %1883, 0x3FD6666660000000
  %4298 = fmul contract float %4297, 0x3FA32ACBC0000000
  %4299 = fmul float %4298, 0x3FF7154760000000
  %4300 = tail call float @llvm.rint.f32(float %4299)
  %4301 = fcmp ogt float %4298, 0x40562E4300000000
  %4302 = fcmp olt float %4298, 0xC059D1DA00000000
  %4303 = fneg float %4299
  %4304 = tail call float @llvm.fma.f32(float %4298, float 0x3FF7154760000000, float %4303)
  %4305 = tail call float @llvm.fma.f32(float %4298, float 0x3E54AE0BE0000000, float %4304)
  %4306 = fsub float %4299, %4300
  %4307 = fadd float %4305, %4306
  %4308 = tail call float @llvm.exp2.f32(float %4307)
  %4309 = fptosi float %4300 to i32
  %4310 = tail call float @llvm.amdgcn.ldexp.f32(float %4308, i32 %4309)
  %4311 = select i1 %4302, float 0.000000e+00, float %4310
  %4312 = select i1 %4301, float 0x7FF0000000000000, float %4311
  %4313 = tail call float @llvm.fabs.f32(float %1876)
  %4314 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4313)
  %4315 = fcmp olt float %4314, 0x3FE5555560000000
  %4316 = zext i1 %4315 to i32
  %4317 = tail call float @llvm.amdgcn.ldexp.f32(float %4314, i32 %4316)
  %4318 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4313)
  %4319 = sub nsw i32 %4318, %4316
  %4320 = fadd float %4317, -1.000000e+00
  %4321 = fadd float %4317, 1.000000e+00
  %4322 = fadd float %4321, -1.000000e+00
  %4323 = fsub float %4317, %4322
  %4324 = tail call float @llvm.amdgcn.rcp.f32(float %4321)
  %4325 = fmul float %4320, %4324
  %4326 = fmul float %4321, %4325
  %4327 = fneg float %4326
  %4328 = tail call float @llvm.fma.f32(float %4325, float %4321, float %4327)
  %4329 = tail call float @llvm.fma.f32(float %4325, float %4323, float %4328)
  %4330 = fadd float %4326, %4329
  %4331 = fsub float %4330, %4326
  %4332 = fsub float %4329, %4331
  %4333 = fsub float %4320, %4330
  %4334 = fsub float %4320, %4333
  %4335 = fsub float %4334, %4330
  %4336 = fsub float %4335, %4332
  %4337 = fadd float %4333, %4336
  %4338 = fmul float %4324, %4337
  %4339 = fadd float %4325, %4338
  %4340 = fsub float %4339, %4325
  %4341 = fsub float %4338, %4340
  %4342 = fmul float %4339, %4339
  %4343 = fneg float %4342
  %4344 = tail call float @llvm.fma.f32(float %4339, float %4339, float %4343)
  %4345 = fmul float %4341, 2.000000e+00
  %4346 = tail call float @llvm.fma.f32(float %4339, float %4345, float %4344)
  %4347 = fadd float %4342, %4346
  %4348 = fsub float %4347, %4342
  %4349 = fsub float %4346, %4348
  %4350 = tail call float @llvm.fmuladd.f32(float %4347, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4351 = tail call float @llvm.fmuladd.f32(float %4347, float %4350, float 0x3FD999BDE0000000)
  %4352 = sitofp i32 %4319 to float
  %4353 = fmul float %4352, 0x3FE62E4300000000
  %4354 = fneg float %4353
  %4355 = tail call float @llvm.fma.f32(float %4352, float 0x3FE62E4300000000, float %4354)
  %4356 = tail call float @llvm.fma.f32(float %4352, float 0xBE205C6100000000, float %4355)
  %4357 = fadd float %4353, %4356
  %4358 = fsub float %4357, %4353
  %4359 = fsub float %4356, %4358
  %4360 = tail call float @llvm.amdgcn.ldexp.f32(float %4339, i32 1)
  %4361 = fmul float %4339, %4347
  %4362 = fneg float %4361
  %4363 = tail call float @llvm.fma.f32(float %4347, float %4339, float %4362)
  %4364 = tail call float @llvm.fma.f32(float %4347, float %4341, float %4363)
  %4365 = tail call float @llvm.fma.f32(float %4349, float %4339, float %4364)
  %4366 = fadd float %4361, %4365
  %4367 = fsub float %4366, %4361
  %4368 = fsub float %4365, %4367
  %4369 = fmul float %4347, %4351
  %4370 = fneg float %4369
  %4371 = tail call float @llvm.fma.f32(float %4347, float %4351, float %4370)
  %4372 = tail call float @llvm.fma.f32(float %4349, float %4351, float %4371)
  %4373 = fadd float %4369, %4372
  %4374 = fsub float %4373, %4369
  %4375 = fsub float %4372, %4374
  %4376 = fadd float %4373, 0x3FE5555540000000
  %4377 = fadd float %4376, 0xBFE5555540000000
  %4378 = fsub float %4373, %4377
  %4379 = fadd float %4375, 0x3E2E720200000000
  %4380 = fadd float %4379, %4378
  %4381 = fadd float %4376, %4380
  %4382 = fsub float %4381, %4376
  %4383 = fsub float %4380, %4382
  %4384 = fmul float %4366, %4381
  %4385 = fneg float %4384
  %4386 = tail call float @llvm.fma.f32(float %4366, float %4381, float %4385)
  %4387 = tail call float @llvm.fma.f32(float %4366, float %4383, float %4386)
  %4388 = tail call float @llvm.fma.f32(float %4368, float %4381, float %4387)
  %4389 = tail call float @llvm.amdgcn.ldexp.f32(float %4341, i32 1)
  %4390 = fadd float %4384, %4388
  %4391 = fsub float %4390, %4384
  %4392 = fsub float %4388, %4391
  %4393 = fadd float %4360, %4390
  %4394 = fsub float %4393, %4360
  %4395 = fsub float %4390, %4394
  %4396 = fadd float %4389, %4392
  %4397 = fadd float %4396, %4395
  %4398 = fadd float %4393, %4397
  %4399 = fsub float %4398, %4393
  %4400 = fsub float %4397, %4399
  %4401 = fadd float %4357, %4398
  %4402 = fsub float %4401, %4357
  %4403 = fsub float %4401, %4402
  %4404 = fsub float %4357, %4403
  %4405 = fsub float %4398, %4402
  %4406 = fadd float %4405, %4404
  %4407 = fadd float %4359, %4400
  %4408 = fsub float %4407, %4359
  %4409 = fsub float %4407, %4408
  %4410 = fsub float %4359, %4409
  %4411 = fsub float %4400, %4408
  %4412 = fadd float %4411, %4410
  %4413 = fadd float %4407, %4406
  %4414 = fadd float %4401, %4413
  %4415 = fsub float %4414, %4401
  %4416 = fsub float %4413, %4415
  %4417 = fadd float %4412, %4416
  %4418 = fadd float %4414, %4417
  %4419 = fsub float %4418, %4414
  %4420 = fsub float %4417, %4419
  %4421 = fmul float %4418, 3.000000e+00
  %4422 = fneg float %4421
  %4423 = tail call float @llvm.fma.f32(float %4418, float 3.000000e+00, float %4422)
  %4424 = fmul float %4418, 0.000000e+00
  %4425 = tail call float @llvm.fma.f32(float %4420, float 3.000000e+00, float %4424)
  %4426 = fadd float %4423, %4425
  %4427 = fadd float %4421, %4426
  %4428 = fsub float %4427, %4421
  %4429 = fsub float %4426, %4428
  %4430 = tail call float @llvm.fabs.f32(float %4421) #3
  %4431 = fcmp oeq float %4430, 0x7FF0000000000000
  %4432 = select i1 %4431, float %4421, float %4427
  %4433 = tail call float @llvm.fabs.f32(float %4432) #3
  %4434 = fcmp oeq float %4433, 0x7FF0000000000000
  %4435 = select i1 %4434, float 0.000000e+00, float %4429
  %4436 = fcmp oeq float %4432, 0x40562E4300000000
  %4437 = select i1 %4436, float 0x3EE0000000000000, float 0.000000e+00
  %4438 = fsub float %4432, %4437
  %4439 = fadd float %4437, %4435
  %4440 = fmul float %4438, 0x3FF7154760000000
  %4441 = tail call float @llvm.rint.f32(float %4440)
  %4442 = fcmp ogt float %4438, 0x40562E4300000000
  %4443 = fcmp olt float %4438, 0xC059D1DA00000000
  %4444 = fneg float %4440
  %4445 = tail call float @llvm.fma.f32(float %4438, float 0x3FF7154760000000, float %4444)
  %4446 = tail call float @llvm.fma.f32(float %4438, float 0x3E54AE0BE0000000, float %4445)
  %4447 = fsub float %4440, %4441
  %4448 = fadd float %4446, %4447
  %4449 = tail call float @llvm.exp2.f32(float %4448)
  %4450 = fptosi float %4441 to i32
  %4451 = tail call float @llvm.amdgcn.ldexp.f32(float %4449, i32 %4450)
  %4452 = select i1 %4443, float 0.000000e+00, float %4451
  %4453 = select i1 %4442, float 0x7FF0000000000000, float %4452
  %4454 = tail call float @llvm.fma.f32(float %4453, float %4439, float %4453)
  %4455 = tail call float @llvm.fabs.f32(float %4453) #3
  %4456 = fcmp oeq float %4455, 0x7FF0000000000000
  %4457 = select i1 %4456, float %4453, float %4454
  %4458 = fcmp uge float %1876, 0.000000e+00
  %4459 = select i1 %4458, float 0.000000e+00, float -0.000000e+00
  %4460 = tail call float @llvm.copysign.f32(float %4457, float %4459)
  %4461 = fcmp oeq float %4313, 0x7FF0000000000000
  %4462 = fcmp oeq float %1876, 0.000000e+00
  %4463 = or i1 %4462, %4461
  %4464 = select i1 %4462, float 0.000000e+00, float 0x7FF0000000000000
  %4465 = tail call float @llvm.copysign.f32(float %4464, float %1876)
  %4466 = select i1 %4463, float %4465, float %4460
  %4467 = fcmp uno float %1876, 0.000000e+00
  %4468 = select i1 %4467, float 0x7FF8000000000000, float %4466
  %4469 = fmul contract float %4312, %4468
  %4470 = fmul contract float %4469, 0x3FFCCCCCC0000000
  %4471 = tail call float @llvm.fabs.f32(float %1877)
  %4472 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4471)
  %4473 = fcmp olt float %4472, 0x3FE5555560000000
  %4474 = zext i1 %4473 to i32
  %4475 = tail call float @llvm.amdgcn.ldexp.f32(float %4472, i32 %4474)
  %4476 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4471)
  %4477 = sub nsw i32 %4476, %4474
  %4478 = fadd float %4475, -1.000000e+00
  %4479 = fadd float %4475, 1.000000e+00
  %4480 = fadd float %4479, -1.000000e+00
  %4481 = fsub float %4475, %4480
  %4482 = tail call float @llvm.amdgcn.rcp.f32(float %4479)
  %4483 = fmul float %4478, %4482
  %4484 = fmul float %4479, %4483
  %4485 = fneg float %4484
  %4486 = tail call float @llvm.fma.f32(float %4483, float %4479, float %4485)
  %4487 = tail call float @llvm.fma.f32(float %4483, float %4481, float %4486)
  %4488 = fadd float %4484, %4487
  %4489 = fsub float %4488, %4484
  %4490 = fsub float %4487, %4489
  %4491 = fsub float %4478, %4488
  %4492 = fsub float %4478, %4491
  %4493 = fsub float %4492, %4488
  %4494 = fsub float %4493, %4490
  %4495 = fadd float %4491, %4494
  %4496 = fmul float %4482, %4495
  %4497 = fadd float %4483, %4496
  %4498 = fsub float %4497, %4483
  %4499 = fsub float %4496, %4498
  %4500 = fmul float %4497, %4497
  %4501 = fneg float %4500
  %4502 = tail call float @llvm.fma.f32(float %4497, float %4497, float %4501)
  %4503 = fmul float %4499, 2.000000e+00
  %4504 = tail call float @llvm.fma.f32(float %4497, float %4503, float %4502)
  %4505 = fadd float %4500, %4504
  %4506 = fsub float %4505, %4500
  %4507 = fsub float %4504, %4506
  %4508 = tail call float @llvm.fmuladd.f32(float %4505, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4509 = tail call float @llvm.fmuladd.f32(float %4505, float %4508, float 0x3FD999BDE0000000)
  %4510 = sitofp i32 %4477 to float
  %4511 = fmul float %4510, 0x3FE62E4300000000
  %4512 = fneg float %4511
  %4513 = tail call float @llvm.fma.f32(float %4510, float 0x3FE62E4300000000, float %4512)
  %4514 = tail call float @llvm.fma.f32(float %4510, float 0xBE205C6100000000, float %4513)
  %4515 = fadd float %4511, %4514
  %4516 = fsub float %4515, %4511
  %4517 = fsub float %4514, %4516
  %4518 = tail call float @llvm.amdgcn.ldexp.f32(float %4497, i32 1)
  %4519 = fmul float %4497, %4505
  %4520 = fneg float %4519
  %4521 = tail call float @llvm.fma.f32(float %4505, float %4497, float %4520)
  %4522 = tail call float @llvm.fma.f32(float %4505, float %4499, float %4521)
  %4523 = tail call float @llvm.fma.f32(float %4507, float %4497, float %4522)
  %4524 = fadd float %4519, %4523
  %4525 = fsub float %4524, %4519
  %4526 = fsub float %4523, %4525
  %4527 = fmul float %4505, %4509
  %4528 = fneg float %4527
  %4529 = tail call float @llvm.fma.f32(float %4505, float %4509, float %4528)
  %4530 = tail call float @llvm.fma.f32(float %4507, float %4509, float %4529)
  %4531 = fadd float %4527, %4530
  %4532 = fsub float %4531, %4527
  %4533 = fsub float %4530, %4532
  %4534 = fadd float %4531, 0x3FE5555540000000
  %4535 = fadd float %4534, 0xBFE5555540000000
  %4536 = fsub float %4531, %4535
  %4537 = fadd float %4533, 0x3E2E720200000000
  %4538 = fadd float %4537, %4536
  %4539 = fadd float %4534, %4538
  %4540 = fsub float %4539, %4534
  %4541 = fsub float %4538, %4540
  %4542 = fmul float %4524, %4539
  %4543 = fneg float %4542
  %4544 = tail call float @llvm.fma.f32(float %4524, float %4539, float %4543)
  %4545 = tail call float @llvm.fma.f32(float %4524, float %4541, float %4544)
  %4546 = tail call float @llvm.fma.f32(float %4526, float %4539, float %4545)
  %4547 = tail call float @llvm.amdgcn.ldexp.f32(float %4499, i32 1)
  %4548 = fadd float %4542, %4546
  %4549 = fsub float %4548, %4542
  %4550 = fsub float %4546, %4549
  %4551 = fadd float %4518, %4548
  %4552 = fsub float %4551, %4518
  %4553 = fsub float %4548, %4552
  %4554 = fadd float %4547, %4550
  %4555 = fadd float %4554, %4553
  %4556 = fadd float %4551, %4555
  %4557 = fsub float %4556, %4551
  %4558 = fsub float %4555, %4557
  %4559 = fadd float %4515, %4556
  %4560 = fsub float %4559, %4515
  %4561 = fsub float %4559, %4560
  %4562 = fsub float %4515, %4561
  %4563 = fsub float %4556, %4560
  %4564 = fadd float %4563, %4562
  %4565 = fadd float %4517, %4558
  %4566 = fsub float %4565, %4517
  %4567 = fsub float %4565, %4566
  %4568 = fsub float %4517, %4567
  %4569 = fsub float %4558, %4566
  %4570 = fadd float %4569, %4568
  %4571 = fadd float %4565, %4564
  %4572 = fadd float %4559, %4571
  %4573 = fsub float %4572, %4559
  %4574 = fsub float %4571, %4573
  %4575 = fadd float %4570, %4574
  %4576 = fadd float %4572, %4575
  %4577 = fsub float %4576, %4572
  %4578 = fsub float %4575, %4577
  %4579 = fmul float %4576, 3.000000e+00
  %4580 = fneg float %4579
  %4581 = tail call float @llvm.fma.f32(float %4576, float 3.000000e+00, float %4580)
  %4582 = fmul float %4576, 0.000000e+00
  %4583 = tail call float @llvm.fma.f32(float %4578, float 3.000000e+00, float %4582)
  %4584 = fadd float %4581, %4583
  %4585 = fadd float %4579, %4584
  %4586 = fsub float %4585, %4579
  %4587 = fsub float %4584, %4586
  %4588 = tail call float @llvm.fabs.f32(float %4579) #3
  %4589 = fcmp oeq float %4588, 0x7FF0000000000000
  %4590 = select i1 %4589, float %4579, float %4585
  %4591 = tail call float @llvm.fabs.f32(float %4590) #3
  %4592 = fcmp oeq float %4591, 0x7FF0000000000000
  %4593 = select i1 %4592, float 0.000000e+00, float %4587
  %4594 = fcmp oeq float %4590, 0x40562E4300000000
  %4595 = select i1 %4594, float 0x3EE0000000000000, float 0.000000e+00
  %4596 = fsub float %4590, %4595
  %4597 = fadd float %4595, %4593
  %4598 = fmul float %4596, 0x3FF7154760000000
  %4599 = tail call float @llvm.rint.f32(float %4598)
  %4600 = fcmp ogt float %4596, 0x40562E4300000000
  %4601 = fcmp olt float %4596, 0xC059D1DA00000000
  %4602 = fneg float %4598
  %4603 = tail call float @llvm.fma.f32(float %4596, float 0x3FF7154760000000, float %4602)
  %4604 = tail call float @llvm.fma.f32(float %4596, float 0x3E54AE0BE0000000, float %4603)
  %4605 = fsub float %4598, %4599
  %4606 = fadd float %4604, %4605
  %4607 = tail call float @llvm.exp2.f32(float %4606)
  %4608 = fptosi float %4599 to i32
  %4609 = tail call float @llvm.amdgcn.ldexp.f32(float %4607, i32 %4608)
  %4610 = select i1 %4601, float 0.000000e+00, float %4609
  %4611 = select i1 %4600, float 0x7FF0000000000000, float %4610
  %4612 = tail call float @llvm.fma.f32(float %4611, float %4597, float %4611)
  %4613 = tail call float @llvm.fabs.f32(float %4611) #3
  %4614 = fcmp oeq float %4613, 0x7FF0000000000000
  %4615 = select i1 %4614, float %4611, float %4612
  %4616 = fcmp uge float %1877, 0.000000e+00
  %4617 = select i1 %4616, float 0.000000e+00, float -0.000000e+00
  %4618 = tail call float @llvm.copysign.f32(float %4615, float %4617)
  %4619 = fcmp oeq float %4471, 0x7FF0000000000000
  %4620 = fcmp oeq float %1877, 0.000000e+00
  %4621 = or i1 %4620, %4619
  %4622 = select i1 %4620, float 0.000000e+00, float 0x7FF0000000000000
  %4623 = tail call float @llvm.copysign.f32(float %4622, float %1877)
  %4624 = select i1 %4621, float %4623, float %4618
  %4625 = fcmp uno float %1877, 0.000000e+00
  %4626 = select i1 %4625, float 0x7FF8000000000000, float %4624
  %4627 = fmul contract float %4312, %4626
  %4628 = fmul contract float %4627, 0x3FFCCCCCC0000000
  %4629 = fmul contract float %1883, 0xBFE4CCCCC0000000
  %4630 = fmul contract float %4629, 0x3FA32ACBC0000000
  %4631 = fmul float %4630, 0x3FF7154760000000
  %4632 = tail call float @llvm.rint.f32(float %4631)
  %4633 = fcmp ogt float %4630, 0x40562E4300000000
  %4634 = fcmp olt float %4630, 0xC059D1DA00000000
  %4635 = fneg float %4631
  %4636 = tail call float @llvm.fma.f32(float %4630, float 0x3FF7154760000000, float %4635)
  %4637 = tail call float @llvm.fma.f32(float %4630, float 0x3E54AE0BE0000000, float %4636)
  %4638 = fsub float %4631, %4632
  %4639 = fadd float %4637, %4638
  %4640 = tail call float @llvm.exp2.f32(float %4639)
  %4641 = fptosi float %4632 to i32
  %4642 = tail call float @llvm.amdgcn.ldexp.f32(float %4640, i32 %4641)
  %4643 = select i1 %4634, float 0.000000e+00, float %4642
  %4644 = select i1 %4633, float 0x7FF0000000000000, float %4643
  %4645 = fmul contract float %4644, 2.744000e+06
  %4646 = fmul contract float %1880, %4645
  %4647 = fdiv contract float %1876, 0x4028947AE0000000
  %4648 = tail call float @llvm.fabs.f32(float %4647)
  %4649 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4648)
  %4650 = fcmp olt float %4649, 0x3FE5555560000000
  %4651 = zext i1 %4650 to i32
  %4652 = tail call float @llvm.amdgcn.ldexp.f32(float %4649, i32 %4651)
  %4653 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4648)
  %4654 = sub nsw i32 %4653, %4651
  %4655 = fadd float %4652, -1.000000e+00
  %4656 = fadd float %4652, 1.000000e+00
  %4657 = fadd float %4656, -1.000000e+00
  %4658 = fsub float %4652, %4657
  %4659 = tail call float @llvm.amdgcn.rcp.f32(float %4656)
  %4660 = fmul float %4655, %4659
  %4661 = fmul float %4656, %4660
  %4662 = fneg float %4661
  %4663 = tail call float @llvm.fma.f32(float %4660, float %4656, float %4662)
  %4664 = tail call float @llvm.fma.f32(float %4660, float %4658, float %4663)
  %4665 = fadd float %4661, %4664
  %4666 = fsub float %4665, %4661
  %4667 = fsub float %4664, %4666
  %4668 = fsub float %4655, %4665
  %4669 = fsub float %4655, %4668
  %4670 = fsub float %4669, %4665
  %4671 = fsub float %4670, %4667
  %4672 = fadd float %4668, %4671
  %4673 = fmul float %4659, %4672
  %4674 = fadd float %4660, %4673
  %4675 = fsub float %4674, %4660
  %4676 = fsub float %4673, %4675
  %4677 = fmul float %4674, %4674
  %4678 = fneg float %4677
  %4679 = tail call float @llvm.fma.f32(float %4674, float %4674, float %4678)
  %4680 = fmul float %4676, 2.000000e+00
  %4681 = tail call float @llvm.fma.f32(float %4674, float %4680, float %4679)
  %4682 = fadd float %4677, %4681
  %4683 = fsub float %4682, %4677
  %4684 = fsub float %4681, %4683
  %4685 = tail call float @llvm.fmuladd.f32(float %4682, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4686 = tail call float @llvm.fmuladd.f32(float %4682, float %4685, float 0x3FD999BDE0000000)
  %4687 = sitofp i32 %4654 to float
  %4688 = fmul float %4687, 0x3FE62E4300000000
  %4689 = fneg float %4688
  %4690 = tail call float @llvm.fma.f32(float %4687, float 0x3FE62E4300000000, float %4689)
  %4691 = tail call float @llvm.fma.f32(float %4687, float 0xBE205C6100000000, float %4690)
  %4692 = fadd float %4688, %4691
  %4693 = fsub float %4692, %4688
  %4694 = fsub float %4691, %4693
  %4695 = tail call float @llvm.amdgcn.ldexp.f32(float %4674, i32 1)
  %4696 = fmul float %4674, %4682
  %4697 = fneg float %4696
  %4698 = tail call float @llvm.fma.f32(float %4682, float %4674, float %4697)
  %4699 = tail call float @llvm.fma.f32(float %4682, float %4676, float %4698)
  %4700 = tail call float @llvm.fma.f32(float %4684, float %4674, float %4699)
  %4701 = fadd float %4696, %4700
  %4702 = fsub float %4701, %4696
  %4703 = fsub float %4700, %4702
  %4704 = fmul float %4682, %4686
  %4705 = fneg float %4704
  %4706 = tail call float @llvm.fma.f32(float %4682, float %4686, float %4705)
  %4707 = tail call float @llvm.fma.f32(float %4684, float %4686, float %4706)
  %4708 = fadd float %4704, %4707
  %4709 = fsub float %4708, %4704
  %4710 = fsub float %4707, %4709
  %4711 = fadd float %4708, 0x3FE5555540000000
  %4712 = fadd float %4711, 0xBFE5555540000000
  %4713 = fsub float %4708, %4712
  %4714 = fadd float %4710, 0x3E2E720200000000
  %4715 = fadd float %4714, %4713
  %4716 = fadd float %4711, %4715
  %4717 = fsub float %4716, %4711
  %4718 = fsub float %4715, %4717
  %4719 = fmul float %4701, %4716
  %4720 = fneg float %4719
  %4721 = tail call float @llvm.fma.f32(float %4701, float %4716, float %4720)
  %4722 = tail call float @llvm.fma.f32(float %4701, float %4718, float %4721)
  %4723 = tail call float @llvm.fma.f32(float %4703, float %4716, float %4722)
  %4724 = tail call float @llvm.amdgcn.ldexp.f32(float %4676, i32 1)
  %4725 = fadd float %4719, %4723
  %4726 = fsub float %4725, %4719
  %4727 = fsub float %4723, %4726
  %4728 = fadd float %4695, %4725
  %4729 = fsub float %4728, %4695
  %4730 = fsub float %4725, %4729
  %4731 = fadd float %4724, %4727
  %4732 = fadd float %4731, %4730
  %4733 = fadd float %4728, %4732
  %4734 = fsub float %4733, %4728
  %4735 = fsub float %4732, %4734
  %4736 = fadd float %4692, %4733
  %4737 = fsub float %4736, %4692
  %4738 = fsub float %4736, %4737
  %4739 = fsub float %4692, %4738
  %4740 = fsub float %4733, %4737
  %4741 = fadd float %4740, %4739
  %4742 = fadd float %4694, %4735
  %4743 = fsub float %4742, %4694
  %4744 = fsub float %4742, %4743
  %4745 = fsub float %4694, %4744
  %4746 = fsub float %4735, %4743
  %4747 = fadd float %4746, %4745
  %4748 = fadd float %4742, %4741
  %4749 = fadd float %4736, %4748
  %4750 = fsub float %4749, %4736
  %4751 = fsub float %4748, %4750
  %4752 = fadd float %4747, %4751
  %4753 = fadd float %4749, %4752
  %4754 = fsub float %4753, %4749
  %4755 = fsub float %4752, %4754
  %4756 = fmul float %4753, 3.000000e+00
  %4757 = fneg float %4756
  %4758 = tail call float @llvm.fma.f32(float %4753, float 3.000000e+00, float %4757)
  %4759 = fmul float %4753, 0.000000e+00
  %4760 = tail call float @llvm.fma.f32(float %4755, float 3.000000e+00, float %4759)
  %4761 = fadd float %4758, %4760
  %4762 = fadd float %4756, %4761
  %4763 = fsub float %4762, %4756
  %4764 = fsub float %4761, %4763
  %4765 = tail call float @llvm.fabs.f32(float %4756) #3
  %4766 = fcmp oeq float %4765, 0x7FF0000000000000
  %4767 = select i1 %4766, float %4756, float %4762
  %4768 = tail call float @llvm.fabs.f32(float %4767) #3
  %4769 = fcmp oeq float %4768, 0x7FF0000000000000
  %4770 = select i1 %4769, float 0.000000e+00, float %4764
  %4771 = fcmp oeq float %4767, 0x40562E4300000000
  %4772 = select i1 %4771, float 0x3EE0000000000000, float 0.000000e+00
  %4773 = fsub float %4767, %4772
  %4774 = fadd float %4772, %4770
  %4775 = fmul float %4773, 0x3FF7154760000000
  %4776 = tail call float @llvm.rint.f32(float %4775)
  %4777 = fcmp ogt float %4773, 0x40562E4300000000
  %4778 = fcmp olt float %4773, 0xC059D1DA00000000
  %4779 = fneg float %4775
  %4780 = tail call float @llvm.fma.f32(float %4773, float 0x3FF7154760000000, float %4779)
  %4781 = tail call float @llvm.fma.f32(float %4773, float 0x3E54AE0BE0000000, float %4780)
  %4782 = fsub float %4775, %4776
  %4783 = fadd float %4781, %4782
  %4784 = tail call float @llvm.exp2.f32(float %4783)
  %4785 = fptosi float %4776 to i32
  %4786 = tail call float @llvm.amdgcn.ldexp.f32(float %4784, i32 %4785)
  %4787 = select i1 %4778, float 0.000000e+00, float %4786
  %4788 = select i1 %4777, float 0x7FF0000000000000, float %4787
  %4789 = tail call float @llvm.fma.f32(float %4788, float %4774, float %4788)
  %4790 = tail call float @llvm.fabs.f32(float %4788) #3
  %4791 = fcmp oeq float %4790, 0x7FF0000000000000
  %4792 = select i1 %4791, float %4788, float %4789
  %4793 = fcmp uge float %4647, 0.000000e+00
  %4794 = select i1 %4793, float 0.000000e+00, float -0.000000e+00
  %4795 = tail call float @llvm.copysign.f32(float %4792, float %4794)
  %4796 = fcmp oeq float %4648, 0x7FF0000000000000
  %4797 = fcmp oeq float %4647, 0.000000e+00
  %4798 = or i1 %4797, %4796
  %4799 = select i1 %4797, float 0.000000e+00, float 0x7FF0000000000000
  %4800 = tail call float @llvm.copysign.f32(float %4799, float %4647)
  %4801 = select i1 %4798, float %4800, float %4795
  %4802 = fcmp uno float %4647, 0.000000e+00
  %4803 = fadd contract float %4801, 1.000000e+00
  %4804 = fmul contract float %4803, 0x40C33D7AE0000000
  %4805 = select i1 %4802, float 0x7FF8000000000000, float %4804
  %4806 = fmul contract float %1880, 0x412471C3C0000000
  %4807 = fadd contract float %4806, %4805
  %4808 = fdiv contract float %1880, 0x3F6D68C6A0000000
  %4809 = fadd contract float %4808, 1.000000e+00
  %4810 = fmul contract float %4809, 0x40AA1ACB80000000
  %4811 = fadd contract float %4810, %4807
  %4812 = fmul contract float %4468, 0x3FF4CCCCC0000000
  %4813 = fadd contract float %4812, %4811
  %4814 = fmul contract float %4468, 0x3FFCCCCCC0000000
  %4815 = fadd contract float %4814, %4813
  %4816 = fmul contract float %1880, 2.744000e+06
  %4817 = fadd contract float %4816, %4815
  %4818 = fmul contract float %4644, 0x3FD147AE20000000
  %4819 = fadd contract float %4818, 1.000000e+00
  %4820 = fmul contract float %4819, %4817
  %4821 = fmul contract float %1881, %4645
  %4822 = fdiv contract float %1877, 0x4028947AE0000000
  %4823 = tail call float @llvm.fabs.f32(float %4822)
  %4824 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4823)
  %4825 = fcmp olt float %4824, 0x3FE5555560000000
  %4826 = zext i1 %4825 to i32
  %4827 = tail call float @llvm.amdgcn.ldexp.f32(float %4824, i32 %4826)
  %4828 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4823)
  %4829 = sub nsw i32 %4828, %4826
  %4830 = fadd float %4827, -1.000000e+00
  %4831 = fadd float %4827, 1.000000e+00
  %4832 = fadd float %4831, -1.000000e+00
  %4833 = fsub float %4827, %4832
  %4834 = tail call float @llvm.amdgcn.rcp.f32(float %4831)
  %4835 = fmul float %4830, %4834
  %4836 = fmul float %4831, %4835
  %4837 = fneg float %4836
  %4838 = tail call float @llvm.fma.f32(float %4835, float %4831, float %4837)
  %4839 = tail call float @llvm.fma.f32(float %4835, float %4833, float %4838)
  %4840 = fadd float %4836, %4839
  %4841 = fsub float %4840, %4836
  %4842 = fsub float %4839, %4841
  %4843 = fsub float %4830, %4840
  %4844 = fsub float %4830, %4843
  %4845 = fsub float %4844, %4840
  %4846 = fsub float %4845, %4842
  %4847 = fadd float %4843, %4846
  %4848 = fmul float %4834, %4847
  %4849 = fadd float %4835, %4848
  %4850 = fsub float %4849, %4835
  %4851 = fsub float %4848, %4850
  %4852 = fmul float %4849, %4849
  %4853 = fneg float %4852
  %4854 = tail call float @llvm.fma.f32(float %4849, float %4849, float %4853)
  %4855 = fmul float %4851, 2.000000e+00
  %4856 = tail call float @llvm.fma.f32(float %4849, float %4855, float %4854)
  %4857 = fadd float %4852, %4856
  %4858 = fsub float %4857, %4852
  %4859 = fsub float %4856, %4858
  %4860 = tail call float @llvm.fmuladd.f32(float %4857, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4861 = tail call float @llvm.fmuladd.f32(float %4857, float %4860, float 0x3FD999BDE0000000)
  %4862 = sitofp i32 %4829 to float
  %4863 = fmul float %4862, 0x3FE62E4300000000
  %4864 = fneg float %4863
  %4865 = tail call float @llvm.fma.f32(float %4862, float 0x3FE62E4300000000, float %4864)
  %4866 = tail call float @llvm.fma.f32(float %4862, float 0xBE205C6100000000, float %4865)
  %4867 = fadd float %4863, %4866
  %4868 = fsub float %4867, %4863
  %4869 = fsub float %4866, %4868
  %4870 = tail call float @llvm.amdgcn.ldexp.f32(float %4849, i32 1)
  %4871 = fmul float %4849, %4857
  %4872 = fneg float %4871
  %4873 = tail call float @llvm.fma.f32(float %4857, float %4849, float %4872)
  %4874 = tail call float @llvm.fma.f32(float %4857, float %4851, float %4873)
  %4875 = tail call float @llvm.fma.f32(float %4859, float %4849, float %4874)
  %4876 = fadd float %4871, %4875
  %4877 = fsub float %4876, %4871
  %4878 = fsub float %4875, %4877
  %4879 = fmul float %4857, %4861
  %4880 = fneg float %4879
  %4881 = tail call float @llvm.fma.f32(float %4857, float %4861, float %4880)
  %4882 = tail call float @llvm.fma.f32(float %4859, float %4861, float %4881)
  %4883 = fadd float %4879, %4882
  %4884 = fsub float %4883, %4879
  %4885 = fsub float %4882, %4884
  %4886 = fadd float %4883, 0x3FE5555540000000
  %4887 = fadd float %4886, 0xBFE5555540000000
  %4888 = fsub float %4883, %4887
  %4889 = fadd float %4885, 0x3E2E720200000000
  %4890 = fadd float %4889, %4888
  %4891 = fadd float %4886, %4890
  %4892 = fsub float %4891, %4886
  %4893 = fsub float %4890, %4892
  %4894 = fmul float %4876, %4891
  %4895 = fneg float %4894
  %4896 = tail call float @llvm.fma.f32(float %4876, float %4891, float %4895)
  %4897 = tail call float @llvm.fma.f32(float %4876, float %4893, float %4896)
  %4898 = tail call float @llvm.fma.f32(float %4878, float %4891, float %4897)
  %4899 = tail call float @llvm.amdgcn.ldexp.f32(float %4851, i32 1)
  %4900 = fadd float %4894, %4898
  %4901 = fsub float %4900, %4894
  %4902 = fsub float %4898, %4901
  %4903 = fadd float %4870, %4900
  %4904 = fsub float %4903, %4870
  %4905 = fsub float %4900, %4904
  %4906 = fadd float %4899, %4902
  %4907 = fadd float %4906, %4905
  %4908 = fadd float %4903, %4907
  %4909 = fsub float %4908, %4903
  %4910 = fsub float %4907, %4909
  %4911 = fadd float %4867, %4908
  %4912 = fsub float %4911, %4867
  %4913 = fsub float %4911, %4912
  %4914 = fsub float %4867, %4913
  %4915 = fsub float %4908, %4912
  %4916 = fadd float %4915, %4914
  %4917 = fadd float %4869, %4910
  %4918 = fsub float %4917, %4869
  %4919 = fsub float %4917, %4918
  %4920 = fsub float %4869, %4919
  %4921 = fsub float %4910, %4918
  %4922 = fadd float %4921, %4920
  %4923 = fadd float %4917, %4916
  %4924 = fadd float %4911, %4923
  %4925 = fsub float %4924, %4911
  %4926 = fsub float %4923, %4925
  %4927 = fadd float %4922, %4926
  %4928 = fadd float %4924, %4927
  %4929 = fsub float %4928, %4924
  %4930 = fsub float %4927, %4929
  %4931 = fmul float %4928, 3.000000e+00
  %4932 = fneg float %4931
  %4933 = tail call float @llvm.fma.f32(float %4928, float 3.000000e+00, float %4932)
  %4934 = fmul float %4928, 0.000000e+00
  %4935 = tail call float @llvm.fma.f32(float %4930, float 3.000000e+00, float %4934)
  %4936 = fadd float %4933, %4935
  %4937 = fadd float %4931, %4936
  %4938 = fsub float %4937, %4931
  %4939 = fsub float %4936, %4938
  %4940 = tail call float @llvm.fabs.f32(float %4931) #3
  %4941 = fcmp oeq float %4940, 0x7FF0000000000000
  %4942 = select i1 %4941, float %4931, float %4937
  %4943 = tail call float @llvm.fabs.f32(float %4942) #3
  %4944 = fcmp oeq float %4943, 0x7FF0000000000000
  %4945 = select i1 %4944, float 0.000000e+00, float %4939
  %4946 = fcmp oeq float %4942, 0x40562E4300000000
  %4947 = select i1 %4946, float 0x3EE0000000000000, float 0.000000e+00
  %4948 = fsub float %4942, %4947
  %4949 = fadd float %4947, %4945
  %4950 = fmul float %4948, 0x3FF7154760000000
  %4951 = tail call float @llvm.rint.f32(float %4950)
  %4952 = fcmp ogt float %4948, 0x40562E4300000000
  %4953 = fcmp olt float %4948, 0xC059D1DA00000000
  %4954 = fneg float %4950
  %4955 = tail call float @llvm.fma.f32(float %4948, float 0x3FF7154760000000, float %4954)
  %4956 = tail call float @llvm.fma.f32(float %4948, float 0x3E54AE0BE0000000, float %4955)
  %4957 = fsub float %4950, %4951
  %4958 = fadd float %4956, %4957
  %4959 = tail call float @llvm.exp2.f32(float %4958)
  %4960 = fptosi float %4951 to i32
  %4961 = tail call float @llvm.amdgcn.ldexp.f32(float %4959, i32 %4960)
  %4962 = select i1 %4953, float 0.000000e+00, float %4961
  %4963 = select i1 %4952, float 0x7FF0000000000000, float %4962
  %4964 = tail call float @llvm.fma.f32(float %4963, float %4949, float %4963)
  %4965 = tail call float @llvm.fabs.f32(float %4963) #3
  %4966 = fcmp oeq float %4965, 0x7FF0000000000000
  %4967 = select i1 %4966, float %4963, float %4964
  %4968 = fcmp uge float %4822, 0.000000e+00
  %4969 = select i1 %4968, float 0.000000e+00, float -0.000000e+00
  %4970 = tail call float @llvm.copysign.f32(float %4967, float %4969)
  %4971 = fcmp oeq float %4823, 0x7FF0000000000000
  %4972 = fcmp oeq float %4822, 0.000000e+00
  %4973 = or i1 %4972, %4971
  %4974 = select i1 %4972, float 0.000000e+00, float 0x7FF0000000000000
  %4975 = tail call float @llvm.copysign.f32(float %4974, float %4822)
  %4976 = select i1 %4973, float %4975, float %4970
  %4977 = fcmp uno float %4822, 0.000000e+00
  %4978 = fadd contract float %4976, 1.000000e+00
  %4979 = fmul contract float %4978, 0x40C33D7AE0000000
  %4980 = select i1 %4977, float 0x7FF8000000000000, float %4979
  %4981 = fmul contract float %1881, 0x412471C3C0000000
  %4982 = fadd contract float %4981, %4980
  %4983 = fdiv contract float %1881, 0x3F6D68C6A0000000
  %4984 = fadd contract float %4983, 1.000000e+00
  %4985 = fmul contract float %4984, 0x40AA1ACB80000000
  %4986 = fadd contract float %4985, %4982
  %4987 = fmul contract float %4626, 0x3FF4CCCCC0000000
  %4988 = fadd contract float %4987, %4986
  %4989 = fmul contract float %4626, 0x3FFCCCCCC0000000
  %4990 = fadd contract float %4989, %4988
  %4991 = fmul contract float %1881, 2.744000e+06
  %4992 = fadd contract float %4991, %4990
  %4993 = fmul contract float %4819, %4992
  %4994 = fmul contract float %4138, 0x3FEFAE1480000000
  %4995 = select i1 %4136, float 0x7FF8000000000000, float %4994
  %4996 = fsub contract float %4470, %4646
  %4997 = fmul contract float %4996, %4995
  %4998 = fdiv contract float %4997, %4820
  %4999 = fmul contract float %4296, 0x4020051EC0000000
  %5000 = select i1 %4294, float 0x7FF8000000000000, float %4999
  %5001 = fsub contract float %4628, %4821
  %5002 = fmul contract float %5001, %5000
  %5003 = fdiv contract float %5002, %4993
  %5004 = fadd contract float %4998, %5003
  %5005 = fmul contract float %5004, 2.000000e+00
  %5006 = fmul contract float %5005, 0x3DE2FAF640000000
  %5007 = fdiv contract float %5006, 0x3ED15D4E40000000
  %5008 = fmul contract float %5007, 1.000000e+03
  %5009 = getelementptr inbounds float, float addrspace(1)* %1843, i64 44
  store float %5008, float addrspace(1)* %5009, align 4, !tbaa !6
  %5010 = tail call float @llvm.fabs.f32(float %1880)
  %5011 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5010)
  %5012 = fcmp olt float %5011, 0x3FE5555560000000
  %5013 = zext i1 %5012 to i32
  %5014 = tail call float @llvm.amdgcn.ldexp.f32(float %5011, i32 %5013)
  %5015 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5010)
  %5016 = sub nsw i32 %5015, %5013
  %5017 = fadd float %5014, -1.000000e+00
  %5018 = fadd float %5014, 1.000000e+00
  %5019 = fadd float %5018, -1.000000e+00
  %5020 = fsub float %5014, %5019
  %5021 = tail call float @llvm.amdgcn.rcp.f32(float %5018)
  %5022 = fmul float %5017, %5021
  %5023 = fmul float %5018, %5022
  %5024 = fneg float %5023
  %5025 = tail call float @llvm.fma.f32(float %5022, float %5018, float %5024)
  %5026 = tail call float @llvm.fma.f32(float %5022, float %5020, float %5025)
  %5027 = fadd float %5023, %5026
  %5028 = fsub float %5027, %5023
  %5029 = fsub float %5026, %5028
  %5030 = fsub float %5017, %5027
  %5031 = fsub float %5017, %5030
  %5032 = fsub float %5031, %5027
  %5033 = fsub float %5032, %5029
  %5034 = fadd float %5030, %5033
  %5035 = fmul float %5021, %5034
  %5036 = fadd float %5022, %5035
  %5037 = fsub float %5036, %5022
  %5038 = fsub float %5035, %5037
  %5039 = fmul float %5036, %5036
  %5040 = fneg float %5039
  %5041 = tail call float @llvm.fma.f32(float %5036, float %5036, float %5040)
  %5042 = fmul float %5038, 2.000000e+00
  %5043 = tail call float @llvm.fma.f32(float %5036, float %5042, float %5041)
  %5044 = fadd float %5039, %5043
  %5045 = fsub float %5044, %5039
  %5046 = fsub float %5043, %5045
  %5047 = tail call float @llvm.fmuladd.f32(float %5044, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5048 = tail call float @llvm.fmuladd.f32(float %5044, float %5047, float 0x3FD999BDE0000000)
  %5049 = sitofp i32 %5016 to float
  %5050 = fmul float %5049, 0x3FE62E4300000000
  %5051 = fneg float %5050
  %5052 = tail call float @llvm.fma.f32(float %5049, float 0x3FE62E4300000000, float %5051)
  %5053 = tail call float @llvm.fma.f32(float %5049, float 0xBE205C6100000000, float %5052)
  %5054 = fadd float %5050, %5053
  %5055 = fsub float %5054, %5050
  %5056 = fsub float %5053, %5055
  %5057 = tail call float @llvm.amdgcn.ldexp.f32(float %5036, i32 1)
  %5058 = fmul float %5036, %5044
  %5059 = fneg float %5058
  %5060 = tail call float @llvm.fma.f32(float %5044, float %5036, float %5059)
  %5061 = tail call float @llvm.fma.f32(float %5044, float %5038, float %5060)
  %5062 = tail call float @llvm.fma.f32(float %5046, float %5036, float %5061)
  %5063 = fadd float %5058, %5062
  %5064 = fsub float %5063, %5058
  %5065 = fsub float %5062, %5064
  %5066 = fmul float %5044, %5048
  %5067 = fneg float %5066
  %5068 = tail call float @llvm.fma.f32(float %5044, float %5048, float %5067)
  %5069 = tail call float @llvm.fma.f32(float %5046, float %5048, float %5068)
  %5070 = fadd float %5066, %5069
  %5071 = fsub float %5070, %5066
  %5072 = fsub float %5069, %5071
  %5073 = fadd float %5070, 0x3FE5555540000000
  %5074 = fadd float %5073, 0xBFE5555540000000
  %5075 = fsub float %5070, %5074
  %5076 = fadd float %5072, 0x3E2E720200000000
  %5077 = fadd float %5076, %5075
  %5078 = fadd float %5073, %5077
  %5079 = fsub float %5078, %5073
  %5080 = fsub float %5077, %5079
  %5081 = fmul float %5063, %5078
  %5082 = fneg float %5081
  %5083 = tail call float @llvm.fma.f32(float %5063, float %5078, float %5082)
  %5084 = tail call float @llvm.fma.f32(float %5063, float %5080, float %5083)
  %5085 = tail call float @llvm.fma.f32(float %5065, float %5078, float %5084)
  %5086 = tail call float @llvm.amdgcn.ldexp.f32(float %5038, i32 1)
  %5087 = fadd float %5081, %5085
  %5088 = fsub float %5087, %5081
  %5089 = fsub float %5085, %5088
  %5090 = fadd float %5057, %5087
  %5091 = fsub float %5090, %5057
  %5092 = fsub float %5087, %5091
  %5093 = fadd float %5086, %5089
  %5094 = fadd float %5093, %5092
  %5095 = fadd float %5090, %5094
  %5096 = fsub float %5095, %5090
  %5097 = fsub float %5094, %5096
  %5098 = fadd float %5054, %5095
  %5099 = fsub float %5098, %5054
  %5100 = fsub float %5098, %5099
  %5101 = fsub float %5054, %5100
  %5102 = fsub float %5095, %5099
  %5103 = fadd float %5102, %5101
  %5104 = fadd float %5056, %5097
  %5105 = fsub float %5104, %5056
  %5106 = fsub float %5104, %5105
  %5107 = fsub float %5056, %5106
  %5108 = fsub float %5097, %5105
  %5109 = fadd float %5108, %5107
  %5110 = fadd float %5104, %5103
  %5111 = fadd float %5098, %5110
  %5112 = fsub float %5111, %5098
  %5113 = fsub float %5110, %5112
  %5114 = fadd float %5109, %5113
  %5115 = fadd float %5111, %5114
  %5116 = fsub float %5115, %5111
  %5117 = fsub float %5114, %5116
  %5118 = fmul float %5115, 0x3FF99999A0000000
  %5119 = fneg float %5118
  %5120 = tail call float @llvm.fma.f32(float %5115, float 0x3FF99999A0000000, float %5119)
  %5121 = tail call float @llvm.fma.f32(float %5117, float 0x3FF99999A0000000, float %5120)
  %5122 = fadd float %5118, %5121
  %5123 = fsub float %5122, %5118
  %5124 = fsub float %5121, %5123
  %5125 = tail call float @llvm.fabs.f32(float %5118) #3
  %5126 = fcmp oeq float %5125, 0x7FF0000000000000
  %5127 = select i1 %5126, float %5118, float %5122
  %5128 = tail call float @llvm.fabs.f32(float %5127) #3
  %5129 = fcmp oeq float %5128, 0x7FF0000000000000
  %5130 = select i1 %5129, float 0.000000e+00, float %5124
  %5131 = fcmp oeq float %5127, 0x40562E4300000000
  %5132 = select i1 %5131, float 0x3EE0000000000000, float 0.000000e+00
  %5133 = fsub float %5127, %5132
  %5134 = fadd float %5132, %5130
  %5135 = fmul float %5133, 0x3FF7154760000000
  %5136 = tail call float @llvm.rint.f32(float %5135)
  %5137 = fcmp ogt float %5133, 0x40562E4300000000
  %5138 = fcmp olt float %5133, 0xC059D1DA00000000
  %5139 = fneg float %5135
  %5140 = tail call float @llvm.fma.f32(float %5133, float 0x3FF7154760000000, float %5139)
  %5141 = tail call float @llvm.fma.f32(float %5133, float 0x3E54AE0BE0000000, float %5140)
  %5142 = fsub float %5135, %5136
  %5143 = fadd float %5141, %5142
  %5144 = tail call float @llvm.exp2.f32(float %5143)
  %5145 = fptosi float %5136 to i32
  %5146 = tail call float @llvm.amdgcn.ldexp.f32(float %5144, i32 %5145)
  %5147 = select i1 %5138, float 0.000000e+00, float %5146
  %5148 = select i1 %5137, float 0x7FF0000000000000, float %5147
  %5149 = tail call float @llvm.fma.f32(float %5148, float %5134, float %5148)
  %5150 = tail call float @llvm.fabs.f32(float %5148) #3
  %5151 = fcmp oeq float %5150, 0x7FF0000000000000
  %5152 = select i1 %5151, float %5148, float %5149
  %5153 = tail call float @llvm.fabs.f32(float %5152)
  %5154 = fcmp uge float %1880, 0.000000e+00
  %5155 = select i1 %5154, float %5153, float 0x7FF8000000000000
  %5156 = fcmp oeq float %5010, 0x7FF0000000000000
  %5157 = fcmp oeq float %1880, 0.000000e+00
  %5158 = or i1 %5157, %5156
  %5159 = select i1 %5157, float 0.000000e+00, float 0x7FF0000000000000
  %5160 = select i1 %5158, float %5159, float %5155
  %5161 = fcmp uno float %1880, 0.000000e+00
  %5162 = select i1 %5161, float 0x7FF8000000000000, float %5160
  %5163 = fcmp oeq float %1880, 1.000000e+00
  %5164 = select i1 %5163, float 1.000000e+00, float %5162
  %5165 = fmul contract float %5164, 0x3F7E529BA0000000
  %5166 = fadd contract float %5164, 0x3ED5EDBBE0000000
  %5167 = fdiv contract float %5165, %5166
  %5168 = tail call float @llvm.fabs.f32(float %1881)
  %5169 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5168)
  %5170 = fcmp olt float %5169, 0x3FE5555560000000
  %5171 = zext i1 %5170 to i32
  %5172 = tail call float @llvm.amdgcn.ldexp.f32(float %5169, i32 %5171)
  %5173 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5168)
  %5174 = sub nsw i32 %5173, %5171
  %5175 = fadd float %5172, -1.000000e+00
  %5176 = fadd float %5172, 1.000000e+00
  %5177 = fadd float %5176, -1.000000e+00
  %5178 = fsub float %5172, %5177
  %5179 = tail call float @llvm.amdgcn.rcp.f32(float %5176)
  %5180 = fmul float %5175, %5179
  %5181 = fmul float %5176, %5180
  %5182 = fneg float %5181
  %5183 = tail call float @llvm.fma.f32(float %5180, float %5176, float %5182)
  %5184 = tail call float @llvm.fma.f32(float %5180, float %5178, float %5183)
  %5185 = fadd float %5181, %5184
  %5186 = fsub float %5185, %5181
  %5187 = fsub float %5184, %5186
  %5188 = fsub float %5175, %5185
  %5189 = fsub float %5175, %5188
  %5190 = fsub float %5189, %5185
  %5191 = fsub float %5190, %5187
  %5192 = fadd float %5188, %5191
  %5193 = fmul float %5179, %5192
  %5194 = fadd float %5180, %5193
  %5195 = fsub float %5194, %5180
  %5196 = fsub float %5193, %5195
  %5197 = fmul float %5194, %5194
  %5198 = fneg float %5197
  %5199 = tail call float @llvm.fma.f32(float %5194, float %5194, float %5198)
  %5200 = fmul float %5196, 2.000000e+00
  %5201 = tail call float @llvm.fma.f32(float %5194, float %5200, float %5199)
  %5202 = fadd float %5197, %5201
  %5203 = fsub float %5202, %5197
  %5204 = fsub float %5201, %5203
  %5205 = tail call float @llvm.fmuladd.f32(float %5202, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5206 = tail call float @llvm.fmuladd.f32(float %5202, float %5205, float 0x3FD999BDE0000000)
  %5207 = sitofp i32 %5174 to float
  %5208 = fmul float %5207, 0x3FE62E4300000000
  %5209 = fneg float %5208
  %5210 = tail call float @llvm.fma.f32(float %5207, float 0x3FE62E4300000000, float %5209)
  %5211 = tail call float @llvm.fma.f32(float %5207, float 0xBE205C6100000000, float %5210)
  %5212 = fadd float %5208, %5211
  %5213 = fsub float %5212, %5208
  %5214 = fsub float %5211, %5213
  %5215 = tail call float @llvm.amdgcn.ldexp.f32(float %5194, i32 1)
  %5216 = fmul float %5194, %5202
  %5217 = fneg float %5216
  %5218 = tail call float @llvm.fma.f32(float %5202, float %5194, float %5217)
  %5219 = tail call float @llvm.fma.f32(float %5202, float %5196, float %5218)
  %5220 = tail call float @llvm.fma.f32(float %5204, float %5194, float %5219)
  %5221 = fadd float %5216, %5220
  %5222 = fsub float %5221, %5216
  %5223 = fsub float %5220, %5222
  %5224 = fmul float %5202, %5206
  %5225 = fneg float %5224
  %5226 = tail call float @llvm.fma.f32(float %5202, float %5206, float %5225)
  %5227 = tail call float @llvm.fma.f32(float %5204, float %5206, float %5226)
  %5228 = fadd float %5224, %5227
  %5229 = fsub float %5228, %5224
  %5230 = fsub float %5227, %5229
  %5231 = fadd float %5228, 0x3FE5555540000000
  %5232 = fadd float %5231, 0xBFE5555540000000
  %5233 = fsub float %5228, %5232
  %5234 = fadd float %5230, 0x3E2E720200000000
  %5235 = fadd float %5234, %5233
  %5236 = fadd float %5231, %5235
  %5237 = fsub float %5236, %5231
  %5238 = fsub float %5235, %5237
  %5239 = fmul float %5221, %5236
  %5240 = fneg float %5239
  %5241 = tail call float @llvm.fma.f32(float %5221, float %5236, float %5240)
  %5242 = tail call float @llvm.fma.f32(float %5221, float %5238, float %5241)
  %5243 = tail call float @llvm.fma.f32(float %5223, float %5236, float %5242)
  %5244 = tail call float @llvm.amdgcn.ldexp.f32(float %5196, i32 1)
  %5245 = fadd float %5239, %5243
  %5246 = fsub float %5245, %5239
  %5247 = fsub float %5243, %5246
  %5248 = fadd float %5215, %5245
  %5249 = fsub float %5248, %5215
  %5250 = fsub float %5245, %5249
  %5251 = fadd float %5244, %5247
  %5252 = fadd float %5251, %5250
  %5253 = fadd float %5248, %5252
  %5254 = fsub float %5253, %5248
  %5255 = fsub float %5252, %5254
  %5256 = fadd float %5212, %5253
  %5257 = fsub float %5256, %5212
  %5258 = fsub float %5256, %5257
  %5259 = fsub float %5212, %5258
  %5260 = fsub float %5253, %5257
  %5261 = fadd float %5260, %5259
  %5262 = fadd float %5214, %5255
  %5263 = fsub float %5262, %5214
  %5264 = fsub float %5262, %5263
  %5265 = fsub float %5214, %5264
  %5266 = fsub float %5255, %5263
  %5267 = fadd float %5266, %5265
  %5268 = fadd float %5262, %5261
  %5269 = fadd float %5256, %5268
  %5270 = fsub float %5269, %5256
  %5271 = fsub float %5268, %5270
  %5272 = fadd float %5267, %5271
  %5273 = fadd float %5269, %5272
  %5274 = fsub float %5273, %5269
  %5275 = fsub float %5272, %5274
  %5276 = fmul float %5273, 0x3FF99999A0000000
  %5277 = fneg float %5276
  %5278 = tail call float @llvm.fma.f32(float %5273, float 0x3FF99999A0000000, float %5277)
  %5279 = tail call float @llvm.fma.f32(float %5275, float 0x3FF99999A0000000, float %5278)
  %5280 = fadd float %5276, %5279
  %5281 = fsub float %5280, %5276
  %5282 = fsub float %5279, %5281
  %5283 = tail call float @llvm.fabs.f32(float %5276) #3
  %5284 = fcmp oeq float %5283, 0x7FF0000000000000
  %5285 = select i1 %5284, float %5276, float %5280
  %5286 = tail call float @llvm.fabs.f32(float %5285) #3
  %5287 = fcmp oeq float %5286, 0x7FF0000000000000
  %5288 = select i1 %5287, float 0.000000e+00, float %5282
  %5289 = fcmp oeq float %5285, 0x40562E4300000000
  %5290 = select i1 %5289, float 0x3EE0000000000000, float 0.000000e+00
  %5291 = fsub float %5285, %5290
  %5292 = fadd float %5290, %5288
  %5293 = fmul float %5291, 0x3FF7154760000000
  %5294 = tail call float @llvm.rint.f32(float %5293)
  %5295 = fcmp ogt float %5291, 0x40562E4300000000
  %5296 = fcmp olt float %5291, 0xC059D1DA00000000
  %5297 = fneg float %5293
  %5298 = tail call float @llvm.fma.f32(float %5291, float 0x3FF7154760000000, float %5297)
  %5299 = tail call float @llvm.fma.f32(float %5291, float 0x3E54AE0BE0000000, float %5298)
  %5300 = fsub float %5293, %5294
  %5301 = fadd float %5299, %5300
  %5302 = tail call float @llvm.exp2.f32(float %5301)
  %5303 = fptosi float %5294 to i32
  %5304 = tail call float @llvm.amdgcn.ldexp.f32(float %5302, i32 %5303)
  %5305 = select i1 %5296, float 0.000000e+00, float %5304
  %5306 = select i1 %5295, float 0x7FF0000000000000, float %5305
  %5307 = tail call float @llvm.fma.f32(float %5306, float %5292, float %5306)
  %5308 = tail call float @llvm.fabs.f32(float %5306) #3
  %5309 = fcmp oeq float %5308, 0x7FF0000000000000
  %5310 = select i1 %5309, float %5306, float %5307
  %5311 = tail call float @llvm.fabs.f32(float %5310)
  %5312 = fcmp uge float %1881, 0.000000e+00
  %5313 = select i1 %5312, float %5311, float 0x7FF8000000000000
  %5314 = fcmp oeq float %5168, 0x7FF0000000000000
  %5315 = fcmp oeq float %1881, 0.000000e+00
  %5316 = or i1 %5315, %5314
  %5317 = select i1 %5315, float 0.000000e+00, float 0x7FF0000000000000
  %5318 = select i1 %5316, float %5317, float %5313
  %5319 = fcmp uno float %1881, 0.000000e+00
  %5320 = select i1 %5319, float 0x7FF8000000000000, float %5318
  %5321 = fcmp oeq float %1881, 1.000000e+00
  %5322 = select i1 %5321, float 1.000000e+00, float %5320
  %5323 = fmul contract float %5322, 0x3FAEAAD1C0000000
  %5324 = fadd contract float %5322, 0x3ED5EDBBE0000000
  %5325 = fdiv contract float %5323, %5324
  %5326 = fadd contract float %5167, %5325
  %5327 = fmul contract float %5326, 0xBDE2FAF640000000
  %5328 = fdiv contract float %5327, 0x3ED15D4E40000000
  %5329 = fmul contract float %5328, 1.000000e+03
  %5330 = getelementptr inbounds float, float addrspace(1)* %1843, i64 43
  store float %5329, float addrspace(1)* %5330, align 4, !tbaa !6
  %5331 = fsub contract float %1883, %1944
  %5332 = fmul contract float %5331, 0x3EFCFC5C60000000
  %5333 = fsub contract float %1883, %1959
  %5334 = fmul contract float %5333, 0x3F2D50AEE0000000
  %5335 = fadd contract float %5332, %5334
  %5336 = fmul contract float %5335, 0xBDE2FAF640000000
  %5337 = fdiv contract float %5336, 0x3ED15D4E40000000
  %5338 = fmul contract float %5337, 1.000000e+03
  %5339 = getelementptr inbounds float, float addrspace(1)* %1843, i64 45
  store float %5338, float addrspace(1)* %5339, align 4, !tbaa !6
  %5340 = fdiv contract float 0x3FDCCCCCC0000000, %1875
  %5341 = tail call float @llvm.fabs.f32(float %5340)
  %5342 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5341)
  %5343 = fcmp olt float %5342, 0x3FE5555560000000
  %5344 = zext i1 %5343 to i32
  %5345 = tail call float @llvm.amdgcn.ldexp.f32(float %5342, i32 %5344)
  %5346 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5341)
  %5347 = sub nsw i32 %5346, %5344
  %5348 = fadd float %5345, -1.000000e+00
  %5349 = fadd float %5345, 1.000000e+00
  %5350 = fadd float %5349, -1.000000e+00
  %5351 = fsub float %5345, %5350
  %5352 = tail call float @llvm.amdgcn.rcp.f32(float %5349)
  %5353 = fmul float %5348, %5352
  %5354 = fmul float %5349, %5353
  %5355 = fneg float %5354
  %5356 = tail call float @llvm.fma.f32(float %5353, float %5349, float %5355)
  %5357 = tail call float @llvm.fma.f32(float %5353, float %5351, float %5356)
  %5358 = fadd float %5354, %5357
  %5359 = fsub float %5358, %5354
  %5360 = fsub float %5357, %5359
  %5361 = fsub float %5348, %5358
  %5362 = fsub float %5348, %5361
  %5363 = fsub float %5362, %5358
  %5364 = fsub float %5363, %5360
  %5365 = fadd float %5361, %5364
  %5366 = fmul float %5352, %5365
  %5367 = fadd float %5353, %5366
  %5368 = fsub float %5367, %5353
  %5369 = fsub float %5366, %5368
  %5370 = fmul float %5367, %5367
  %5371 = fneg float %5370
  %5372 = tail call float @llvm.fma.f32(float %5367, float %5367, float %5371)
  %5373 = fmul float %5369, 2.000000e+00
  %5374 = tail call float @llvm.fma.f32(float %5367, float %5373, float %5372)
  %5375 = fadd float %5370, %5374
  %5376 = fsub float %5375, %5370
  %5377 = fsub float %5374, %5376
  %5378 = tail call float @llvm.fmuladd.f32(float %5375, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5379 = tail call float @llvm.fmuladd.f32(float %5375, float %5378, float 0x3FD999BDE0000000)
  %5380 = sitofp i32 %5347 to float
  %5381 = fmul float %5380, 0x3FE62E4300000000
  %5382 = fneg float %5381
  %5383 = tail call float @llvm.fma.f32(float %5380, float 0x3FE62E4300000000, float %5382)
  %5384 = tail call float @llvm.fma.f32(float %5380, float 0xBE205C6100000000, float %5383)
  %5385 = fadd float %5381, %5384
  %5386 = fsub float %5385, %5381
  %5387 = fsub float %5384, %5386
  %5388 = tail call float @llvm.amdgcn.ldexp.f32(float %5367, i32 1)
  %5389 = fmul float %5367, %5375
  %5390 = fneg float %5389
  %5391 = tail call float @llvm.fma.f32(float %5375, float %5367, float %5390)
  %5392 = tail call float @llvm.fma.f32(float %5375, float %5369, float %5391)
  %5393 = tail call float @llvm.fma.f32(float %5377, float %5367, float %5392)
  %5394 = fadd float %5389, %5393
  %5395 = fsub float %5394, %5389
  %5396 = fsub float %5393, %5395
  %5397 = fmul float %5375, %5379
  %5398 = fneg float %5397
  %5399 = tail call float @llvm.fma.f32(float %5375, float %5379, float %5398)
  %5400 = tail call float @llvm.fma.f32(float %5377, float %5379, float %5399)
  %5401 = fadd float %5397, %5400
  %5402 = fsub float %5401, %5397
  %5403 = fsub float %5400, %5402
  %5404 = fadd float %5401, 0x3FE5555540000000
  %5405 = fadd float %5404, 0xBFE5555540000000
  %5406 = fsub float %5401, %5405
  %5407 = fadd float %5403, 0x3E2E720200000000
  %5408 = fadd float %5407, %5406
  %5409 = fadd float %5404, %5408
  %5410 = fsub float %5409, %5404
  %5411 = fsub float %5408, %5410
  %5412 = fmul float %5394, %5409
  %5413 = fneg float %5412
  %5414 = tail call float @llvm.fma.f32(float %5394, float %5409, float %5413)
  %5415 = tail call float @llvm.fma.f32(float %5394, float %5411, float %5414)
  %5416 = tail call float @llvm.fma.f32(float %5396, float %5409, float %5415)
  %5417 = tail call float @llvm.amdgcn.ldexp.f32(float %5369, i32 1)
  %5418 = fadd float %5412, %5416
  %5419 = fsub float %5418, %5412
  %5420 = fsub float %5416, %5419
  %5421 = fadd float %5388, %5418
  %5422 = fsub float %5421, %5388
  %5423 = fsub float %5418, %5422
  %5424 = fadd float %5417, %5420
  %5425 = fadd float %5424, %5423
  %5426 = fadd float %5421, %5425
  %5427 = fsub float %5426, %5421
  %5428 = fsub float %5425, %5427
  %5429 = fadd float %5385, %5426
  %5430 = fsub float %5429, %5385
  %5431 = fsub float %5429, %5430
  %5432 = fsub float %5385, %5431
  %5433 = fsub float %5426, %5430
  %5434 = fadd float %5433, %5432
  %5435 = fadd float %5387, %5428
  %5436 = fsub float %5435, %5387
  %5437 = fsub float %5435, %5436
  %5438 = fsub float %5387, %5437
  %5439 = fsub float %5428, %5436
  %5440 = fadd float %5439, %5438
  %5441 = fadd float %5435, %5434
  %5442 = fadd float %5429, %5441
  %5443 = fsub float %5442, %5429
  %5444 = fsub float %5441, %5443
  %5445 = fadd float %5440, %5444
  %5446 = fadd float %5442, %5445
  %5447 = fsub float %5446, %5442
  %5448 = fsub float %5445, %5447
  %5449 = fmul float %5446, 2.500000e+00
  %5450 = fneg float %5449
  %5451 = tail call float @llvm.fma.f32(float %5446, float 2.500000e+00, float %5450)
  %5452 = tail call float @llvm.fma.f32(float %5448, float 2.500000e+00, float %5451)
  %5453 = fadd float %5449, %5452
  %5454 = fsub float %5453, %5449
  %5455 = fsub float %5452, %5454
  %5456 = tail call float @llvm.fabs.f32(float %5449) #3
  %5457 = fcmp oeq float %5456, 0x7FF0000000000000
  %5458 = select i1 %5457, float %5449, float %5453
  %5459 = tail call float @llvm.fabs.f32(float %5458) #3
  %5460 = fcmp oeq float %5459, 0x7FF0000000000000
  %5461 = select i1 %5460, float 0.000000e+00, float %5455
  %5462 = fcmp oeq float %5458, 0x40562E4300000000
  %5463 = select i1 %5462, float 0x3EE0000000000000, float 0.000000e+00
  %5464 = fsub float %5458, %5463
  %5465 = fadd float %5463, %5461
  %5466 = fmul float %5464, 0x3FF7154760000000
  %5467 = tail call float @llvm.rint.f32(float %5466)
  %5468 = fcmp ogt float %5464, 0x40562E4300000000
  %5469 = fcmp olt float %5464, 0xC059D1DA00000000
  %5470 = fneg float %5466
  %5471 = tail call float @llvm.fma.f32(float %5464, float 0x3FF7154760000000, float %5470)
  %5472 = tail call float @llvm.fma.f32(float %5464, float 0x3E54AE0BE0000000, float %5471)
  %5473 = fsub float %5466, %5467
  %5474 = fadd float %5472, %5473
  %5475 = tail call float @llvm.exp2.f32(float %5474)
  %5476 = fptosi float %5467 to i32
  %5477 = tail call float @llvm.amdgcn.ldexp.f32(float %5475, i32 %5476)
  %5478 = select i1 %5469, float 0.000000e+00, float %5477
  %5479 = select i1 %5468, float 0x7FF0000000000000, float %5478
  %5480 = tail call float @llvm.fma.f32(float %5479, float %5465, float %5479)
  %5481 = tail call float @llvm.fabs.f32(float %5479) #3
  %5482 = fcmp oeq float %5481, 0x7FF0000000000000
  %5483 = select i1 %5482, float %5479, float %5480
  %5484 = tail call float @llvm.fabs.f32(float %5483)
  %5485 = fcmp uge float %5340, 0.000000e+00
  %5486 = select i1 %5485, float %5484, float 0x7FF8000000000000
  %5487 = fcmp oeq float %5341, 0x7FF0000000000000
  %5488 = fcmp oeq float %5340, 0.000000e+00
  %5489 = or i1 %5488, %5487
  %5490 = select i1 %5488, float 0.000000e+00, float 0x7FF0000000000000
  %5491 = select i1 %5489, float %5490, float %5486
  %5492 = fcmp uno float %5340, 0.000000e+00
  %5493 = fcmp oeq float %5340, 1.000000e+00
  %5494 = fadd contract float %5491, 1.000000e+00
  %5495 = fdiv contract float 1.400000e+01, %5494
  %5496 = fsub contract float 1.500000e+01, %5495
  %5497 = select i1 %5492, float 0x7FF8000000000000, float %5496
  %5498 = select i1 %5493, float 8.000000e+00, float %5497
  %5499 = fdiv contract float 1.000000e+01, %5498
  %5500 = fmul contract float %5498, 5.000000e-01
  %5501 = fsub contract float 1.000000e+00, %1859
  %5502 = fsub contract float %5501, %1860
  %5503 = fsub contract float %5502, %1861
  %5504 = fmul contract float %5503, 0x3F747AE140000000
  %5505 = fmul contract float %1880, %5500
  %5506 = fmul contract float %1859, %5505
  %5507 = fsub contract float %5504, %5506
  %5508 = fmul float %5115, 2.000000e+00
  %5509 = fneg float %5508
  %5510 = tail call float @llvm.fma.f32(float %5115, float 2.000000e+00, float %5509)
  %5511 = fmul float %5115, 0.000000e+00
  %5512 = tail call float @llvm.fma.f32(float %5117, float 2.000000e+00, float %5511)
  %5513 = fadd float %5510, %5512
  %5514 = fadd float %5508, %5513
  %5515 = fsub float %5514, %5508
  %5516 = fsub float %5513, %5515
  %5517 = tail call float @llvm.fabs.f32(float %5508) #3
  %5518 = fcmp oeq float %5517, 0x7FF0000000000000
  %5519 = select i1 %5518, float %5508, float %5514
  %5520 = tail call float @llvm.fabs.f32(float %5519) #3
  %5521 = fcmp oeq float %5520, 0x7FF0000000000000
  %5522 = select i1 %5521, float 0.000000e+00, float %5516
  %5523 = fcmp oeq float %5519, 0x40562E4300000000
  %5524 = select i1 %5523, float 0x3EE0000000000000, float 0.000000e+00
  %5525 = fsub float %5519, %5524
  %5526 = fadd float %5524, %5522
  %5527 = fmul float %5525, 0x3FF7154760000000
  %5528 = tail call float @llvm.rint.f32(float %5527)
  %5529 = fcmp ogt float %5525, 0x40562E4300000000
  %5530 = fcmp olt float %5525, 0xC059D1DA00000000
  %5531 = fneg float %5527
  %5532 = tail call float @llvm.fma.f32(float %5525, float 0x3FF7154760000000, float %5531)
  %5533 = tail call float @llvm.fma.f32(float %5525, float 0x3E54AE0BE0000000, float %5532)
  %5534 = fsub float %5527, %5528
  %5535 = fadd float %5533, %5534
  %5536 = tail call float @llvm.exp2.f32(float %5535)
  %5537 = fptosi float %5528 to i32
  %5538 = tail call float @llvm.amdgcn.ldexp.f32(float %5536, i32 %5537)
  %5539 = select i1 %5530, float 0.000000e+00, float %5538
  %5540 = select i1 %5529, float 0x7FF0000000000000, float %5539
  %5541 = tail call float @llvm.fma.f32(float %5540, float %5526, float %5540)
  %5542 = tail call float @llvm.fabs.f32(float %5540) #3
  %5543 = fcmp oeq float %5542, 0x7FF0000000000000
  %5544 = select i1 %5543, float %5540, float %5541
  %5545 = tail call float @llvm.fabs.f32(float %5544)
  %5546 = select i1 %5158, float %5159, float %5545
  %5547 = select i1 %5161, float 0x7FF8000000000000, float %5546
  %5548 = fmul contract float %5547, %5499
  %5549 = fmul contract float %1859, %5548
  %5550 = fmul contract float %1860, 0x3FAEB851E0000000
  %5551 = fsub contract float %5549, %5550
  %5552 = fsub contract float %5507, %5551
  %5553 = getelementptr inbounds float, float addrspace(1)* %1843, i64 13
  store float %5552, float addrspace(1)* %5553, align 4, !tbaa !6
  %5554 = fmul contract float %1860, %5505
  %5555 = fmul contract float %1861, 0x3F747AE140000000
  %5556 = fsub contract float %5554, %5555
  %5557 = fsub contract float %5551, %5556
  %5558 = getelementptr inbounds float, float addrspace(1)* %1843, i64 14
  store float %5557, float addrspace(1)* %5558, align 4, !tbaa !6
  %5559 = fmul contract float %1861, 0x3FAEB851E0000000
  %5560 = fmul contract float %5503, %5548
  %5561 = fsub contract float %5559, %5560
  %5562 = fsub contract float %5556, %5561
  %5563 = getelementptr inbounds float, float addrspace(1)* %1843, i64 15
  store float %5562, float addrspace(1)* %5563, align 4, !tbaa !6
  %5564 = fmul contract float %1860, 2.500000e+01
  %5565 = fsub contract float %1875, %1880
  %5566 = fmul contract float %5564, %5565
  %5567 = fdiv contract float %1882, 0x3F301F3200000000
  %5568 = tail call float @llvm.fabs.f32(float %5567)
  %5569 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5568)
  %5570 = fcmp olt float %5569, 0x3FE5555560000000
  %5571 = zext i1 %5570 to i32
  %5572 = tail call float @llvm.amdgcn.ldexp.f32(float %5569, i32 %5571)
  %5573 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5568)
  %5574 = sub nsw i32 %5573, %5571
  %5575 = fadd float %5572, -1.000000e+00
  %5576 = fadd float %5572, 1.000000e+00
  %5577 = fadd float %5576, -1.000000e+00
  %5578 = fsub float %5572, %5577
  %5579 = tail call float @llvm.amdgcn.rcp.f32(float %5576)
  %5580 = fmul float %5575, %5579
  %5581 = fmul float %5576, %5580
  %5582 = fneg float %5581
  %5583 = tail call float @llvm.fma.f32(float %5580, float %5576, float %5582)
  %5584 = tail call float @llvm.fma.f32(float %5580, float %5578, float %5583)
  %5585 = fadd float %5581, %5584
  %5586 = fsub float %5585, %5581
  %5587 = fsub float %5584, %5586
  %5588 = fsub float %5575, %5585
  %5589 = fsub float %5575, %5588
  %5590 = fsub float %5589, %5585
  %5591 = fsub float %5590, %5587
  %5592 = fadd float %5588, %5591
  %5593 = fmul float %5579, %5592
  %5594 = fadd float %5580, %5593
  %5595 = fsub float %5594, %5580
  %5596 = fsub float %5593, %5595
  %5597 = fmul float %5594, %5594
  %5598 = fneg float %5597
  %5599 = tail call float @llvm.fma.f32(float %5594, float %5594, float %5598)
  %5600 = fmul float %5596, 2.000000e+00
  %5601 = tail call float @llvm.fma.f32(float %5594, float %5600, float %5599)
  %5602 = fadd float %5597, %5601
  %5603 = fsub float %5602, %5597
  %5604 = fsub float %5601, %5603
  %5605 = tail call float @llvm.fmuladd.f32(float %5602, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5606 = tail call float @llvm.fmuladd.f32(float %5602, float %5605, float 0x3FD999BDE0000000)
  %5607 = sitofp i32 %5574 to float
  %5608 = fmul float %5607, 0x3FE62E4300000000
  %5609 = fneg float %5608
  %5610 = tail call float @llvm.fma.f32(float %5607, float 0x3FE62E4300000000, float %5609)
  %5611 = tail call float @llvm.fma.f32(float %5607, float 0xBE205C6100000000, float %5610)
  %5612 = fadd float %5608, %5611
  %5613 = fsub float %5612, %5608
  %5614 = fsub float %5611, %5613
  %5615 = tail call float @llvm.amdgcn.ldexp.f32(float %5594, i32 1)
  %5616 = fmul float %5594, %5602
  %5617 = fneg float %5616
  %5618 = tail call float @llvm.fma.f32(float %5602, float %5594, float %5617)
  %5619 = tail call float @llvm.fma.f32(float %5602, float %5596, float %5618)
  %5620 = tail call float @llvm.fma.f32(float %5604, float %5594, float %5619)
  %5621 = fadd float %5616, %5620
  %5622 = fsub float %5621, %5616
  %5623 = fsub float %5620, %5622
  %5624 = fmul float %5602, %5606
  %5625 = fneg float %5624
  %5626 = tail call float @llvm.fma.f32(float %5602, float %5606, float %5625)
  %5627 = tail call float @llvm.fma.f32(float %5604, float %5606, float %5626)
  %5628 = fadd float %5624, %5627
  %5629 = fsub float %5628, %5624
  %5630 = fsub float %5627, %5629
  %5631 = fadd float %5628, 0x3FE5555540000000
  %5632 = fadd float %5631, 0xBFE5555540000000
  %5633 = fsub float %5628, %5632
  %5634 = fadd float %5630, 0x3E2E720200000000
  %5635 = fadd float %5634, %5633
  %5636 = fadd float %5631, %5635
  %5637 = fsub float %5636, %5631
  %5638 = fsub float %5635, %5637
  %5639 = fmul float %5621, %5636
  %5640 = fneg float %5639
  %5641 = tail call float @llvm.fma.f32(float %5621, float %5636, float %5640)
  %5642 = tail call float @llvm.fma.f32(float %5621, float %5638, float %5641)
  %5643 = tail call float @llvm.fma.f32(float %5623, float %5636, float %5642)
  %5644 = tail call float @llvm.amdgcn.ldexp.f32(float %5596, i32 1)
  %5645 = fadd float %5639, %5643
  %5646 = fsub float %5645, %5639
  %5647 = fsub float %5643, %5646
  %5648 = fadd float %5615, %5645
  %5649 = fsub float %5648, %5615
  %5650 = fsub float %5645, %5649
  %5651 = fadd float %5644, %5647
  %5652 = fadd float %5651, %5650
  %5653 = fadd float %5648, %5652
  %5654 = fsub float %5653, %5648
  %5655 = fsub float %5652, %5654
  %5656 = fadd float %5612, %5653
  %5657 = fsub float %5656, %5612
  %5658 = fsub float %5656, %5657
  %5659 = fsub float %5612, %5658
  %5660 = fsub float %5653, %5657
  %5661 = fadd float %5660, %5659
  %5662 = fadd float %5614, %5655
  %5663 = fsub float %5662, %5614
  %5664 = fsub float %5662, %5663
  %5665 = fsub float %5614, %5664
  %5666 = fsub float %5655, %5663
  %5667 = fadd float %5666, %5665
  %5668 = fadd float %5662, %5661
  %5669 = fadd float %5656, %5668
  %5670 = fsub float %5669, %5656
  %5671 = fsub float %5668, %5670
  %5672 = fadd float %5667, %5671
  %5673 = fadd float %5669, %5672
  %5674 = fsub float %5673, %5669
  %5675 = fsub float %5672, %5674
  %5676 = fmul float %5673, 0x3FFC978D40000000
  %5677 = fneg float %5676
  %5678 = tail call float @llvm.fma.f32(float %5673, float 0x3FFC978D40000000, float %5677)
  %5679 = tail call float @llvm.fma.f32(float %5675, float 0x3FFC978D40000000, float %5678)
  %5680 = fadd float %5676, %5679
  %5681 = fsub float %5680, %5676
  %5682 = fsub float %5679, %5681
  %5683 = tail call float @llvm.fabs.f32(float %5676) #3
  %5684 = fcmp oeq float %5683, 0x7FF0000000000000
  %5685 = select i1 %5684, float %5676, float %5680
  %5686 = tail call float @llvm.fabs.f32(float %5685) #3
  %5687 = fcmp oeq float %5686, 0x7FF0000000000000
  %5688 = select i1 %5687, float 0.000000e+00, float %5682
  %5689 = fcmp oeq float %5685, 0x40562E4300000000
  %5690 = select i1 %5689, float 0x3EE0000000000000, float 0.000000e+00
  %5691 = fsub float %5685, %5690
  %5692 = fadd float %5690, %5688
  %5693 = fmul float %5691, 0x3FF7154760000000
  %5694 = tail call float @llvm.rint.f32(float %5693)
  %5695 = fcmp ogt float %5691, 0x40562E4300000000
  %5696 = fcmp olt float %5691, 0xC059D1DA00000000
  %5697 = fneg float %5693
  %5698 = tail call float @llvm.fma.f32(float %5691, float 0x3FF7154760000000, float %5697)
  %5699 = tail call float @llvm.fma.f32(float %5691, float 0x3E54AE0BE0000000, float %5698)
  %5700 = fsub float %5693, %5694
  %5701 = fadd float %5699, %5700
  %5702 = tail call float @llvm.exp2.f32(float %5701)
  %5703 = fptosi float %5694 to i32
  %5704 = tail call float @llvm.amdgcn.ldexp.f32(float %5702, i32 %5703)
  %5705 = select i1 %5696, float 0.000000e+00, float %5704
  %5706 = select i1 %5695, float 0x7FF0000000000000, float %5705
  %5707 = tail call float @llvm.fma.f32(float %5706, float %5692, float %5706)
  %5708 = tail call float @llvm.fabs.f32(float %5706) #3
  %5709 = fcmp oeq float %5708, 0x7FF0000000000000
  %5710 = select i1 %5709, float %5706, float %5707
  %5711 = tail call float @llvm.fabs.f32(float %5710)
  %5712 = fcmp uge float %5567, 0.000000e+00
  %5713 = select i1 %5712, float %5711, float 0x7FF8000000000000
  %5714 = fcmp oeq float %5568, 0x7FF0000000000000
  %5715 = fcmp oeq float %5567, 0.000000e+00
  %5716 = or i1 %5715, %5714
  %5717 = select i1 %5715, float 0.000000e+00, float 0x7FF0000000000000
  %5718 = select i1 %5716, float %5717, float %5713
  %5719 = fcmp uno float %5567, 0.000000e+00
  %5720 = select i1 %5719, float 0x7FF8000000000000, float %5718
  %5721 = fcmp oeq float %5567, 1.000000e+00
  %5722 = select i1 %5721, float 1.000000e+00, float %5720
  %5723 = fdiv contract float %1875, 0x3FFB333340000000
  %5724 = tail call float @llvm.fabs.f32(float %5723)
  %5725 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5724)
  %5726 = fcmp olt float %5725, 0x3FE5555560000000
  %5727 = zext i1 %5726 to i32
  %5728 = tail call float @llvm.amdgcn.ldexp.f32(float %5725, i32 %5727)
  %5729 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5724)
  %5730 = sub nsw i32 %5729, %5727
  %5731 = fadd float %5728, -1.000000e+00
  %5732 = fadd float %5728, 1.000000e+00
  %5733 = fadd float %5732, -1.000000e+00
  %5734 = fsub float %5728, %5733
  %5735 = tail call float @llvm.amdgcn.rcp.f32(float %5732)
  %5736 = fmul float %5731, %5735
  %5737 = fmul float %5732, %5736
  %5738 = fneg float %5737
  %5739 = tail call float @llvm.fma.f32(float %5736, float %5732, float %5738)
  %5740 = tail call float @llvm.fma.f32(float %5736, float %5734, float %5739)
  %5741 = fadd float %5737, %5740
  %5742 = fsub float %5741, %5737
  %5743 = fsub float %5740, %5742
  %5744 = fsub float %5731, %5741
  %5745 = fsub float %5731, %5744
  %5746 = fsub float %5745, %5741
  %5747 = fsub float %5746, %5743
  %5748 = fadd float %5744, %5747
  %5749 = fmul float %5735, %5748
  %5750 = fadd float %5736, %5749
  %5751 = fsub float %5750, %5736
  %5752 = fsub float %5749, %5751
  %5753 = fmul float %5750, %5750
  %5754 = fneg float %5753
  %5755 = tail call float @llvm.fma.f32(float %5750, float %5750, float %5754)
  %5756 = fmul float %5752, 2.000000e+00
  %5757 = tail call float @llvm.fma.f32(float %5750, float %5756, float %5755)
  %5758 = fadd float %5753, %5757
  %5759 = fsub float %5758, %5753
  %5760 = fsub float %5757, %5759
  %5761 = tail call float @llvm.fmuladd.f32(float %5758, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5762 = tail call float @llvm.fmuladd.f32(float %5758, float %5761, float 0x3FD999BDE0000000)
  %5763 = sitofp i32 %5730 to float
  %5764 = fmul float %5763, 0x3FE62E4300000000
  %5765 = fneg float %5764
  %5766 = tail call float @llvm.fma.f32(float %5763, float 0x3FE62E4300000000, float %5765)
  %5767 = tail call float @llvm.fma.f32(float %5763, float 0xBE205C6100000000, float %5766)
  %5768 = fadd float %5764, %5767
  %5769 = fsub float %5768, %5764
  %5770 = fsub float %5767, %5769
  %5771 = tail call float @llvm.amdgcn.ldexp.f32(float %5750, i32 1)
  %5772 = fmul float %5750, %5758
  %5773 = fneg float %5772
  %5774 = tail call float @llvm.fma.f32(float %5758, float %5750, float %5773)
  %5775 = tail call float @llvm.fma.f32(float %5758, float %5752, float %5774)
  %5776 = tail call float @llvm.fma.f32(float %5760, float %5750, float %5775)
  %5777 = fadd float %5772, %5776
  %5778 = fsub float %5777, %5772
  %5779 = fsub float %5776, %5778
  %5780 = fmul float %5758, %5762
  %5781 = fneg float %5780
  %5782 = tail call float @llvm.fma.f32(float %5758, float %5762, float %5781)
  %5783 = tail call float @llvm.fma.f32(float %5760, float %5762, float %5782)
  %5784 = fadd float %5780, %5783
  %5785 = fsub float %5784, %5780
  %5786 = fsub float %5783, %5785
  %5787 = fadd float %5784, 0x3FE5555540000000
  %5788 = fadd float %5787, 0xBFE5555540000000
  %5789 = fsub float %5784, %5788
  %5790 = fadd float %5786, 0x3E2E720200000000
  %5791 = fadd float %5790, %5789
  %5792 = fadd float %5787, %5791
  %5793 = fsub float %5792, %5787
  %5794 = fsub float %5791, %5793
  %5795 = fmul float %5777, %5792
  %5796 = fneg float %5795
  %5797 = tail call float @llvm.fma.f32(float %5777, float %5792, float %5796)
  %5798 = tail call float @llvm.fma.f32(float %5777, float %5794, float %5797)
  %5799 = tail call float @llvm.fma.f32(float %5779, float %5792, float %5798)
  %5800 = tail call float @llvm.amdgcn.ldexp.f32(float %5752, i32 1)
  %5801 = fadd float %5795, %5799
  %5802 = fsub float %5801, %5795
  %5803 = fsub float %5799, %5802
  %5804 = fadd float %5771, %5801
  %5805 = fsub float %5804, %5771
  %5806 = fsub float %5801, %5805
  %5807 = fadd float %5800, %5803
  %5808 = fadd float %5807, %5806
  %5809 = fadd float %5804, %5808
  %5810 = fsub float %5809, %5804
  %5811 = fsub float %5808, %5810
  %5812 = fadd float %5768, %5809
  %5813 = fsub float %5812, %5768
  %5814 = fsub float %5812, %5813
  %5815 = fsub float %5768, %5814
  %5816 = fsub float %5809, %5813
  %5817 = fadd float %5816, %5815
  %5818 = fadd float %5770, %5811
  %5819 = fsub float %5818, %5770
  %5820 = fsub float %5818, %5819
  %5821 = fsub float %5770, %5820
  %5822 = fsub float %5811, %5819
  %5823 = fadd float %5822, %5821
  %5824 = fadd float %5818, %5817
  %5825 = fadd float %5812, %5824
  %5826 = fsub float %5825, %5812
  %5827 = fsub float %5824, %5826
  %5828 = fadd float %5823, %5827
  %5829 = fadd float %5825, %5828
  %5830 = fsub float %5829, %5825
  %5831 = fsub float %5828, %5830
  %5832 = fmul float %5829, 0x3FFC978D40000000
  %5833 = fneg float %5832
  %5834 = tail call float @llvm.fma.f32(float %5829, float 0x3FFC978D40000000, float %5833)
  %5835 = tail call float @llvm.fma.f32(float %5831, float 0x3FFC978D40000000, float %5834)
  %5836 = fadd float %5832, %5835
  %5837 = fsub float %5836, %5832
  %5838 = fsub float %5835, %5837
  %5839 = tail call float @llvm.fabs.f32(float %5832) #3
  %5840 = fcmp oeq float %5839, 0x7FF0000000000000
  %5841 = select i1 %5840, float %5832, float %5836
  %5842 = tail call float @llvm.fabs.f32(float %5841) #3
  %5843 = fcmp oeq float %5842, 0x7FF0000000000000
  %5844 = select i1 %5843, float 0.000000e+00, float %5838
  %5845 = fcmp oeq float %5841, 0x40562E4300000000
  %5846 = select i1 %5845, float 0x3EE0000000000000, float 0.000000e+00
  %5847 = fsub float %5841, %5846
  %5848 = fadd float %5846, %5844
  %5849 = fmul float %5847, 0x3FF7154760000000
  %5850 = tail call float @llvm.rint.f32(float %5849)
  %5851 = fcmp ogt float %5847, 0x40562E4300000000
  %5852 = fcmp olt float %5847, 0xC059D1DA00000000
  %5853 = fneg float %5849
  %5854 = tail call float @llvm.fma.f32(float %5847, float 0x3FF7154760000000, float %5853)
  %5855 = tail call float @llvm.fma.f32(float %5847, float 0x3E54AE0BE0000000, float %5854)
  %5856 = fsub float %5849, %5850
  %5857 = fadd float %5855, %5856
  %5858 = tail call float @llvm.exp2.f32(float %5857)
  %5859 = fptosi float %5850 to i32
  %5860 = tail call float @llvm.amdgcn.ldexp.f32(float %5858, i32 %5859)
  %5861 = select i1 %5852, float 0.000000e+00, float %5860
  %5862 = select i1 %5851, float 0x7FF0000000000000, float %5861
  %5863 = tail call float @llvm.fma.f32(float %5862, float %5848, float %5862)
  %5864 = tail call float @llvm.fabs.f32(float %5862) #3
  %5865 = fcmp oeq float %5864, 0x7FF0000000000000
  %5866 = select i1 %5865, float %5862, float %5863
  %5867 = tail call float @llvm.fabs.f32(float %5866)
  %5868 = fcmp uge float %5723, 0.000000e+00
  %5869 = select i1 %5868, float %5867, float 0x7FF8000000000000
  %5870 = fcmp oeq float %5724, 0x7FF0000000000000
  %5871 = fcmp oeq float %5723, 0.000000e+00
  %5872 = or i1 %5871, %5870
  %5873 = select i1 %5871, float 0.000000e+00, float 0x7FF0000000000000
  %5874 = select i1 %5872, float %5873, float %5869
  %5875 = fcmp uno float %5723, 0.000000e+00
  %5876 = select i1 %5875, float 0x7FF8000000000000, float %5874
  %5877 = fcmp oeq float %5723, 1.000000e+00
  %5878 = select i1 %5877, float 1.000000e+00, float %5876
  %5879 = fsub contract float %5722, %5878
  %5880 = fmul contract float %5879, 0x3F32BE48A0000000
  %5881 = fadd contract float %5722, 1.000000e+00
  %5882 = fadd contract float %5878, %5881
  %5883 = fdiv contract float %5880, %5882
  %5884 = fpext float %5565 to double
  %5885 = fmul contract double %5884, 5.348000e-06
  %5886 = fptrunc double %5885 to float
  %5887 = fmul contract float %1876, 0x3F1A36E2E0000000
  %5888 = fsub contract float 0x401E3E76C0000000, %1862
  %5889 = fmul contract float %5888, %5887
  %5890 = fmul contract float %1862, 0x3F50624DE0000000
  %5891 = fsub contract float %5889, %5890
  %5892 = getelementptr inbounds float, float addrspace(1)* %1843, i64 16
  store float %5891, float addrspace(1)* %5892, align 4, !tbaa !6
  %5893 = fmul contract float %1877, 0x3F1A36E2E0000000
  %5894 = fsub contract float 0x3FFA666660000000, %1863
  %5895 = fmul contract float %5894, %5893
  %5896 = fmul contract float %1863, 0x3F50624DE0000000
  %5897 = fsub contract float %5895, %5896
  %5898 = getelementptr inbounds float, float addrspace(1)* %1843, i64 17
  store float %5897, float addrspace(1)* %5898, align 4, !tbaa !6
  %5899 = fmul contract float %1882, 0x40405999A0000000
  %5900 = fsub contract float 0x3FB1EB8520000000, %1864
  %5901 = fmul contract float %5900, %5899
  %5902 = fmul contract float %1864, 0x3F941205C0000000
  %5903 = fsub contract float %5901, %5902
  %5904 = getelementptr inbounds float, float addrspace(1)* %1843, i64 18
  store float %5903, float addrspace(1)* %5904, align 4, !tbaa !6
  %5905 = fmul contract float %1882, 0x4002F5C280000000
  %5906 = fsub contract float 0x3FC1EB8520000000, %1865
  %5907 = fsub contract float %5906, %1866
  %5908 = fmul contract float %5907, %5905
  %5909 = fmul contract float %1865, 0x3F00C6F7A0000000
  %5910 = fsub contract float %5908, %5909
  %5911 = getelementptr inbounds float, float addrspace(1)* %1843, i64 19
  store float %5910, float addrspace(1)* %5911, align 4, !tbaa !6
  %5912 = fmul contract float %5907, 0x3F689374C0000000
  %5913 = fmul contract float %1866, 0x3F6B478420000000
  %5914 = fsub contract float %5912, %5913
  %5915 = getelementptr inbounds float, float addrspace(1)* %1843, i64 20
  store float %5914, float addrspace(1)* %5915, align 4, !tbaa !6
  %5916 = getelementptr inbounds float, float addrspace(1)* %1843, i64 21
  store float 0.000000e+00, float addrspace(1)* %5916, align 4, !tbaa !6
  %5917 = fmul contract float %1882, 0x402B9999A0000000
  %5918 = fsub contract float 0x3FC1EB8520000000, %1867
  %5919 = fsub contract float %5918, %1868
  %5920 = fmul contract float %5919, %5917
  %5921 = fmul contract float %1867, 0x3F3E258500000000
  %5922 = fsub contract float %5920, %5921
  %5923 = getelementptr inbounds float, float addrspace(1)* %1843, i64 22
  store float %5922, float addrspace(1)* %5923, align 4, !tbaa !6
  %5924 = fmul contract float %5919, 0x3F9013A920000000
  %5925 = fmul contract float %1868, 0x3F0DE26920000000
  %5926 = fsub contract float %5924, %5925
  %5927 = getelementptr inbounds float, float addrspace(1)* %1843, i64 23
  store float %5926, float addrspace(1)* %5927, align 4, !tbaa !6
  %5928 = fmul contract float %1882, 1.000000e+02
  %5929 = fsub contract float 0x3F9182A9A0000000, %1869
  %5930 = fmul contract float %5929, %5928
  %5931 = fmul contract float %1869, 0x3FAEB851E0000000
  %5932 = fsub contract float %5930, %5931
  %5933 = getelementptr inbounds float, float addrspace(1)* %1843, i64 24
  store float %5932, float addrspace(1)* %5933, align 4, !tbaa !6
  %5934 = fadd contract float %5903, %5910
  %5935 = fadd contract float %5914, %5934
  %5936 = fadd contract float %5935, 0.000000e+00
  %5937 = fadd contract float %5922, %5936
  %5938 = fadd contract float %5926, %5937
  %5939 = fadd contract float %5932, %5938
  %5940 = fmul contract float %1880, 1.000000e+02
  %5941 = fsub contract float 0x3FE1D41D40000000, %1870
  %5942 = fmul contract float %5941, %5940
  %5943 = fmul contract float %1870, 0x3FF4CCCCC0000000
  %5944 = fsub contract float %5942, %5943
  %5945 = getelementptr inbounds float, float addrspace(1)* %1843, i64 25
  store float %5944, float addrspace(1)* %5945, align 4, !tbaa !6
  %5946 = fmul contract float %1881, 1.000000e+02
  %5947 = fsub contract float 0x3FF3700680000000, %1871
  %5948 = fmul contract float %5947, %5946
  %5949 = fmul contract float %1871, 0x3FF4CCCCC0000000
  %5950 = fsub contract float %5948, %5949
  %5951 = getelementptr inbounds float, float addrspace(1)* %1843, i64 26
  store float %5950, float addrspace(1)* %5951, align 4, !tbaa !6
  %5952 = fsub contract float 0x3FC97829C0000000, %1872
  %5953 = fmul contract float %5952, %5940
  %5954 = fmul contract float %1872, 0x3F9EB851E0000000
  %5955 = fsub contract float %5953, %5954
  %5956 = getelementptr inbounds float, float addrspace(1)* %1843, i64 27
  store float %5955, float addrspace(1)* %5956, align 4, !tbaa !6
  %5957 = fsub contract float 0x3FDBC49BA0000000, %1873
  %5958 = fmul contract float %5957, %5946
  %5959 = fmul contract float %1873, 0x3F9EB851E0000000
  %5960 = fsub contract float %5958, %5959
  %5961 = getelementptr inbounds float, float addrspace(1)* %1843, i64 28
  store float %5960, float addrspace(1)* %5961, align 4, !tbaa !6
  %5962 = fadd contract float %5944, %5955
  %5963 = fadd contract float %5950, %5960
  %5964 = fmul contract float %1875, 1.000000e+02
  %5965 = fsub contract float 0x40059999A0000000, %1874
  %5966 = fmul contract float %5965, %5964
  %5967 = fmul contract float %1874, 6.500000e+01
  %5968 = fsub contract float %5966, %5967
  %5969 = getelementptr inbounds float, float addrspace(1)* %1843, i64 29
  store float %5968, float addrspace(1)* %5969, align 4, !tbaa !6
  %5970 = fmul contract float %5883, 0x3DB796D0C0000000
  %5971 = fmul contract float %5970, 0x4269317620000000
  %5972 = fmul contract float %5886, 0x3DB796D0C0000000
  %5973 = fmul contract float %5972, 0x4269317620000000
  %5974 = fadd contract float %5566, %5973
  %5975 = fsub contract float %5971, %5974
  %5976 = fsub contract float %5975, %5968
  %5977 = getelementptr inbounds float, float addrspace(1)* %1843, i64 30
  store float %5976, float addrspace(1)* %5977, align 4, !tbaa !6
  %5978 = fadd contract float %2464, %2458
  %5979 = fmul contract float %4998, 3.000000e+00
  %5980 = fadd contract float %5978, %5979
  %5981 = fmul contract float %2670, 3.000000e+00
  %5982 = fadd contract float %5981, %5980
  %5983 = fadd contract float %5982, %3973
  %5984 = fadd contract float %2465, %2463
  %5985 = fmul contract float %5003, 3.000000e+00
  %5986 = fadd contract float %5984, %5985
  %5987 = fmul contract float %2829, 3.000000e+00
  %5988 = fadd contract float %5987, %5986
  %5989 = fadd contract float %5988, %3980
  %5990 = fmul contract float %5983, 0x3DE2FAF640000000
  %5991 = fdiv contract float %5990, 0x3E1D7D4E40000000
  %5992 = fsub contract float %1877, %1876
  %5993 = fmul contract float %5992, 0x3FF0784160000000
  %5994 = fsub contract float %5993, %5991
  %5995 = fsub contract float %5994, %5891
  %5996 = getelementptr inbounds float, float addrspace(1)* %1843, i64 31
  store float %5995, float addrspace(1)* %5996, align 4, !tbaa !6
  %5997 = fmul contract float %5989, 0x3DE2FAF640000000
  %5998 = fmul contract float %5997, 0x42760B4760000000
  %5999 = fdiv contract float %5998, 9.648500e+04
  %6000 = fsub contract float %1876, %1877
  %6001 = fmul contract float %6000, 0x3F9C683280000000
  %6002 = fsub contract float %6001, %5999
  %6003 = fsub contract float %1878, %1877
  %6004 = fmul contract float %6003, 0x4003DBB880000000
  %6005 = fadd contract float %6004, %6002
  %6006 = fsub contract float %6005, %5897
  %6007 = getelementptr inbounds float, float addrspace(1)* %1843, i64 32
  store float %6006, float addrspace(1)* %6007, align 4, !tbaa !6
  %6008 = fsub contract float %1877, %1878
  %6009 = fmul contract float %6008, 0x3FB38D8280000000
  %6010 = getelementptr inbounds float, float addrspace(1)* %1843, i64 33
  store float %6009, float addrspace(1)* %6010, align 4, !tbaa !6
  %6011 = getelementptr inbounds float, float addrspace(1)* %1843, i64 34
  store float 0.000000e+00, float addrspace(1)* %6011, align 4, !tbaa !6
  %6012 = fadd contract float %5332, %3954
  %6013 = fadd contract float %6012, %5167
  %6014 = fmul contract float %4998, 2.000000e+00
  %6015 = fsub contract float %6013, %6014
  %6016 = fadd contract float %5334, %3961
  %6017 = fadd contract float %6016, %5325
  %6018 = fmul contract float %5003, 2.000000e+00
  %6019 = fsub contract float %6017, %6018
  %6020 = fmul contract float %6015, 0x3DE2FAF640000000
  %6021 = fdiv contract float %6020, 0x3E2D7D4E40000000
  %6022 = fsub contract float %1881, %1880
  %6023 = fmul contract float %6022, 0x40472981C0000000
  %6024 = fsub contract float %6023, %6021
  %6025 = fsub contract float %6024, %5962
  %6026 = fmul contract float %5566, 0x3D7452AC00000000
  %6027 = fdiv contract float %6026, 0x3D1407C0E0000000
  %6028 = fadd contract float %6027, %6025
  %6029 = fdiv contract float %5972, 0x3D1407C0E0000000
  %6030 = fadd contract float %6029, %6028
  %6031 = getelementptr inbounds float, float addrspace(1)* %1843, i64 35
  store float %6030, float addrspace(1)* %6031, align 4, !tbaa !6
  %6032 = fmul contract float %6019, 0x3DE2FAF640000000
  %6033 = fdiv contract float %6032, 0x3E8118EAA0000000
  %6034 = fsub contract float %1880, %1881
  %6035 = fmul contract float %6034, 0x3FF3F99B60000000
  %6036 = fsub contract float %6035, %6033
  %6037 = fsub contract float %1882, %1881
  %6038 = fmul contract float %6037, 0x4016911D00000000
  %6039 = fadd contract float %6038, %6036
  %6040 = fsub contract float %6039, %5963
  %6041 = getelementptr inbounds float, float addrspace(1)* %1843, i64 36
  store float %6040, float addrspace(1)* %6041, align 4, !tbaa !6
  %6042 = fneg contract float %5883
  %6043 = fsub contract float %6042, %5939
  %6044 = fsub contract float %1881, %1882
  %6045 = fmul contract float %6044, 0x3FC6383C20000000
  %6046 = fadd contract float %6045, %6043
  %6047 = getelementptr inbounds float, float addrspace(1)* %1843, i64 37
  store float %6046, float addrspace(1)* %6047, align 4, !tbaa !6
  %6048 = tail call float @llvm.fabs.f32(float %1844)
  %6049 = tail call float @llvm.fabs.f32(float %1845)
  %6050 = fcmp ogt float %6048, %6049
  br i1 %6050, label %6051, label %6093

6051:                                             ; preds = %2255
  %6052 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6048)
  %6053 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6048)
  %6054 = tail call float @llvm.amdgcn.ldexp.f32(float %6053, i32 12)
  %6055 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6049)
  %6056 = add nsw i32 %6055, -1
  %6057 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6049)
  %6058 = tail call float @llvm.amdgcn.ldexp.f32(float %6057, i32 1)
  %6059 = sub i32 %6052, %6055
  %6060 = tail call float @llvm.amdgcn.rcp.f32(float %6058)
  %6061 = icmp sgt i32 %6059, 12
  br i1 %6061, label %6062, label %6075

6062:                                             ; preds = %6051, %6062
  %6063 = phi float [ %6072, %6062 ], [ %6054, %6051 ]
  %6064 = phi i32 [ %6073, %6062 ], [ %6059, %6051 ]
  %6065 = fmul float %6060, %6063
  %6066 = tail call float @llvm.rint.f32(float %6065)
  %6067 = fneg float %6066
  %6068 = tail call float @llvm.fma.f32(float %6067, float %6058, float %6063)
  %6069 = fcmp olt float %6068, 0.000000e+00
  %6070 = select i1 %6069, float %6058, float -0.000000e+00
  %6071 = fadd float %6068, %6070
  %6072 = tail call float @llvm.amdgcn.ldexp.f32(float %6071, i32 12)
  %6073 = add nsw i32 %6064, -12
  %6074 = icmp ugt i32 %6064, 24
  br i1 %6074, label %6062, label %6075

6075:                                             ; preds = %6062, %6051
  %6076 = phi i32 [ %6059, %6051 ], [ %6073, %6062 ]
  %6077 = phi float [ %6054, %6051 ], [ %6072, %6062 ]
  %6078 = add nsw i32 %6076, -11
  %6079 = tail call float @llvm.amdgcn.ldexp.f32(float %6077, i32 %6078)
  %6080 = fmul float %6060, %6079
  %6081 = tail call float @llvm.rint.f32(float %6080)
  %6082 = fneg float %6081
  %6083 = tail call float @llvm.fma.f32(float %6082, float %6058, float %6079)
  %6084 = fcmp olt float %6083, 0.000000e+00
  %6085 = select i1 %6084, float %6058, float -0.000000e+00
  %6086 = fadd float %6083, %6085
  %6087 = tail call float @llvm.amdgcn.ldexp.f32(float %6086, i32 %6056)
  %6088 = bitcast float %1844 to i32
  %6089 = and i32 %6088, -2147483648
  %6090 = bitcast float %6087 to i32
  %6091 = xor i32 %6089, %6090
  %6092 = bitcast i32 %6091 to float
  br label %6097

6093:                                             ; preds = %2255
  %6094 = fcmp oeq float %6048, %6049
  %6095 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %1844)
  %6096 = select i1 %6094, float %6095, float %1844
  br label %6097

6097:                                             ; preds = %6093, %6075
  %6098 = phi float [ %6092, %6075 ], [ %6096, %6093 ]
  %6099 = fcmp olt double %3574, -1.075000e+03
  %6100 = fcmp ogt double %3574, 1.024000e+03
  %6101 = tail call double @llvm.fma.f64(double %3579, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6102 = tail call double @llvm.fma.f64(double %3579, double %6101, double 0x3EC71DEE623FDE64)
  %6103 = tail call double @llvm.fma.f64(double %3579, double %6102, double 0x3EFA01997C89E6B0)
  %6104 = tail call double @llvm.fma.f64(double %3579, double %6103, double 0x3F2A01A014761F6E)
  %6105 = tail call double @llvm.fma.f64(double %3579, double %6104, double 0x3F56C16C1852B7B0)
  %6106 = tail call double @llvm.fma.f64(double %3579, double %6105, double 0x3F81111111122322)
  %6107 = tail call double @llvm.fma.f64(double %3579, double %6106, double 0x3FA55555555502A1)
  %6108 = tail call double @llvm.fma.f64(double %3579, double %6107, double 0x3FC5555555555511)
  %6109 = tail call double @llvm.fma.f64(double %3579, double %6108, double 0x3FE000000000000B)
  %6110 = tail call double @llvm.fma.f64(double %3579, double %6109, double 1.000000e+00)
  %6111 = tail call double @llvm.fma.f64(double %3579, double %6110, double 1.000000e+00)
  %6112 = fptosi double %3576 to i32
  %6113 = tail call double @llvm.amdgcn.ldexp.f64(double %6111, i32 %6112)
  %6114 = fcmp olt double %3567, -1.075000e+03
  %6115 = fcmp ogt double %3567, 1.024000e+03
  %6116 = tail call double @llvm.fma.f64(double %3572, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6117 = tail call double @llvm.fma.f64(double %3572, double %6116, double 0x3EC71DEE623FDE64)
  %6118 = tail call double @llvm.fma.f64(double %3572, double %6117, double 0x3EFA01997C89E6B0)
  %6119 = tail call double @llvm.fma.f64(double %3572, double %6118, double 0x3F2A01A014761F6E)
  %6120 = tail call double @llvm.fma.f64(double %3572, double %6119, double 0x3F56C16C1852B7B0)
  %6121 = tail call double @llvm.fma.f64(double %3572, double %6120, double 0x3F81111111122322)
  %6122 = tail call double @llvm.fma.f64(double %3572, double %6121, double 0x3FA55555555502A1)
  %6123 = tail call double @llvm.fma.f64(double %3572, double %6122, double 0x3FC5555555555511)
  %6124 = tail call double @llvm.fma.f64(double %3572, double %6123, double 0x3FE000000000000B)
  %6125 = tail call double @llvm.fma.f64(double %3572, double %6124, double 1.000000e+00)
  %6126 = tail call double @llvm.fma.f64(double %3572, double %6125, double 1.000000e+00)
  %6127 = fptosi double %3569 to i32
  %6128 = tail call double @llvm.amdgcn.ldexp.f64(double %6126, i32 %6127)
  %6129 = select i1 %6115, double 0x7FF0000000000000, double %6128
  %6130 = select i1 %6114, double 0.000000e+00, double %6129
  %6131 = fcmp olt double %3560, -1.075000e+03
  %6132 = fcmp ogt double %3560, 1.024000e+03
  %6133 = tail call double @llvm.fma.f64(double %3565, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6134 = tail call double @llvm.fma.f64(double %3565, double %6133, double 0x3EC71DEE623FDE64)
  %6135 = tail call double @llvm.fma.f64(double %3565, double %6134, double 0x3EFA01997C89E6B0)
  %6136 = tail call double @llvm.fma.f64(double %3565, double %6135, double 0x3F2A01A014761F6E)
  %6137 = tail call double @llvm.fma.f64(double %3565, double %6136, double 0x3F56C16C1852B7B0)
  %6138 = tail call double @llvm.fma.f64(double %3565, double %6137, double 0x3F81111111122322)
  %6139 = tail call double @llvm.fma.f64(double %3565, double %6138, double 0x3FA55555555502A1)
  %6140 = tail call double @llvm.fma.f64(double %3565, double %6139, double 0x3FC5555555555511)
  %6141 = tail call double @llvm.fma.f64(double %3565, double %6140, double 0x3FE000000000000B)
  %6142 = tail call double @llvm.fma.f64(double %3565, double %6141, double 1.000000e+00)
  %6143 = tail call double @llvm.fma.f64(double %3565, double %6142, double 1.000000e+00)
  %6144 = fptosi double %3562 to i32
  %6145 = tail call double @llvm.amdgcn.ldexp.f64(double %6143, i32 %6144)
  %6146 = fcmp uno float %1858, 0.000000e+00
  %6147 = fcmp oeq float %3215, 0x7FF0000000000000
  %6148 = or i1 %3350, %6147
  %6149 = select i1 %3350, float 0.000000e+00, float 0x7FF0000000000000
  %6150 = tail call float @llvm.fabs.f32(float %3349) #3
  %6151 = fcmp oeq float %6150, 0x7FF0000000000000
  %6152 = tail call float @llvm.fabs.f32(float %3332) #3
  %6153 = fcmp oeq float %6152, 0x7FF0000000000000
  %6154 = fsub float %3329, %3323
  %6155 = fsub float %3328, %6154
  %6156 = select i1 %6153, float 0.000000e+00, float %6155
  %6157 = fadd float %3334, %6156
  %6158 = tail call float @llvm.fma.f32(float %3349, float %6157, float %3349)
  %6159 = select i1 %6151, float %3349, float %6158
  %6160 = tail call float @llvm.fabs.f32(float %6159)
  %6161 = select i1 %6148, float %6149, float %6160
  %6162 = select i1 %6146, float 0x7FF8000000000000, float %6161
  %6163 = fcmp uno float %1857, 0.000000e+00
  %6164 = fcmp oeq float %3078, 0x7FF0000000000000
  %6165 = or i1 %3213, %6164
  %6166 = select i1 %3213, float 0.000000e+00, float 0x7FF0000000000000
  %6167 = tail call float @llvm.fabs.f32(float %3212) #3
  %6168 = fcmp oeq float %6167, 0x7FF0000000000000
  %6169 = tail call float @llvm.fabs.f32(float %3195) #3
  %6170 = fcmp oeq float %6169, 0x7FF0000000000000
  %6171 = fsub float %3192, %3186
  %6172 = fsub float %3191, %6171
  %6173 = select i1 %6170, float 0.000000e+00, float %6172
  %6174 = fadd float %3197, %6173
  %6175 = tail call float @llvm.fma.f32(float %3212, float %6174, float %3212)
  %6176 = select i1 %6168, float %3212, float %6175
  %6177 = tail call float @llvm.fabs.f32(float %6176)
  %6178 = select i1 %6165, float %6166, float %6177
  %6179 = select i1 %6163, float 0x7FF8000000000000, float %6178
  %6180 = fcmp olt double %2968, -1.075000e+03
  %6181 = fcmp ogt double %2968, 1.024000e+03
  %6182 = tail call double @llvm.fma.f64(double %2973, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6183 = tail call double @llvm.fma.f64(double %2973, double %6182, double 0x3EC71DEE623FDE64)
  %6184 = tail call double @llvm.fma.f64(double %2973, double %6183, double 0x3EFA01997C89E6B0)
  %6185 = tail call double @llvm.fma.f64(double %2973, double %6184, double 0x3F2A01A014761F6E)
  %6186 = tail call double @llvm.fma.f64(double %2973, double %6185, double 0x3F56C16C1852B7B0)
  %6187 = tail call double @llvm.fma.f64(double %2973, double %6186, double 0x3F81111111122322)
  %6188 = tail call double @llvm.fma.f64(double %2973, double %6187, double 0x3FA55555555502A1)
  %6189 = tail call double @llvm.fma.f64(double %2973, double %6188, double 0x3FC5555555555511)
  %6190 = tail call double @llvm.fma.f64(double %2973, double %6189, double 0x3FE000000000000B)
  %6191 = tail call double @llvm.fma.f64(double %2973, double %6190, double 1.000000e+00)
  %6192 = tail call double @llvm.fma.f64(double %2973, double %6191, double 1.000000e+00)
  %6193 = fptosi double %2970 to i32
  %6194 = tail call double @llvm.amdgcn.ldexp.f64(double %6192, i32 %6193)
  %6195 = fcmp olt double %2960, -1.075000e+03
  %6196 = fcmp ogt double %2960, 1.024000e+03
  %6197 = tail call double @llvm.fma.f64(double %2965, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6198 = tail call double @llvm.fma.f64(double %2965, double %6197, double 0x3EC71DEE623FDE64)
  %6199 = tail call double @llvm.fma.f64(double %2965, double %6198, double 0x3EFA01997C89E6B0)
  %6200 = tail call double @llvm.fma.f64(double %2965, double %6199, double 0x3F2A01A014761F6E)
  %6201 = tail call double @llvm.fma.f64(double %2965, double %6200, double 0x3F56C16C1852B7B0)
  %6202 = tail call double @llvm.fma.f64(double %2965, double %6201, double 0x3F81111111122322)
  %6203 = tail call double @llvm.fma.f64(double %2965, double %6202, double 0x3FA55555555502A1)
  %6204 = tail call double @llvm.fma.f64(double %2965, double %6203, double 0x3FC5555555555511)
  %6205 = tail call double @llvm.fma.f64(double %2965, double %6204, double 0x3FE000000000000B)
  %6206 = tail call double @llvm.fma.f64(double %2965, double %6205, double 1.000000e+00)
  %6207 = tail call double @llvm.fma.f64(double %2965, double %6206, double 1.000000e+00)
  %6208 = fptosi double %2962 to i32
  %6209 = tail call double @llvm.amdgcn.ldexp.f64(double %6207, i32 %6208)
  %6210 = fcmp olt double %2923, -1.075000e+03
  %6211 = fcmp ogt double %2923, 1.024000e+03
  %6212 = tail call double @llvm.fma.f64(double %2928, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %6213 = tail call double @llvm.fma.f64(double %2928, double %6212, double 0x3EC71DEE623FDE64)
  %6214 = tail call double @llvm.fma.f64(double %2928, double %6213, double 0x3EFA01997C89E6B0)
  %6215 = tail call double @llvm.fma.f64(double %2928, double %6214, double 0x3F2A01A014761F6E)
  %6216 = tail call double @llvm.fma.f64(double %2928, double %6215, double 0x3F56C16C1852B7B0)
  %6217 = tail call double @llvm.fma.f64(double %2928, double %6216, double 0x3F81111111122322)
  %6218 = tail call double @llvm.fma.f64(double %2928, double %6217, double 0x3FA55555555502A1)
  %6219 = tail call double @llvm.fma.f64(double %2928, double %6218, double 0x3FC5555555555511)
  %6220 = tail call double @llvm.fma.f64(double %2928, double %6219, double 0x3FE000000000000B)
  %6221 = tail call double @llvm.fma.f64(double %2928, double %6220, double 1.000000e+00)
  %6222 = tail call double @llvm.fma.f64(double %2928, double %6221, double 1.000000e+00)
  %6223 = fptosi double %2925 to i32
  %6224 = tail call double @llvm.amdgcn.ldexp.f64(double %6222, i32 %6223)
  %6225 = fcmp oeq float %1845, 0.000000e+00
  %6226 = select i1 %6225, float 0x7FF8000000000000, float %6098
  %6227 = fcmp ord float %1845, 0.000000e+00
  %6228 = tail call i1 @llvm.amdgcn.class.f32(float %1844, i32 504)
  %6229 = select i1 %6227, i1 %6228, i1 false
  %6230 = select i1 %6229, float %6226, float 0x7FF8000000000000
  %6231 = fcmp contract ugt float %6230, 5.000000e+00
  %6232 = select i1 %6231, float 0.000000e+00, float 9.500000e+00
  %6233 = fmul contract float %1855, 0x3F947AE140000000
  %6234 = fmul contract float %6233, %1856
  %6235 = fmul contract float %6234, %2929
  %6236 = fpext float %1884 to double
  %6237 = fmul contract double %6236, 5.000000e-01
  %6238 = fpext float %1854 to double
  %6239 = fadd contract double %6237, %6238
  %6240 = fmul contract float %1853, 0x3FAEB851E0000000
  %6241 = fpext float %6240 to double
  %6242 = fmul contract double %6239, %6241
  %6243 = fmul contract double %6242, %3499
  %6244 = fptrunc double %6243 to float
  %6245 = fadd contract float %6235, %6244
  %6246 = fmul contract float %1857, %91
  %6247 = fadd contract double %6224, 1.000000e+00
  %6248 = fdiv contract double 1.000000e+00, %6247
  %6249 = select i1 %6211, double 0.000000e+00, double %6248
  %6250 = select i1 %6210, double 1.000000e+00, double %6249
  %6251 = fptrunc double %6250 to float
  %6252 = fmul contract float %6246, %6251
  %6253 = fmul contract float %2929, %6252
  %6254 = fadd contract float %6245, %6253
  %6255 = fadd contract double %6209, 1.000000e+00
  %6256 = fdiv contract double 1.900000e-01, %6255
  %6257 = fadd contract double %6256, 5.700000e-02
  %6258 = fmul contract double %6257, 7.000000e-02
  %6259 = select i1 %6196, double 0x3F7057D1782D3848, double %6258
  %6260 = select i1 %6195, double 1.729000e-02, double %6259
  %6261 = fptrunc double %6260 to float
  %6262 = fmul contract float %6261, 0x3FBC28F5C0000000
  %6263 = fmul contract float %6262, %6179
  %6264 = fmul contract float %3214, %6263
  %6265 = fadd contract double %6194, 1.000000e+00
  %6266 = fdiv contract double 1.900000e-01, %6265
  %6267 = fadd contract double %6266, 5.700000e-02
  %6268 = fmul contract double %6267, 7.000000e-02
  %6269 = select i1 %6181, double 0x3F7057D1782D3848, double %6268
  %6270 = select i1 %6180, double 1.729000e-02, double %6269
  %6271 = fptrunc double %6270 to float
  %6272 = fmul contract float %6271, 0x3FEC7AE140000000
  %6273 = fmul contract float %6272, %6162
  %6274 = fmul contract float %3214, %6273
  %6275 = fadd contract float %6264, %6274
  %6276 = fadd contract float %6254, %6275
  %6277 = fmul contract double %6145, 4.912400e-01
  %6278 = select i1 %6132, double 0x7FF0000000000000, double %6277
  %6279 = select i1 %6131, double 0.000000e+00, double %6278
  %6280 = fadd contract double %6279, %6130
  %6281 = fadd contract double %6113, 1.000000e+00
  %6282 = select i1 %6100, double 0x7FF0000000000000, double %6281
  %6283 = select i1 %6099, double 1.000000e+00, double %6282
  %6284 = fdiv contract double %6280, %6283
  %6285 = fptrunc double %6284 to float
  %6286 = fadd contract float %3556, %6285
  %6287 = fdiv contract float %3556, %6286
  %6288 = fpext float %6287 to double
  %6289 = fmul contract double %92, %6288
  %6290 = fmul contract double %6289, %3499
  %6291 = fptrunc double %6290 to float
  %6292 = fadd contract float %6276, %6291
  %6293 = fadd contract float %2670, %2829
  %6294 = fmul contract float %6293, 2.000000e+00
  %6295 = fsub contract float %6292, %6294
  %6296 = fpext float %1879 to double
  %6297 = fmul contract double %6296, 7.500000e-01
  %6298 = fmul contract double %6297, %3933
  %6299 = fadd contract double %6298, 0xC010333338000000
  %6300 = fmul contract float %3880, 0x3E921E9080000000
  %6301 = fpext float %6300 to double
  %6302 = fmul contract double %6299, %6301
  %6303 = fdiv contract double %6302, %3938
  %6304 = fptrunc double %6303 to float
  %6305 = fmul contract float %1849, %6304
  %6306 = fmul contract float %1850, %6305
  %6307 = fmul contract float %3861, 0x3FECCCCCC0000000
  %6308 = fmul contract float %3871, 0x3FB9999A00000000
  %6309 = fadd contract float %6307, %6308
  %6310 = fmul contract float %6309, %6306
  %6311 = fpext float %6310 to double
  %6312 = fmul contract double %6311, 4.500000e-01
  %6313 = fptrunc double %6312 to float
  %6314 = fadd contract float %6295, %6313
  %6315 = fmul contract float %3377, 0x3F1CD5F9C0000000
  %6316 = fmul contract float %2929, %6315
  %6317 = fmul contract float %3377, 0x3F4D29DC80000000
  %6318 = fmul contract float %2929, %6317
  %6319 = fadd contract float %6316, %6318
  %6320 = fadd contract float %6319, %6314
  %6321 = fmul contract float %3580, 0x3F826E9780000000
  %6322 = fdiv contract float 0x3FB99999A0000000, %1880
  %6323 = fadd contract float %6322, 1.000000e+00
  %6324 = fdiv contract float 0x3F88B24200000000, %6323
  %6325 = fmul contract float %6324, %3580
  %6326 = fdiv contract float 0x3FB99999A0000000, %1881
  %6327 = fadd contract float %6326, 1.000000e+00
  %6328 = fdiv contract float 0x3FB8FA1A00000000, %6327
  %6329 = fmul contract float %6328, %3580
  %6330 = fadd contract float %6325, %6329
  %6331 = fadd contract float %5983, %5989
  %6332 = fadd contract float %6321, %6330
  %6333 = fadd contract float %6015, %6019
  %6334 = fadd contract float %6332, %6331
  %6335 = fadd contract float %6333, %6334
  %6336 = fadd contract float %6320, %6335
  %6337 = fsub contract float %6336, %6232
  %6338 = fneg contract float %6337
  %6339 = getelementptr inbounds float, float addrspace(1)* %1843, i64 38
  store float %6338, float addrspace(1)* %6339, align 4, !tbaa !6
  %6340 = getelementptr inbounds float, float addrspace(1)* %1843, i64 40
  store float 0.000000e+00, float addrspace(1)* %6340, align 4, !tbaa !6
  %6341 = getelementptr inbounds float, float addrspace(1)* %1843, i64 41
  store float 0.000000e+00, float addrspace(1)* %6341, align 4, !tbaa !6
  %6342 = load float, float addrspace(1)* %72, align 4, !tbaa !6
  %6343 = fmul contract float %6342, 1.000000e+03
  %6344 = load float, float addrspace(1)* %93, align 4, !tbaa !6
  %6345 = load float, float addrspace(1)* %94, align 4, !tbaa !6
  %6346 = load float, float addrspace(1)* %95, align 4, !tbaa !6
  %6347 = load float, float addrspace(1)* %96, align 4, !tbaa !6
  %6348 = load float, float addrspace(1)* %97, align 4, !tbaa !6
  %6349 = load float, float addrspace(1)* %98, align 4, !tbaa !6
  %6350 = load float, float addrspace(1)* %99, align 4, !tbaa !6
  %6351 = load float, float addrspace(1)* %100, align 4, !tbaa !6
  %6352 = load float, float addrspace(1)* %101, align 4, !tbaa !6
  %6353 = load float, float addrspace(1)* %102, align 4, !tbaa !6
  %6354 = load float, float addrspace(1)* %103, align 4, !tbaa !6
  %6355 = load float, float addrspace(1)* %104, align 4, !tbaa !6
  %6356 = load float, float addrspace(1)* %105, align 4, !tbaa !6
  %6357 = load float, float addrspace(1)* %106, align 4, !tbaa !6
  %6358 = load float, float addrspace(1)* %107, align 4, !tbaa !6
  %6359 = load float, float addrspace(1)* %108, align 4, !tbaa !6
  %6360 = load float, float addrspace(1)* %109, align 4, !tbaa !6
  %6361 = load float, float addrspace(1)* %110, align 4, !tbaa !6
  %6362 = load float, float addrspace(1)* %111, align 4, !tbaa !6
  %6363 = load float, float addrspace(1)* %112, align 4, !tbaa !6
  %6364 = load float, float addrspace(1)* %113, align 4, !tbaa !6
  %6365 = fcmp contract ugt float %6349, 1.000000e+00
  %6366 = fpext float %6348 to double
  %6367 = fdiv contract double %6366, 0x3FEE147AE147AE14
  %6368 = fadd contract double %6367, 1.000000e+00
  br i1 %6365, label %6389, label %6369

6369:                                             ; preds = %6097
  %6370 = fpext float %6349 to double
  %6371 = fdiv contract double %6370, 1.200000e-02
  %6372 = fsub contract double %6368, %6371
  %6373 = fmul contract double %6372, 2.500000e-03
  %6374 = fdiv contract double %6366, 8.100000e+00
  %6375 = fadd contract double %6374, 1.000000e+00
  %6376 = fdiv contract double %6370, 2.200000e-02
  %6377 = fadd contract double %6375, %6376
  %6378 = fmul contract double %6377, %6373
  %6379 = fdiv contract double %6366, 6.400000e-01
  %6380 = fadd contract double %6379, 1.000000e+00
  %6381 = fdiv contract double %6370, 1.400000e-03
  %6382 = fadd contract double %6380, %6381
  %6383 = fmul contract double %6382, 1.280000e-01
  %6384 = fdiv contract double %6366, 1.300000e+01
  %6385 = fadd contract double %6384, 1.000000e+00
  %6386 = fdiv contract double %6370, 1.530000e-01
  %6387 = fsub contract double %6385, %6386
  %6388 = fmul contract double %6387, %6383
  br label %6414

6389:                                             ; preds = %6097
  %6390 = fadd contract double %6368, 0xC054D55555555555
  %6391 = fadd contract float %6349, -1.000000e+00
  %6392 = fpext float %6391 to double
  %6393 = fdiv contract double %6392, 6.000000e-02
  %6394 = fadd contract double %6390, %6393
  %6395 = fmul contract double %6394, 2.500000e-03
  %6396 = fdiv contract double %6366, 8.100000e+00
  %6397 = fadd contract double %6396, 1.000000e+00
  %6398 = fadd contract double %6397, 0x4046BA2E8BA2E8BB
  %6399 = fdiv contract double %6392, 6.800000e-02
  %6400 = fadd contract double %6398, %6399
  %6401 = fmul contract double %6400, %6395
  %6402 = fdiv contract double %6366, 6.400000e-01
  %6403 = fadd contract double %6402, 1.000000e+00
  %6404 = fadd contract double %6403, 0x4086524924924925
  %6405 = fdiv contract double %6392, 5.000000e-03
  %6406 = fadd contract double %6404, %6405
  %6407 = fmul contract double %6406, 1.280000e-01
  %6408 = fdiv contract double %6366, 1.300000e+01
  %6409 = fadd contract double %6408, 1.000000e+00
  %6410 = fadd contract double %6409, 0xC01A24CF7A24CF7A
  %6411 = fdiv contract double %6392, 1.500000e-01
  %6412 = fadd contract double %6410, %6411
  %6413 = fmul contract double %6412, %6407
  br label %6414

6414:                                             ; preds = %6389, %6369
  %6415 = phi double [ %6388, %6369 ], [ %6413, %6389 ]
  %6416 = phi double [ %6378, %6369 ], [ %6401, %6389 ]
  %6417 = fptrunc double %6416 to float
  %6418 = fptrunc double %6415 to float
  %6419 = fdiv contract float 1.000000e+01, %6417
  %6420 = fdiv contract float 5.000000e+02, %6418
  %6421 = tail call float @llvm.fabs.f32(float %6343)
  %6422 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6421)
  %6423 = fcmp olt float %6422, 0x3FE5555560000000
  %6424 = zext i1 %6423 to i32
  %6425 = tail call float @llvm.amdgcn.ldexp.f32(float %6422, i32 %6424)
  %6426 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6421)
  %6427 = sub nsw i32 %6426, %6424
  %6428 = fadd float %6425, -1.000000e+00
  %6429 = fadd float %6425, 1.000000e+00
  %6430 = fadd float %6429, -1.000000e+00
  %6431 = fsub float %6425, %6430
  %6432 = tail call float @llvm.amdgcn.rcp.f32(float %6429)
  %6433 = fmul float %6428, %6432
  %6434 = fmul float %6429, %6433
  %6435 = fneg float %6434
  %6436 = tail call float @llvm.fma.f32(float %6433, float %6429, float %6435)
  %6437 = tail call float @llvm.fma.f32(float %6433, float %6431, float %6436)
  %6438 = fadd float %6434, %6437
  %6439 = fsub float %6438, %6434
  %6440 = fsub float %6437, %6439
  %6441 = fsub float %6428, %6438
  %6442 = fsub float %6428, %6441
  %6443 = fsub float %6442, %6438
  %6444 = fsub float %6443, %6440
  %6445 = fadd float %6441, %6444
  %6446 = fmul float %6432, %6445
  %6447 = fadd float %6433, %6446
  %6448 = fsub float %6447, %6433
  %6449 = fsub float %6446, %6448
  %6450 = fmul float %6447, %6447
  %6451 = fneg float %6450
  %6452 = tail call float @llvm.fma.f32(float %6447, float %6447, float %6451)
  %6453 = fmul float %6449, 2.000000e+00
  %6454 = tail call float @llvm.fma.f32(float %6447, float %6453, float %6452)
  %6455 = fadd float %6450, %6454
  %6456 = fsub float %6455, %6450
  %6457 = fsub float %6454, %6456
  %6458 = tail call float @llvm.fmuladd.f32(float %6455, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6459 = tail call float @llvm.fmuladd.f32(float %6455, float %6458, float 0x3FD999BDE0000000)
  %6460 = sitofp i32 %6427 to float
  %6461 = fmul float %6460, 0x3FE62E4300000000
  %6462 = fneg float %6461
  %6463 = tail call float @llvm.fma.f32(float %6460, float 0x3FE62E4300000000, float %6462)
  %6464 = tail call float @llvm.fma.f32(float %6460, float 0xBE205C6100000000, float %6463)
  %6465 = fadd float %6461, %6464
  %6466 = fsub float %6465, %6461
  %6467 = fsub float %6464, %6466
  %6468 = tail call float @llvm.amdgcn.ldexp.f32(float %6447, i32 1)
  %6469 = fmul float %6447, %6455
  %6470 = fneg float %6469
  %6471 = tail call float @llvm.fma.f32(float %6455, float %6447, float %6470)
  %6472 = tail call float @llvm.fma.f32(float %6455, float %6449, float %6471)
  %6473 = tail call float @llvm.fma.f32(float %6457, float %6447, float %6472)
  %6474 = fadd float %6469, %6473
  %6475 = fsub float %6474, %6469
  %6476 = fsub float %6473, %6475
  %6477 = fmul float %6455, %6459
  %6478 = fneg float %6477
  %6479 = tail call float @llvm.fma.f32(float %6455, float %6459, float %6478)
  %6480 = tail call float @llvm.fma.f32(float %6457, float %6459, float %6479)
  %6481 = fadd float %6477, %6480
  %6482 = fsub float %6481, %6477
  %6483 = fsub float %6480, %6482
  %6484 = fadd float %6481, 0x3FE5555540000000
  %6485 = fadd float %6484, 0xBFE5555540000000
  %6486 = fsub float %6481, %6485
  %6487 = fadd float %6483, 0x3E2E720200000000
  %6488 = fadd float %6487, %6486
  %6489 = fadd float %6484, %6488
  %6490 = fsub float %6489, %6484
  %6491 = fsub float %6488, %6490
  %6492 = fmul float %6474, %6489
  %6493 = fneg float %6492
  %6494 = tail call float @llvm.fma.f32(float %6474, float %6489, float %6493)
  %6495 = tail call float @llvm.fma.f32(float %6474, float %6491, float %6494)
  %6496 = tail call float @llvm.fma.f32(float %6476, float %6489, float %6495)
  %6497 = tail call float @llvm.amdgcn.ldexp.f32(float %6449, i32 1)
  %6498 = fadd float %6492, %6496
  %6499 = fsub float %6498, %6492
  %6500 = fsub float %6496, %6499
  %6501 = fadd float %6468, %6498
  %6502 = fsub float %6501, %6468
  %6503 = fsub float %6498, %6502
  %6504 = fadd float %6497, %6500
  %6505 = fadd float %6504, %6503
  %6506 = fadd float %6501, %6505
  %6507 = fsub float %6506, %6501
  %6508 = fsub float %6505, %6507
  %6509 = fadd float %6465, %6506
  %6510 = fsub float %6509, %6465
  %6511 = fsub float %6509, %6510
  %6512 = fsub float %6465, %6511
  %6513 = fsub float %6506, %6510
  %6514 = fadd float %6513, %6512
  %6515 = fadd float %6467, %6508
  %6516 = fsub float %6515, %6467
  %6517 = fsub float %6515, %6516
  %6518 = fsub float %6467, %6517
  %6519 = fsub float %6508, %6516
  %6520 = fadd float %6519, %6518
  %6521 = fadd float %6515, %6514
  %6522 = fadd float %6509, %6521
  %6523 = fsub float %6522, %6509
  %6524 = fsub float %6521, %6523
  %6525 = fadd float %6520, %6524
  %6526 = fadd float %6522, %6525
  %6527 = fsub float %6526, %6522
  %6528 = fsub float %6525, %6527
  %6529 = fmul float %6526, 2.000000e+00
  %6530 = fneg float %6529
  %6531 = tail call float @llvm.fma.f32(float %6526, float 2.000000e+00, float %6530)
  %6532 = fmul float %6526, 0.000000e+00
  %6533 = tail call float @llvm.fma.f32(float %6528, float 2.000000e+00, float %6532)
  %6534 = fadd float %6531, %6533
  %6535 = fadd float %6529, %6534
  %6536 = fsub float %6535, %6529
  %6537 = fsub float %6534, %6536
  %6538 = tail call float @llvm.fabs.f32(float %6529) #3
  %6539 = fcmp oeq float %6538, 0x7FF0000000000000
  %6540 = select i1 %6539, float %6529, float %6535
  %6541 = tail call float @llvm.fabs.f32(float %6540) #3
  %6542 = fcmp oeq float %6541, 0x7FF0000000000000
  %6543 = select i1 %6542, float 0.000000e+00, float %6537
  %6544 = fcmp oeq float %6540, 0x40562E4300000000
  %6545 = select i1 %6544, float 0x3EE0000000000000, float 0.000000e+00
  %6546 = fsub float %6540, %6545
  %6547 = fadd float %6545, %6543
  %6548 = fmul float %6546, 0x3FF7154760000000
  %6549 = tail call float @llvm.rint.f32(float %6548)
  %6550 = fcmp ogt float %6546, 0x40562E4300000000
  %6551 = fcmp olt float %6546, 0xC059D1DA00000000
  %6552 = fneg float %6548
  %6553 = tail call float @llvm.fma.f32(float %6546, float 0x3FF7154760000000, float %6552)
  %6554 = tail call float @llvm.fma.f32(float %6546, float 0x3E54AE0BE0000000, float %6553)
  %6555 = fsub float %6548, %6549
  %6556 = fadd float %6554, %6555
  %6557 = tail call float @llvm.exp2.f32(float %6556)
  %6558 = fptosi float %6549 to i32
  %6559 = tail call float @llvm.amdgcn.ldexp.f32(float %6557, i32 %6558)
  %6560 = select i1 %6551, float 0.000000e+00, float %6559
  %6561 = select i1 %6550, float 0x7FF0000000000000, float %6560
  %6562 = tail call float @llvm.fma.f32(float %6561, float %6547, float %6561)
  %6563 = tail call float @llvm.fabs.f32(float %6561) #3
  %6564 = fcmp oeq float %6563, 0x7FF0000000000000
  %6565 = select i1 %6564, float %6561, float %6562
  %6566 = tail call float @llvm.fabs.f32(float %6565)
  %6567 = fcmp oeq float %6421, 0x7FF0000000000000
  %6568 = fcmp oeq float %6343, 0.000000e+00
  %6569 = or i1 %6568, %6567
  %6570 = select i1 %6568, float 0.000000e+00, float 0x7FF0000000000000
  %6571 = select i1 %6569, float %6570, float %6566
  %6572 = fcmp uno float %6343, 0.000000e+00
  %6573 = select i1 %6572, float 0x7FF8000000000000, float %6571
  %6574 = fmul contract float %6573, %6419
  %6575 = fmul contract float %6350, %6574
  %6576 = fmul contract float %6351, 1.000000e+01
  %6577 = fsub contract float %6575, %6576
  %6578 = fmul contract float %6573, %6420
  %6579 = fmul contract float %6351, %6578
  %6580 = fmul contract float %6352, 5.000000e+02
  %6581 = fsub contract float %6579, %6580
  %6582 = fsub contract float %6344, %6353
  %6583 = fsub contract float %6582, %6354
  %6584 = fsub contract float %6583, %6355
  %6585 = fmul contract float %6353, %6574
  %6586 = fmul contract float %6354, 0x3FB99999A0000000
  %6587 = fsub contract float %6585, %6586
  %6588 = fmul contract float %6354, %6578
  %6589 = fmul contract float %6355, 5.000000e+02
  %6590 = fsub contract float %6588, %6589
  %6591 = fmul contract float %6350, 0x3F7CAC0820000000
  %6592 = fmul contract float %6591, %6584
  %6593 = fmul contract float %6353, 0x3F56F00680000000
  %6594 = fsub contract float %6592, %6593
  %6595 = fmul contract float %6351, 0x3F7CAC0820000000
  %6596 = fmul contract float %6595, %6584
  %6597 = fmul contract float %6354, 0x3EED5C3140000000
  %6598 = fsub contract float %6596, %6597
  %6599 = fmul contract float %6352, 0x3F7CAC0820000000
  %6600 = fmul contract float %6599, %6584
  %6601 = fmul contract float %6355, 0x3EED5C3140000000
  %6602 = fsub contract float %6600, %6601
  %6603 = fsub contract float %6346, %6361
  %6604 = fsub contract float %6603, %6362
  %6605 = fsub contract float %6604, %6363
  %6606 = fsub contract float %6605, %6364
  %6607 = fmul contract float %6573, 2.000000e+00
  %6608 = fmul contract float %6606, %6607
  %6609 = fsub contract float %6608, %6361
  %6610 = fmul contract float %6362, %6574
  %6611 = fmul contract float %6363, 0x3FAF07C200000000
  %6612 = fsub contract float %6610, %6611
  %6613 = fmul contract float %6363, %6578
  %6614 = fmul contract float %6364, 0x3F7054ECC0000000
  %6615 = fsub contract float %6613, %6614
  %6616 = fmul contract float %6350, 4.600000e+01
  %6617 = fmul contract float %6616, %6361
  %6618 = fmul contract float %6362, 0x4080CFBA60000000
  %6619 = fsub contract float %6617, %6618
  %6620 = fmul contract float %6351, 4.600000e+01
  %6621 = fmul contract float %6620, %6361
  %6622 = fmul contract float %6363, 0x400A154CA0000000
  %6623 = fsub contract float %6621, %6622
  %6624 = fmul contract float %6352, 4.600000e+01
  %6625 = fmul contract float %6624, %6361
  %6626 = fmul contract float %6364, 0x3F554C9860000000
  %6627 = fsub contract float %6625, %6626
  %6628 = fsub contract float 1.000000e+00, %6356
  %6629 = fsub contract float %6628, %6357
  %6630 = fsub contract float %6629, %6358
  %6631 = fsub contract float %6630, %6359
  %6632 = fsub contract float %6631, %6360
  %6633 = fmul contract float %6351, 0x40506AFC40000000
  %6634 = fmul contract float %6633, %6632
  %6635 = fmul contract float %6356, 0x407485BB40000000
  %6636 = fsub contract float %6634, %6635
  %6637 = fmul contract float %6356, %6578
  %6638 = fmul contract float %6357, 0x400ACCCCC0000000
  %6639 = fsub contract float %6637, %6638
  %6640 = fmul contract float %6352, 0x40506AFC40000000
  %6641 = fmul contract float %6640, %6632
  %6642 = fmul contract float %6357, 0x40019999A0000000
  %6643 = fsub contract float %6641, %6642
  %6644 = fadd contract float %6357, %6358
  %6645 = fadd contract float %6644, %6359
  %6646 = fadd contract float %6645, %6360
  %6647 = fpext float %6646 to double
  %6648 = fmul contract double %6647, 5.500000e-02
  %6649 = tail call float @llvm.fabs.f32(float %6646)
  %6650 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6649)
  %6651 = fcmp olt float %6650, 0x3FE5555560000000
  %6652 = zext i1 %6651 to i32
  %6653 = tail call float @llvm.amdgcn.ldexp.f32(float %6650, i32 %6652)
  %6654 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6649)
  %6655 = sub nsw i32 %6654, %6652
  %6656 = fadd float %6653, -1.000000e+00
  %6657 = fadd float %6653, 1.000000e+00
  %6658 = fadd float %6657, -1.000000e+00
  %6659 = fsub float %6653, %6658
  %6660 = tail call float @llvm.amdgcn.rcp.f32(float %6657)
  %6661 = fmul float %6656, %6660
  %6662 = fmul float %6657, %6661
  %6663 = fneg float %6662
  %6664 = tail call float @llvm.fma.f32(float %6661, float %6657, float %6663)
  %6665 = tail call float @llvm.fma.f32(float %6661, float %6659, float %6664)
  %6666 = fadd float %6662, %6665
  %6667 = fsub float %6666, %6662
  %6668 = fsub float %6665, %6667
  %6669 = fsub float %6656, %6666
  %6670 = fsub float %6656, %6669
  %6671 = fsub float %6670, %6666
  %6672 = fsub float %6671, %6668
  %6673 = fadd float %6669, %6672
  %6674 = fmul float %6660, %6673
  %6675 = fadd float %6661, %6674
  %6676 = fsub float %6675, %6661
  %6677 = fsub float %6674, %6676
  %6678 = fmul float %6675, %6675
  %6679 = fneg float %6678
  %6680 = tail call float @llvm.fma.f32(float %6675, float %6675, float %6679)
  %6681 = fmul float %6677, 2.000000e+00
  %6682 = tail call float @llvm.fma.f32(float %6675, float %6681, float %6680)
  %6683 = fadd float %6678, %6682
  %6684 = fsub float %6683, %6678
  %6685 = fsub float %6682, %6684
  %6686 = tail call float @llvm.fmuladd.f32(float %6683, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6687 = tail call float @llvm.fmuladd.f32(float %6683, float %6686, float 0x3FD999BDE0000000)
  %6688 = sitofp i32 %6655 to float
  %6689 = fmul float %6688, 0x3FE62E4300000000
  %6690 = fneg float %6689
  %6691 = tail call float @llvm.fma.f32(float %6688, float 0x3FE62E4300000000, float %6690)
  %6692 = tail call float @llvm.fma.f32(float %6688, float 0xBE205C6100000000, float %6691)
  %6693 = fadd float %6689, %6692
  %6694 = fsub float %6693, %6689
  %6695 = fsub float %6692, %6694
  %6696 = tail call float @llvm.amdgcn.ldexp.f32(float %6675, i32 1)
  %6697 = fmul float %6675, %6683
  %6698 = fneg float %6697
  %6699 = tail call float @llvm.fma.f32(float %6683, float %6675, float %6698)
  %6700 = tail call float @llvm.fma.f32(float %6683, float %6677, float %6699)
  %6701 = tail call float @llvm.fma.f32(float %6685, float %6675, float %6700)
  %6702 = fadd float %6697, %6701
  %6703 = fsub float %6702, %6697
  %6704 = fsub float %6701, %6703
  %6705 = fmul float %6683, %6687
  %6706 = fneg float %6705
  %6707 = tail call float @llvm.fma.f32(float %6683, float %6687, float %6706)
  %6708 = tail call float @llvm.fma.f32(float %6685, float %6687, float %6707)
  %6709 = fadd float %6705, %6708
  %6710 = fsub float %6709, %6705
  %6711 = fsub float %6708, %6710
  %6712 = fadd float %6709, 0x3FE5555540000000
  %6713 = fadd float %6712, 0xBFE5555540000000
  %6714 = fsub float %6709, %6713
  %6715 = fadd float %6711, 0x3E2E720200000000
  %6716 = fadd float %6715, %6714
  %6717 = fadd float %6712, %6716
  %6718 = fsub float %6717, %6712
  %6719 = fsub float %6716, %6718
  %6720 = fmul float %6702, %6717
  %6721 = fneg float %6720
  %6722 = tail call float @llvm.fma.f32(float %6702, float %6717, float %6721)
  %6723 = tail call float @llvm.fma.f32(float %6702, float %6719, float %6722)
  %6724 = tail call float @llvm.fma.f32(float %6704, float %6717, float %6723)
  %6725 = tail call float @llvm.amdgcn.ldexp.f32(float %6677, i32 1)
  %6726 = fadd float %6720, %6724
  %6727 = fsub float %6726, %6720
  %6728 = fsub float %6724, %6727
  %6729 = fadd float %6696, %6726
  %6730 = fsub float %6729, %6696
  %6731 = fsub float %6726, %6730
  %6732 = fadd float %6725, %6728
  %6733 = fadd float %6732, %6731
  %6734 = fadd float %6729, %6733
  %6735 = fsub float %6734, %6729
  %6736 = fsub float %6733, %6735
  %6737 = fadd float %6693, %6734
  %6738 = fsub float %6737, %6693
  %6739 = fsub float %6737, %6738
  %6740 = fsub float %6693, %6739
  %6741 = fsub float %6734, %6738
  %6742 = fadd float %6741, %6740
  %6743 = fadd float %6695, %6736
  %6744 = fsub float %6743, %6695
  %6745 = fsub float %6743, %6744
  %6746 = fsub float %6695, %6745
  %6747 = fsub float %6736, %6744
  %6748 = fadd float %6747, %6746
  %6749 = fadd float %6743, %6742
  %6750 = fadd float %6737, %6749
  %6751 = fsub float %6750, %6737
  %6752 = fsub float %6749, %6751
  %6753 = fadd float %6748, %6752
  %6754 = fadd float %6750, %6753
  %6755 = fsub float %6754, %6750
  %6756 = fsub float %6753, %6755
  %6757 = fmul float %6754, 2.000000e+00
  %6758 = fneg float %6757
  %6759 = tail call float @llvm.fma.f32(float %6754, float 2.000000e+00, float %6758)
  %6760 = fmul float %6754, 0.000000e+00
  %6761 = tail call float @llvm.fma.f32(float %6756, float 2.000000e+00, float %6760)
  %6762 = fadd float %6759, %6761
  %6763 = fadd float %6757, %6762
  %6764 = fsub float %6763, %6757
  %6765 = fsub float %6762, %6764
  %6766 = tail call float @llvm.fabs.f32(float %6757) #3
  %6767 = fcmp oeq float %6766, 0x7FF0000000000000
  %6768 = select i1 %6767, float %6757, float %6763
  %6769 = tail call float @llvm.fabs.f32(float %6768) #3
  %6770 = fcmp oeq float %6769, 0x7FF0000000000000
  %6771 = select i1 %6770, float 0.000000e+00, float %6765
  %6772 = fcmp oeq float %6768, 0x40562E4300000000
  %6773 = select i1 %6772, float 0x3EE0000000000000, float 0.000000e+00
  %6774 = fsub float %6768, %6773
  %6775 = fadd float %6773, %6771
  %6776 = fmul float %6774, 0x3FF7154760000000
  %6777 = tail call float @llvm.rint.f32(float %6776)
  %6778 = fcmp ogt float %6774, 0x40562E4300000000
  %6779 = fcmp olt float %6774, 0xC059D1DA00000000
  %6780 = fneg float %6776
  %6781 = tail call float @llvm.fma.f32(float %6774, float 0x3FF7154760000000, float %6780)
  %6782 = tail call float @llvm.fma.f32(float %6774, float 0x3E54AE0BE0000000, float %6781)
  %6783 = fsub float %6776, %6777
  %6784 = fadd float %6782, %6783
  %6785 = tail call float @llvm.exp2.f32(float %6784)
  %6786 = fptosi float %6777 to i32
  %6787 = tail call float @llvm.amdgcn.ldexp.f32(float %6785, i32 %6786)
  %6788 = select i1 %6779, float 0.000000e+00, float %6787
  %6789 = select i1 %6778, float 0x7FF0000000000000, float %6788
  %6790 = tail call float @llvm.fma.f32(float %6789, float %6775, float %6789)
  %6791 = tail call float @llvm.fabs.f32(float %6789) #3
  %6792 = fcmp oeq float %6791, 0x7FF0000000000000
  %6793 = select i1 %6792, float %6789, float %6790
  %6794 = fcmp uge float %6646, 0.000000e+00
  %6795 = tail call float @llvm.fabs.f32(float %6793)
  %6796 = fcmp oeq float %6649, 0x7FF0000000000000
  %6797 = fcmp oeq float %6646, 0.000000e+00
  %6798 = or i1 %6797, %6796
  %6799 = select i1 %6797, float 0.000000e+00, float 0x7FF0000000000000
  %6800 = select i1 %6798, float %6799, float %6795
  %6801 = fcmp uno float %6646, 0.000000e+00
  %6802 = select i1 %6801, float 0x7FF8000000000000, float %6800
  %6803 = fpext float %6802 to double
  %6804 = fmul contract double %6803, 7.400000e-03
  %6805 = fadd contract double %6648, %6804
  %6806 = fmul float %6754, 3.000000e+00
  %6807 = fneg float %6806
  %6808 = tail call float @llvm.fma.f32(float %6754, float 3.000000e+00, float %6807)
  %6809 = tail call float @llvm.fma.f32(float %6756, float 3.000000e+00, float %6760)
  %6810 = fadd float %6808, %6809
  %6811 = fadd float %6806, %6810
  %6812 = fsub float %6811, %6806
  %6813 = fsub float %6810, %6812
  %6814 = tail call float @llvm.fabs.f32(float %6806) #3
  %6815 = fcmp oeq float %6814, 0x7FF0000000000000
  %6816 = select i1 %6815, float %6806, float %6811
  %6817 = tail call float @llvm.fabs.f32(float %6816) #3
  %6818 = fcmp oeq float %6817, 0x7FF0000000000000
  %6819 = select i1 %6818, float 0.000000e+00, float %6813
  %6820 = fcmp oeq float %6816, 0x40562E4300000000
  %6821 = select i1 %6820, float 0x3EE0000000000000, float 0.000000e+00
  %6822 = fsub float %6816, %6821
  %6823 = fadd float %6821, %6819
  %6824 = fmul float %6822, 0x3FF7154760000000
  %6825 = tail call float @llvm.rint.f32(float %6824)
  %6826 = fcmp ogt float %6822, 0x40562E4300000000
  %6827 = fcmp olt float %6822, 0xC059D1DA00000000
  %6828 = fneg float %6824
  %6829 = tail call float @llvm.fma.f32(float %6822, float 0x3FF7154760000000, float %6828)
  %6830 = tail call float @llvm.fma.f32(float %6822, float 0x3E54AE0BE0000000, float %6829)
  %6831 = fsub float %6824, %6825
  %6832 = fadd float %6830, %6831
  %6833 = tail call float @llvm.exp2.f32(float %6832)
  %6834 = fptosi float %6825 to i32
  %6835 = tail call float @llvm.amdgcn.ldexp.f32(float %6833, i32 %6834)
  %6836 = select i1 %6827, float 0.000000e+00, float %6835
  %6837 = select i1 %6826, float 0x7FF0000000000000, float %6836
  %6838 = tail call float @llvm.fma.f32(float %6837, float %6823, float %6837)
  %6839 = tail call float @llvm.fabs.f32(float %6837) #3
  %6840 = fcmp oeq float %6839, 0x7FF0000000000000
  %6841 = select i1 %6840, float %6837, float %6838
  %6842 = select i1 %6794, float 0.000000e+00, float -0.000000e+00
  %6843 = tail call float @llvm.copysign.f32(float %6841, float %6842)
  %6844 = tail call float @llvm.copysign.f32(float %6799, float %6646)
  %6845 = select i1 %6798, float %6844, float %6843
  %6846 = select i1 %6801, float 0x7FF8000000000000, float %6845
  %6847 = fpext float %6846 to double
  %6848 = fmul contract double %6847, 1.500000e-02
  %6849 = fadd contract double %6848, %6805
  %6850 = fptrunc double %6849 to float
  %6851 = fmul contract float %6357, %6850
  %6852 = fmul contract float %6347, 0x3FFB851EC0000000
  %6853 = fmul contract float %6852, %6358
  %6854 = fmul contract float %6345, %6358
  %6855 = fadd contract float %6854, 1.150000e+01
  %6856 = fdiv contract float %6853, %6855
  %6857 = fsub contract float %6851, %6856
  %6858 = fmul contract float %6358, 0x3F6B717580000000
  %6859 = fmul contract float %6359, %6578
  %6860 = fsub contract float %6858, %6859
  %6861 = fmul contract float %6358, 0x3F6205BC00000000
  %6862 = fmul contract float %6640, %6360
  %6863 = fsub contract float %6861, %6862
  %6864 = fmul contract float %6359, 0x407485BB40000000
  %6865 = fmul contract float %6633, %6360
  %6866 = fsub contract float %6864, %6865
  %6867 = fmul contract float %6852, %6359
  %6868 = fmul contract float %6345, %6359
  %6869 = fadd contract float %6868, 1.150000e+01
  %6870 = fdiv contract float %6867, %6869
  %6871 = fmul contract float %6852, %6360
  %6872 = fmul contract float %6345, %6360
  %6873 = fadd contract float %6872, 1.150000e+01
  %6874 = fdiv contract float %6871, %6873
  %6875 = fneg contract float %6577
  %6876 = fsub contract float %6875, %6594
  %6877 = fsub contract float %6876, %6619
  %6878 = fpext float %6877 to double
  %6879 = fmul contract double %6878, 1.000000e-03
  %6880 = fptrunc double %6879 to float
  %6881 = fsub contract float %6577, %6581
  %6882 = fsub contract float %6881, %6598
  %6883 = fsub contract float %6882, %6623
  %6884 = fsub contract float %6866, %6636
  %6885 = fmul contract float %6345, %6884
  %6886 = fadd contract float %6885, %6883
  %6887 = fpext float %6886 to double
  %6888 = fmul contract double %6887, 1.000000e-03
  %6889 = fptrunc double %6888 to float
  %6890 = fsub contract float %6581, %6602
  %6891 = fsub contract float %6890, %6627
  %6892 = fsub contract float %6863, %6643
  %6893 = fmul contract float %6345, %6892
  %6894 = fadd contract float %6893, %6891
  %6895 = fpext float %6894 to double
  %6896 = fmul contract double %6895, 1.000000e-03
  %6897 = fptrunc double %6896 to float
  %6898 = fsub contract float %6594, %6587
  %6899 = fpext float %6898 to double
  %6900 = fmul contract double %6899, 1.000000e-03
  %6901 = fptrunc double %6900 to float
  %6902 = fadd contract float %6598, %6587
  %6903 = fsub contract float %6902, %6590
  %6904 = fpext float %6903 to double
  %6905 = fmul contract double %6904, 1.000000e-03
  %6906 = fptrunc double %6905 to float
  %6907 = fadd contract float %6602, %6590
  %6908 = fpext float %6907 to double
  %6909 = fmul contract double %6908, 1.000000e-03
  %6910 = fptrunc double %6909 to float
  %6911 = fsub contract float %6636, %6639
  %6912 = fadd contract float %6870, %6911
  %6913 = fpext float %6912 to double
  %6914 = fmul contract double %6913, 1.000000e-03
  %6915 = fptrunc double %6914 to float
  %6916 = fadd contract float %6643, %6639
  %6917 = fsub contract float %6916, %6857
  %6918 = fpext float %6917 to double
  %6919 = fmul contract double %6918, 1.000000e-03
  %6920 = fptrunc double %6919 to float
  %6921 = fsub contract float %6857, %6863
  %6922 = fsub contract float %6921, %6860
  %6923 = fpext float %6922 to double
  %6924 = fmul contract double %6923, 1.000000e-03
  %6925 = fptrunc double %6924 to float
  %6926 = fsub contract float %6860, %6866
  %6927 = fsub contract float %6926, %6870
  %6928 = fpext float %6927 to double
  %6929 = fmul contract double %6928, 1.000000e-03
  %6930 = fptrunc double %6929 to float
  %6931 = fadd contract float %6863, %6866
  %6932 = fsub contract float %6931, %6874
  %6933 = fpext float %6932 to double
  %6934 = fmul contract double %6933, 1.000000e-03
  %6935 = fptrunc double %6934 to float
  %6936 = fsub contract float %6609, %6619
  %6937 = fsub contract float %6936, %6623
  %6938 = fsub contract float %6937, %6627
  %6939 = fpext float %6938 to double
  %6940 = fmul contract double %6939, 1.000000e-03
  %6941 = fptrunc double %6940 to float
  %6942 = fsub contract float %6619, %6612
  %6943 = fpext float %6942 to double
  %6944 = fmul contract double %6943, 1.000000e-03
  %6945 = fptrunc double %6944 to float
  %6946 = fadd contract float %6623, %6612
  %6947 = fsub contract float %6946, %6615
  %6948 = fpext float %6947 to double
  %6949 = fmul contract double %6948, 1.000000e-03
  %6950 = fptrunc double %6949 to float
  %6951 = fadd contract float %6627, %6615
  %6952 = fpext float %6951 to double
  %6953 = fmul contract double %6952, 1.000000e-03
  %6954 = fptrunc double %6953 to float
  %6955 = getelementptr inbounds float, float addrspace(1)* %1843, i64 46
  store float %6880, float addrspace(1)* %6955, align 4, !tbaa !6
  %6956 = getelementptr inbounds float, float addrspace(1)* %1843, i64 47
  store float %6889, float addrspace(1)* %6956, align 4, !tbaa !6
  %6957 = getelementptr inbounds float, float addrspace(1)* %1843, i64 48
  store float %6897, float addrspace(1)* %6957, align 4, !tbaa !6
  %6958 = getelementptr inbounds float, float addrspace(1)* %1843, i64 49
  store float %6901, float addrspace(1)* %6958, align 4, !tbaa !6
  %6959 = getelementptr inbounds float, float addrspace(1)* %1843, i64 50
  store float %6906, float addrspace(1)* %6959, align 4, !tbaa !6
  %6960 = getelementptr inbounds float, float addrspace(1)* %1843, i64 51
  store float %6910, float addrspace(1)* %6960, align 4, !tbaa !6
  %6961 = getelementptr inbounds float, float addrspace(1)* %1843, i64 52
  store float %6915, float addrspace(1)* %6961, align 4, !tbaa !6
  %6962 = getelementptr inbounds float, float addrspace(1)* %1843, i64 53
  store float %6920, float addrspace(1)* %6962, align 4, !tbaa !6
  %6963 = getelementptr inbounds float, float addrspace(1)* %1843, i64 54
  store float %6925, float addrspace(1)* %6963, align 4, !tbaa !6
  %6964 = getelementptr inbounds float, float addrspace(1)* %1843, i64 55
  store float %6930, float addrspace(1)* %6964, align 4, !tbaa !6
  %6965 = getelementptr inbounds float, float addrspace(1)* %1843, i64 56
  store float %6935, float addrspace(1)* %6965, align 4, !tbaa !6
  %6966 = getelementptr inbounds float, float addrspace(1)* %1843, i64 57
  store float %6941, float addrspace(1)* %6966, align 4, !tbaa !6
  %6967 = getelementptr inbounds float, float addrspace(1)* %1843, i64 58
  store float %6945, float addrspace(1)* %6967, align 4, !tbaa !6
  %6968 = getelementptr inbounds float, float addrspace(1)* %1843, i64 59
  store float %6950, float addrspace(1)* %6968, align 4, !tbaa !6
  %6969 = getelementptr inbounds float, float addrspace(1)* %1843, i64 60
  store float %6954, float addrspace(1)* %6969, align 4, !tbaa !6
  %6970 = fmul contract float %6345, 2.000000e+00
  %6971 = fsub contract float %6860, %6639
  %6972 = fmul contract float %6970, %6971
  %6973 = fadd contract float %6581, %6577
  %6974 = fadd contract float %6587, %6973
  %6975 = fadd contract float %6590, %6974
  %6976 = fadd contract float %6609, %6975
  %6977 = fadd contract float %6612, %6976
  %6978 = fadd contract float %6615, %6977
  %6979 = fmul contract float %6978, 2.000000e+00
  %6980 = fsub contract float %6972, %6979
  %6981 = fpext float %6980 to double
  %6982 = fmul contract double %6981, 1.000000e-03
  %6983 = fptrunc double %6982 to float
  store float %6983, float addrspace(1)* %1843, align 4, !tbaa !6
  %6984 = load float, float addrspace(1)* %73, align 4, !tbaa !6
  %6985 = fmul contract float %6984, 1.000000e+03
  %6986 = load float, float addrspace(1)* %114, align 4, !tbaa !6
  %6987 = load float, float addrspace(1)* %115, align 4, !tbaa !6
  %6988 = load float, float addrspace(1)* %116, align 4, !tbaa !6
  %6989 = load float, float addrspace(1)* %117, align 4, !tbaa !6
  %6990 = load float, float addrspace(1)* %97, align 4, !tbaa !6
  %6991 = load float, float addrspace(1)* %98, align 4, !tbaa !6
  %6992 = load float, float addrspace(1)* %118, align 4, !tbaa !6
  %6993 = load float, float addrspace(1)* %119, align 4, !tbaa !6
  %6994 = load float, float addrspace(1)* %120, align 4, !tbaa !6
  %6995 = load float, float addrspace(1)* %121, align 4, !tbaa !6
  %6996 = load float, float addrspace(1)* %122, align 4, !tbaa !6
  %6997 = load float, float addrspace(1)* %123, align 4, !tbaa !6
  %6998 = load float, float addrspace(1)* %124, align 4, !tbaa !6
  %6999 = load float, float addrspace(1)* %125, align 4, !tbaa !6
  %7000 = load float, float addrspace(1)* %126, align 4, !tbaa !6
  %7001 = load float, float addrspace(1)* %127, align 4, !tbaa !6
  %7002 = load float, float addrspace(1)* %128, align 4, !tbaa !6
  %7003 = load float, float addrspace(1)* %129, align 4, !tbaa !6
  %7004 = load float, float addrspace(1)* %130, align 4, !tbaa !6
  %7005 = load float, float addrspace(1)* %131, align 4, !tbaa !6
  %7006 = load float, float addrspace(1)* %132, align 4, !tbaa !6
  %7007 = fcmp contract ugt float %6991, 1.000000e+00
  %7008 = fpext float %6990 to double
  %7009 = fdiv contract double %7008, 0x3FEE147AE147AE14
  %7010 = fadd contract double %7009, 1.000000e+00
  br i1 %7007, label %7031, label %7011

7011:                                             ; preds = %6414
  %7012 = fpext float %6991 to double
  %7013 = fdiv contract double %7012, 1.200000e-02
  %7014 = fsub contract double %7010, %7013
  %7015 = fmul contract double %7014, 2.500000e-03
  %7016 = fdiv contract double %7008, 8.100000e+00
  %7017 = fadd contract double %7016, 1.000000e+00
  %7018 = fdiv contract double %7012, 2.200000e-02
  %7019 = fadd contract double %7017, %7018
  %7020 = fmul contract double %7019, %7015
  %7021 = fdiv contract double %7008, 6.400000e-01
  %7022 = fadd contract double %7021, 1.000000e+00
  %7023 = fdiv contract double %7012, 1.400000e-03
  %7024 = fadd contract double %7022, %7023
  %7025 = fmul contract double %7024, 1.280000e-01
  %7026 = fdiv contract double %7008, 1.300000e+01
  %7027 = fadd contract double %7026, 1.000000e+00
  %7028 = fdiv contract double %7012, 1.530000e-01
  %7029 = fsub contract double %7027, %7028
  %7030 = fmul contract double %7029, %7025
  br label %7056

7031:                                             ; preds = %6414
  %7032 = fadd contract double %7010, 0xC054D55555555555
  %7033 = fadd contract float %6991, -1.000000e+00
  %7034 = fpext float %7033 to double
  %7035 = fdiv contract double %7034, 6.000000e-02
  %7036 = fadd contract double %7032, %7035
  %7037 = fmul contract double %7036, 2.500000e-03
  %7038 = fdiv contract double %7008, 8.100000e+00
  %7039 = fadd contract double %7038, 1.000000e+00
  %7040 = fadd contract double %7039, 0x4046BA2E8BA2E8BB
  %7041 = fdiv contract double %7034, 6.800000e-02
  %7042 = fadd contract double %7040, %7041
  %7043 = fmul contract double %7042, %7037
  %7044 = fdiv contract double %7008, 6.400000e-01
  %7045 = fadd contract double %7044, 1.000000e+00
  %7046 = fadd contract double %7045, 0x4086524924924925
  %7047 = fdiv contract double %7034, 5.000000e-03
  %7048 = fadd contract double %7046, %7047
  %7049 = fmul contract double %7048, 1.280000e-01
  %7050 = fdiv contract double %7008, 1.300000e+01
  %7051 = fadd contract double %7050, 1.000000e+00
  %7052 = fadd contract double %7051, 0xC01A24CF7A24CF7A
  %7053 = fdiv contract double %7034, 1.500000e-01
  %7054 = fadd contract double %7052, %7053
  %7055 = fmul contract double %7054, %7049
  br label %7056

7056:                                             ; preds = %7031, %7011
  %7057 = phi double [ %7030, %7011 ], [ %7055, %7031 ]
  %7058 = phi double [ %7020, %7011 ], [ %7043, %7031 ]
  %7059 = fptrunc double %7058 to float
  %7060 = fptrunc double %7057 to float
  %7061 = fdiv contract float 1.000000e+01, %7059
  %7062 = fdiv contract float 5.000000e+02, %7060
  %7063 = tail call float @llvm.fabs.f32(float %6985)
  %7064 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7063)
  %7065 = fcmp olt float %7064, 0x3FE5555560000000
  %7066 = zext i1 %7065 to i32
  %7067 = tail call float @llvm.amdgcn.ldexp.f32(float %7064, i32 %7066)
  %7068 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7063)
  %7069 = sub nsw i32 %7068, %7066
  %7070 = fadd float %7067, -1.000000e+00
  %7071 = fadd float %7067, 1.000000e+00
  %7072 = fadd float %7071, -1.000000e+00
  %7073 = fsub float %7067, %7072
  %7074 = tail call float @llvm.amdgcn.rcp.f32(float %7071)
  %7075 = fmul float %7070, %7074
  %7076 = fmul float %7071, %7075
  %7077 = fneg float %7076
  %7078 = tail call float @llvm.fma.f32(float %7075, float %7071, float %7077)
  %7079 = tail call float @llvm.fma.f32(float %7075, float %7073, float %7078)
  %7080 = fadd float %7076, %7079
  %7081 = fsub float %7080, %7076
  %7082 = fsub float %7079, %7081
  %7083 = fsub float %7070, %7080
  %7084 = fsub float %7070, %7083
  %7085 = fsub float %7084, %7080
  %7086 = fsub float %7085, %7082
  %7087 = fadd float %7083, %7086
  %7088 = fmul float %7074, %7087
  %7089 = fadd float %7075, %7088
  %7090 = fsub float %7089, %7075
  %7091 = fsub float %7088, %7090
  %7092 = fmul float %7089, %7089
  %7093 = fneg float %7092
  %7094 = tail call float @llvm.fma.f32(float %7089, float %7089, float %7093)
  %7095 = fmul float %7091, 2.000000e+00
  %7096 = tail call float @llvm.fma.f32(float %7089, float %7095, float %7094)
  %7097 = fadd float %7092, %7096
  %7098 = fsub float %7097, %7092
  %7099 = fsub float %7096, %7098
  %7100 = tail call float @llvm.fmuladd.f32(float %7097, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7101 = tail call float @llvm.fmuladd.f32(float %7097, float %7100, float 0x3FD999BDE0000000)
  %7102 = sitofp i32 %7069 to float
  %7103 = fmul float %7102, 0x3FE62E4300000000
  %7104 = fneg float %7103
  %7105 = tail call float @llvm.fma.f32(float %7102, float 0x3FE62E4300000000, float %7104)
  %7106 = tail call float @llvm.fma.f32(float %7102, float 0xBE205C6100000000, float %7105)
  %7107 = fadd float %7103, %7106
  %7108 = fsub float %7107, %7103
  %7109 = fsub float %7106, %7108
  %7110 = tail call float @llvm.amdgcn.ldexp.f32(float %7089, i32 1)
  %7111 = fmul float %7089, %7097
  %7112 = fneg float %7111
  %7113 = tail call float @llvm.fma.f32(float %7097, float %7089, float %7112)
  %7114 = tail call float @llvm.fma.f32(float %7097, float %7091, float %7113)
  %7115 = tail call float @llvm.fma.f32(float %7099, float %7089, float %7114)
  %7116 = fadd float %7111, %7115
  %7117 = fsub float %7116, %7111
  %7118 = fsub float %7115, %7117
  %7119 = fmul float %7097, %7101
  %7120 = fneg float %7119
  %7121 = tail call float @llvm.fma.f32(float %7097, float %7101, float %7120)
  %7122 = tail call float @llvm.fma.f32(float %7099, float %7101, float %7121)
  %7123 = fadd float %7119, %7122
  %7124 = fsub float %7123, %7119
  %7125 = fsub float %7122, %7124
  %7126 = fadd float %7123, 0x3FE5555540000000
  %7127 = fadd float %7126, 0xBFE5555540000000
  %7128 = fsub float %7123, %7127
  %7129 = fadd float %7125, 0x3E2E720200000000
  %7130 = fadd float %7129, %7128
  %7131 = fadd float %7126, %7130
  %7132 = fsub float %7131, %7126
  %7133 = fsub float %7130, %7132
  %7134 = fmul float %7116, %7131
  %7135 = fneg float %7134
  %7136 = tail call float @llvm.fma.f32(float %7116, float %7131, float %7135)
  %7137 = tail call float @llvm.fma.f32(float %7116, float %7133, float %7136)
  %7138 = tail call float @llvm.fma.f32(float %7118, float %7131, float %7137)
  %7139 = tail call float @llvm.amdgcn.ldexp.f32(float %7091, i32 1)
  %7140 = fadd float %7134, %7138
  %7141 = fsub float %7140, %7134
  %7142 = fsub float %7138, %7141
  %7143 = fadd float %7110, %7140
  %7144 = fsub float %7143, %7110
  %7145 = fsub float %7140, %7144
  %7146 = fadd float %7139, %7142
  %7147 = fadd float %7146, %7145
  %7148 = fadd float %7143, %7147
  %7149 = fsub float %7148, %7143
  %7150 = fsub float %7147, %7149
  %7151 = fadd float %7107, %7148
  %7152 = fsub float %7151, %7107
  %7153 = fsub float %7151, %7152
  %7154 = fsub float %7107, %7153
  %7155 = fsub float %7148, %7152
  %7156 = fadd float %7155, %7154
  %7157 = fadd float %7109, %7150
  %7158 = fsub float %7157, %7109
  %7159 = fsub float %7157, %7158
  %7160 = fsub float %7109, %7159
  %7161 = fsub float %7150, %7158
  %7162 = fadd float %7161, %7160
  %7163 = fadd float %7157, %7156
  %7164 = fadd float %7151, %7163
  %7165 = fsub float %7164, %7151
  %7166 = fsub float %7163, %7165
  %7167 = fadd float %7162, %7166
  %7168 = fadd float %7164, %7167
  %7169 = fsub float %7168, %7164
  %7170 = fsub float %7167, %7169
  %7171 = fmul float %7168, 2.000000e+00
  %7172 = fneg float %7171
  %7173 = tail call float @llvm.fma.f32(float %7168, float 2.000000e+00, float %7172)
  %7174 = fmul float %7168, 0.000000e+00
  %7175 = tail call float @llvm.fma.f32(float %7170, float 2.000000e+00, float %7174)
  %7176 = fadd float %7173, %7175
  %7177 = fadd float %7171, %7176
  %7178 = fsub float %7177, %7171
  %7179 = fsub float %7176, %7178
  %7180 = tail call float @llvm.fabs.f32(float %7171) #3
  %7181 = fcmp oeq float %7180, 0x7FF0000000000000
  %7182 = select i1 %7181, float %7171, float %7177
  %7183 = tail call float @llvm.fabs.f32(float %7182) #3
  %7184 = fcmp oeq float %7183, 0x7FF0000000000000
  %7185 = select i1 %7184, float 0.000000e+00, float %7179
  %7186 = fcmp oeq float %7182, 0x40562E4300000000
  %7187 = select i1 %7186, float 0x3EE0000000000000, float 0.000000e+00
  %7188 = fsub float %7182, %7187
  %7189 = fadd float %7187, %7185
  %7190 = fmul float %7188, 0x3FF7154760000000
  %7191 = tail call float @llvm.rint.f32(float %7190)
  %7192 = fcmp ogt float %7188, 0x40562E4300000000
  %7193 = fcmp olt float %7188, 0xC059D1DA00000000
  %7194 = fneg float %7190
  %7195 = tail call float @llvm.fma.f32(float %7188, float 0x3FF7154760000000, float %7194)
  %7196 = tail call float @llvm.fma.f32(float %7188, float 0x3E54AE0BE0000000, float %7195)
  %7197 = fsub float %7190, %7191
  %7198 = fadd float %7196, %7197
  %7199 = tail call float @llvm.exp2.f32(float %7198)
  %7200 = fptosi float %7191 to i32
  %7201 = tail call float @llvm.amdgcn.ldexp.f32(float %7199, i32 %7200)
  %7202 = select i1 %7193, float 0.000000e+00, float %7201
  %7203 = select i1 %7192, float 0x7FF0000000000000, float %7202
  %7204 = tail call float @llvm.fma.f32(float %7203, float %7189, float %7203)
  %7205 = tail call float @llvm.fabs.f32(float %7203) #3
  %7206 = fcmp oeq float %7205, 0x7FF0000000000000
  %7207 = select i1 %7206, float %7203, float %7204
  %7208 = tail call float @llvm.fabs.f32(float %7207)
  %7209 = fcmp oeq float %7063, 0x7FF0000000000000
  %7210 = fcmp oeq float %6985, 0.000000e+00
  %7211 = or i1 %7210, %7209
  %7212 = select i1 %7210, float 0.000000e+00, float 0x7FF0000000000000
  %7213 = select i1 %7211, float %7212, float %7208
  %7214 = fcmp uno float %6985, 0.000000e+00
  %7215 = select i1 %7214, float 0x7FF8000000000000, float %7213
  %7216 = fmul contract float %7215, %7061
  %7217 = fmul contract float %6992, %7216
  %7218 = fmul contract float %6993, 1.000000e+01
  %7219 = fsub contract float %7217, %7218
  %7220 = fmul contract float %7215, %7062
  %7221 = fmul contract float %6993, %7220
  %7222 = fmul contract float %6994, 5.000000e+02
  %7223 = fsub contract float %7221, %7222
  %7224 = fsub contract float %6986, %6995
  %7225 = fsub contract float %7224, %6996
  %7226 = fsub contract float %7225, %6997
  %7227 = fmul contract float %6995, %7216
  %7228 = fmul contract float %6996, 0x3FB99999A0000000
  %7229 = fsub contract float %7227, %7228
  %7230 = fmul contract float %6996, %7220
  %7231 = fmul contract float %6997, 5.000000e+02
  %7232 = fsub contract float %7230, %7231
  %7233 = fmul contract float %6992, 0x3F7CAC0820000000
  %7234 = fmul contract float %7233, %7226
  %7235 = fmul contract float %6995, 0x3F56F00680000000
  %7236 = fsub contract float %7234, %7235
  %7237 = fmul contract float %6993, 0x3F7CAC0820000000
  %7238 = fmul contract float %7237, %7226
  %7239 = fmul contract float %6996, 0x3EED5C3140000000
  %7240 = fsub contract float %7238, %7239
  %7241 = fmul contract float %6994, 0x3F7CAC0820000000
  %7242 = fmul contract float %7241, %7226
  %7243 = fmul contract float %6997, 0x3EED5C3140000000
  %7244 = fsub contract float %7242, %7243
  %7245 = fsub contract float %6988, %7003
  %7246 = fsub contract float %7245, %7004
  %7247 = fsub contract float %7246, %7005
  %7248 = fsub contract float %7247, %7006
  %7249 = fmul contract float %7215, 2.000000e+00
  %7250 = fmul contract float %7248, %7249
  %7251 = fsub contract float %7250, %7003
  %7252 = fmul contract float %7004, %7216
  %7253 = fmul contract float %7005, 0x3FAF07C200000000
  %7254 = fsub contract float %7252, %7253
  %7255 = fmul contract float %7005, %7220
  %7256 = fmul contract float %7006, 0x3F7054ECC0000000
  %7257 = fsub contract float %7255, %7256
  %7258 = fmul contract float %6992, 4.600000e+01
  %7259 = fmul contract float %7258, %7003
  %7260 = fmul contract float %7004, 0x4080CFBA60000000
  %7261 = fsub contract float %7259, %7260
  %7262 = fmul contract float %6993, 4.600000e+01
  %7263 = fmul contract float %7262, %7003
  %7264 = fmul contract float %7005, 0x400A154CA0000000
  %7265 = fsub contract float %7263, %7264
  %7266 = fmul contract float %6994, 4.600000e+01
  %7267 = fmul contract float %7266, %7003
  %7268 = fmul contract float %7006, 0x3F554C9860000000
  %7269 = fsub contract float %7267, %7268
  %7270 = fsub contract float 1.000000e+00, %6998
  %7271 = fsub contract float %7270, %6999
  %7272 = fsub contract float %7271, %7000
  %7273 = fsub contract float %7272, %7001
  %7274 = fsub contract float %7273, %7002
  %7275 = fmul contract float %6993, 0x40506AFC40000000
  %7276 = fmul contract float %7275, %7274
  %7277 = fmul contract float %6998, 0x407485BB40000000
  %7278 = fsub contract float %7276, %7277
  %7279 = fmul contract float %6998, %7220
  %7280 = fmul contract float %6999, 0x400ACCCCC0000000
  %7281 = fsub contract float %7279, %7280
  %7282 = fmul contract float %6994, 0x40506AFC40000000
  %7283 = fmul contract float %7282, %7274
  %7284 = fmul contract float %6999, 0x40019999A0000000
  %7285 = fsub contract float %7283, %7284
  %7286 = fadd contract float %6999, %7000
  %7287 = fadd contract float %7286, %7001
  %7288 = fadd contract float %7287, %7002
  %7289 = fpext float %7288 to double
  %7290 = fmul contract double %7289, 5.500000e-02
  %7291 = tail call float @llvm.fabs.f32(float %7288)
  %7292 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7291)
  %7293 = fcmp olt float %7292, 0x3FE5555560000000
  %7294 = zext i1 %7293 to i32
  %7295 = tail call float @llvm.amdgcn.ldexp.f32(float %7292, i32 %7294)
  %7296 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7291)
  %7297 = sub nsw i32 %7296, %7294
  %7298 = fadd float %7295, -1.000000e+00
  %7299 = fadd float %7295, 1.000000e+00
  %7300 = fadd float %7299, -1.000000e+00
  %7301 = fsub float %7295, %7300
  %7302 = tail call float @llvm.amdgcn.rcp.f32(float %7299)
  %7303 = fmul float %7298, %7302
  %7304 = fmul float %7299, %7303
  %7305 = fneg float %7304
  %7306 = tail call float @llvm.fma.f32(float %7303, float %7299, float %7305)
  %7307 = tail call float @llvm.fma.f32(float %7303, float %7301, float %7306)
  %7308 = fadd float %7304, %7307
  %7309 = fsub float %7308, %7304
  %7310 = fsub float %7307, %7309
  %7311 = fsub float %7298, %7308
  %7312 = fsub float %7298, %7311
  %7313 = fsub float %7312, %7308
  %7314 = fsub float %7313, %7310
  %7315 = fadd float %7311, %7314
  %7316 = fmul float %7302, %7315
  %7317 = fadd float %7303, %7316
  %7318 = fsub float %7317, %7303
  %7319 = fsub float %7316, %7318
  %7320 = fmul float %7317, %7317
  %7321 = fneg float %7320
  %7322 = tail call float @llvm.fma.f32(float %7317, float %7317, float %7321)
  %7323 = fmul float %7319, 2.000000e+00
  %7324 = tail call float @llvm.fma.f32(float %7317, float %7323, float %7322)
  %7325 = fadd float %7320, %7324
  %7326 = fsub float %7325, %7320
  %7327 = fsub float %7324, %7326
  %7328 = tail call float @llvm.fmuladd.f32(float %7325, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7329 = tail call float @llvm.fmuladd.f32(float %7325, float %7328, float 0x3FD999BDE0000000)
  %7330 = sitofp i32 %7297 to float
  %7331 = fmul float %7330, 0x3FE62E4300000000
  %7332 = fneg float %7331
  %7333 = tail call float @llvm.fma.f32(float %7330, float 0x3FE62E4300000000, float %7332)
  %7334 = tail call float @llvm.fma.f32(float %7330, float 0xBE205C6100000000, float %7333)
  %7335 = fadd float %7331, %7334
  %7336 = fsub float %7335, %7331
  %7337 = fsub float %7334, %7336
  %7338 = tail call float @llvm.amdgcn.ldexp.f32(float %7317, i32 1)
  %7339 = fmul float %7317, %7325
  %7340 = fneg float %7339
  %7341 = tail call float @llvm.fma.f32(float %7325, float %7317, float %7340)
  %7342 = tail call float @llvm.fma.f32(float %7325, float %7319, float %7341)
  %7343 = tail call float @llvm.fma.f32(float %7327, float %7317, float %7342)
  %7344 = fadd float %7339, %7343
  %7345 = fsub float %7344, %7339
  %7346 = fsub float %7343, %7345
  %7347 = fmul float %7325, %7329
  %7348 = fneg float %7347
  %7349 = tail call float @llvm.fma.f32(float %7325, float %7329, float %7348)
  %7350 = tail call float @llvm.fma.f32(float %7327, float %7329, float %7349)
  %7351 = fadd float %7347, %7350
  %7352 = fsub float %7351, %7347
  %7353 = fsub float %7350, %7352
  %7354 = fadd float %7351, 0x3FE5555540000000
  %7355 = fadd float %7354, 0xBFE5555540000000
  %7356 = fsub float %7351, %7355
  %7357 = fadd float %7353, 0x3E2E720200000000
  %7358 = fadd float %7357, %7356
  %7359 = fadd float %7354, %7358
  %7360 = fsub float %7359, %7354
  %7361 = fsub float %7358, %7360
  %7362 = fmul float %7344, %7359
  %7363 = fneg float %7362
  %7364 = tail call float @llvm.fma.f32(float %7344, float %7359, float %7363)
  %7365 = tail call float @llvm.fma.f32(float %7344, float %7361, float %7364)
  %7366 = tail call float @llvm.fma.f32(float %7346, float %7359, float %7365)
  %7367 = tail call float @llvm.amdgcn.ldexp.f32(float %7319, i32 1)
  %7368 = fadd float %7362, %7366
  %7369 = fsub float %7368, %7362
  %7370 = fsub float %7366, %7369
  %7371 = fadd float %7338, %7368
  %7372 = fsub float %7371, %7338
  %7373 = fsub float %7368, %7372
  %7374 = fadd float %7367, %7370
  %7375 = fadd float %7374, %7373
  %7376 = fadd float %7371, %7375
  %7377 = fsub float %7376, %7371
  %7378 = fsub float %7375, %7377
  %7379 = fadd float %7335, %7376
  %7380 = fsub float %7379, %7335
  %7381 = fsub float %7379, %7380
  %7382 = fsub float %7335, %7381
  %7383 = fsub float %7376, %7380
  %7384 = fadd float %7383, %7382
  %7385 = fadd float %7337, %7378
  %7386 = fsub float %7385, %7337
  %7387 = fsub float %7385, %7386
  %7388 = fsub float %7337, %7387
  %7389 = fsub float %7378, %7386
  %7390 = fadd float %7389, %7388
  %7391 = fadd float %7385, %7384
  %7392 = fadd float %7379, %7391
  %7393 = fsub float %7392, %7379
  %7394 = fsub float %7391, %7393
  %7395 = fadd float %7390, %7394
  %7396 = fadd float %7392, %7395
  %7397 = fsub float %7396, %7392
  %7398 = fsub float %7395, %7397
  %7399 = fmul float %7396, 2.000000e+00
  %7400 = fneg float %7399
  %7401 = tail call float @llvm.fma.f32(float %7396, float 2.000000e+00, float %7400)
  %7402 = fmul float %7396, 0.000000e+00
  %7403 = tail call float @llvm.fma.f32(float %7398, float 2.000000e+00, float %7402)
  %7404 = fadd float %7401, %7403
  %7405 = fadd float %7399, %7404
  %7406 = fsub float %7405, %7399
  %7407 = fsub float %7404, %7406
  %7408 = tail call float @llvm.fabs.f32(float %7399) #3
  %7409 = fcmp oeq float %7408, 0x7FF0000000000000
  %7410 = select i1 %7409, float %7399, float %7405
  %7411 = tail call float @llvm.fabs.f32(float %7410) #3
  %7412 = fcmp oeq float %7411, 0x7FF0000000000000
  %7413 = select i1 %7412, float 0.000000e+00, float %7407
  %7414 = fcmp oeq float %7410, 0x40562E4300000000
  %7415 = select i1 %7414, float 0x3EE0000000000000, float 0.000000e+00
  %7416 = fsub float %7410, %7415
  %7417 = fadd float %7415, %7413
  %7418 = fmul float %7416, 0x3FF7154760000000
  %7419 = tail call float @llvm.rint.f32(float %7418)
  %7420 = fcmp ogt float %7416, 0x40562E4300000000
  %7421 = fcmp olt float %7416, 0xC059D1DA00000000
  %7422 = fneg float %7418
  %7423 = tail call float @llvm.fma.f32(float %7416, float 0x3FF7154760000000, float %7422)
  %7424 = tail call float @llvm.fma.f32(float %7416, float 0x3E54AE0BE0000000, float %7423)
  %7425 = fsub float %7418, %7419
  %7426 = fadd float %7424, %7425
  %7427 = tail call float @llvm.exp2.f32(float %7426)
  %7428 = fptosi float %7419 to i32
  %7429 = tail call float @llvm.amdgcn.ldexp.f32(float %7427, i32 %7428)
  %7430 = select i1 %7421, float 0.000000e+00, float %7429
  %7431 = select i1 %7420, float 0x7FF0000000000000, float %7430
  %7432 = tail call float @llvm.fma.f32(float %7431, float %7417, float %7431)
  %7433 = tail call float @llvm.fabs.f32(float %7431) #3
  %7434 = fcmp oeq float %7433, 0x7FF0000000000000
  %7435 = select i1 %7434, float %7431, float %7432
  %7436 = fcmp uge float %7288, 0.000000e+00
  %7437 = tail call float @llvm.fabs.f32(float %7435)
  %7438 = fcmp oeq float %7291, 0x7FF0000000000000
  %7439 = fcmp oeq float %7288, 0.000000e+00
  %7440 = or i1 %7439, %7438
  %7441 = select i1 %7439, float 0.000000e+00, float 0x7FF0000000000000
  %7442 = select i1 %7440, float %7441, float %7437
  %7443 = fcmp uno float %7288, 0.000000e+00
  %7444 = select i1 %7443, float 0x7FF8000000000000, float %7442
  %7445 = fpext float %7444 to double
  %7446 = fmul contract double %7445, 7.400000e-03
  %7447 = fadd contract double %7290, %7446
  %7448 = fmul float %7396, 3.000000e+00
  %7449 = fneg float %7448
  %7450 = tail call float @llvm.fma.f32(float %7396, float 3.000000e+00, float %7449)
  %7451 = tail call float @llvm.fma.f32(float %7398, float 3.000000e+00, float %7402)
  %7452 = fadd float %7450, %7451
  %7453 = fadd float %7448, %7452
  %7454 = fsub float %7453, %7448
  %7455 = fsub float %7452, %7454
  %7456 = tail call float @llvm.fabs.f32(float %7448) #3
  %7457 = fcmp oeq float %7456, 0x7FF0000000000000
  %7458 = select i1 %7457, float %7448, float %7453
  %7459 = tail call float @llvm.fabs.f32(float %7458) #3
  %7460 = fcmp oeq float %7459, 0x7FF0000000000000
  %7461 = select i1 %7460, float 0.000000e+00, float %7455
  %7462 = fcmp oeq float %7458, 0x40562E4300000000
  %7463 = select i1 %7462, float 0x3EE0000000000000, float 0.000000e+00
  %7464 = fsub float %7458, %7463
  %7465 = fadd float %7463, %7461
  %7466 = fmul float %7464, 0x3FF7154760000000
  %7467 = tail call float @llvm.rint.f32(float %7466)
  %7468 = fcmp ogt float %7464, 0x40562E4300000000
  %7469 = fcmp olt float %7464, 0xC059D1DA00000000
  %7470 = fneg float %7466
  %7471 = tail call float @llvm.fma.f32(float %7464, float 0x3FF7154760000000, float %7470)
  %7472 = tail call float @llvm.fma.f32(float %7464, float 0x3E54AE0BE0000000, float %7471)
  %7473 = fsub float %7466, %7467
  %7474 = fadd float %7472, %7473
  %7475 = tail call float @llvm.exp2.f32(float %7474)
  %7476 = fptosi float %7467 to i32
  %7477 = tail call float @llvm.amdgcn.ldexp.f32(float %7475, i32 %7476)
  %7478 = select i1 %7469, float 0.000000e+00, float %7477
  %7479 = select i1 %7468, float 0x7FF0000000000000, float %7478
  %7480 = tail call float @llvm.fma.f32(float %7479, float %7465, float %7479)
  %7481 = tail call float @llvm.fabs.f32(float %7479) #3
  %7482 = fcmp oeq float %7481, 0x7FF0000000000000
  %7483 = select i1 %7482, float %7479, float %7480
  %7484 = select i1 %7436, float 0.000000e+00, float -0.000000e+00
  %7485 = tail call float @llvm.copysign.f32(float %7483, float %7484)
  %7486 = tail call float @llvm.copysign.f32(float %7441, float %7288)
  %7487 = select i1 %7440, float %7486, float %7485
  %7488 = select i1 %7443, float 0x7FF8000000000000, float %7487
  %7489 = fpext float %7488 to double
  %7490 = fmul contract double %7489, 1.500000e-02
  %7491 = fadd contract double %7490, %7447
  %7492 = fptrunc double %7491 to float
  %7493 = fmul contract float %6999, %7492
  %7494 = fmul contract float %6989, 0x3FFB851EC0000000
  %7495 = fmul contract float %7494, %7000
  %7496 = fmul contract float %6987, %7000
  %7497 = fadd contract float %7496, 1.150000e+01
  %7498 = fdiv contract float %7495, %7497
  %7499 = fsub contract float %7493, %7498
  %7500 = fmul contract float %7000, 0x3F6B717580000000
  %7501 = fmul contract float %7001, %7220
  %7502 = fsub contract float %7500, %7501
  %7503 = fmul contract float %7000, 0x3F6205BC00000000
  %7504 = fmul contract float %7282, %7002
  %7505 = fsub contract float %7503, %7504
  %7506 = fmul contract float %7001, 0x407485BB40000000
  %7507 = fmul contract float %7275, %7002
  %7508 = fsub contract float %7506, %7507
  %7509 = fmul contract float %7494, %7001
  %7510 = fmul contract float %6987, %7001
  %7511 = fadd contract float %7510, 1.150000e+01
  %7512 = fdiv contract float %7509, %7511
  %7513 = fmul contract float %7494, %7002
  %7514 = fmul contract float %6987, %7002
  %7515 = fadd contract float %7514, 1.150000e+01
  %7516 = fdiv contract float %7513, %7515
  %7517 = fneg contract float %7219
  %7518 = fsub contract float %7517, %7236
  %7519 = fsub contract float %7518, %7261
  %7520 = fpext float %7519 to double
  %7521 = fmul contract double %7520, 1.000000e-03
  %7522 = fptrunc double %7521 to float
  %7523 = fsub contract float %7219, %7223
  %7524 = fsub contract float %7523, %7240
  %7525 = fsub contract float %7524, %7265
  %7526 = fsub contract float %7508, %7278
  %7527 = fmul contract float %6987, %7526
  %7528 = fadd contract float %7527, %7525
  %7529 = fpext float %7528 to double
  %7530 = fmul contract double %7529, 1.000000e-03
  %7531 = fptrunc double %7530 to float
  %7532 = fsub contract float %7223, %7244
  %7533 = fsub contract float %7532, %7269
  %7534 = fsub contract float %7505, %7285
  %7535 = fmul contract float %6987, %7534
  %7536 = fadd contract float %7535, %7533
  %7537 = fpext float %7536 to double
  %7538 = fmul contract double %7537, 1.000000e-03
  %7539 = fptrunc double %7538 to float
  %7540 = fsub contract float %7236, %7229
  %7541 = fpext float %7540 to double
  %7542 = fmul contract double %7541, 1.000000e-03
  %7543 = fptrunc double %7542 to float
  %7544 = fadd contract float %7240, %7229
  %7545 = fsub contract float %7544, %7232
  %7546 = fpext float %7545 to double
  %7547 = fmul contract double %7546, 1.000000e-03
  %7548 = fptrunc double %7547 to float
  %7549 = fadd contract float %7244, %7232
  %7550 = fpext float %7549 to double
  %7551 = fmul contract double %7550, 1.000000e-03
  %7552 = fptrunc double %7551 to float
  %7553 = fsub contract float %7278, %7281
  %7554 = fadd contract float %7512, %7553
  %7555 = fpext float %7554 to double
  %7556 = fmul contract double %7555, 1.000000e-03
  %7557 = fptrunc double %7556 to float
  %7558 = fadd contract float %7285, %7281
  %7559 = fsub contract float %7558, %7499
  %7560 = fpext float %7559 to double
  %7561 = fmul contract double %7560, 1.000000e-03
  %7562 = fptrunc double %7561 to float
  %7563 = fsub contract float %7499, %7505
  %7564 = fsub contract float %7563, %7502
  %7565 = fpext float %7564 to double
  %7566 = fmul contract double %7565, 1.000000e-03
  %7567 = fptrunc double %7566 to float
  %7568 = fsub contract float %7502, %7508
  %7569 = fsub contract float %7568, %7512
  %7570 = fpext float %7569 to double
  %7571 = fmul contract double %7570, 1.000000e-03
  %7572 = fptrunc double %7571 to float
  %7573 = fadd contract float %7505, %7508
  %7574 = fsub contract float %7573, %7516
  %7575 = fpext float %7574 to double
  %7576 = fmul contract double %7575, 1.000000e-03
  %7577 = fptrunc double %7576 to float
  %7578 = fsub contract float %7251, %7261
  %7579 = fsub contract float %7578, %7265
  %7580 = fsub contract float %7579, %7269
  %7581 = fpext float %7580 to double
  %7582 = fmul contract double %7581, 1.000000e-03
  %7583 = fptrunc double %7582 to float
  %7584 = fsub contract float %7261, %7254
  %7585 = fpext float %7584 to double
  %7586 = fmul contract double %7585, 1.000000e-03
  %7587 = fptrunc double %7586 to float
  %7588 = fadd contract float %7265, %7254
  %7589 = fsub contract float %7588, %7257
  %7590 = fpext float %7589 to double
  %7591 = fmul contract double %7590, 1.000000e-03
  %7592 = fptrunc double %7591 to float
  %7593 = fadd contract float %7269, %7257
  %7594 = fpext float %7593 to double
  %7595 = fmul contract double %7594, 1.000000e-03
  %7596 = fptrunc double %7595 to float
  %7597 = getelementptr inbounds float, float addrspace(1)* %1843, i64 61
  store float %7522, float addrspace(1)* %7597, align 4, !tbaa !6
  %7598 = getelementptr inbounds float, float addrspace(1)* %1843, i64 62
  store float %7531, float addrspace(1)* %7598, align 4, !tbaa !6
  %7599 = getelementptr inbounds float, float addrspace(1)* %1843, i64 63
  store float %7539, float addrspace(1)* %7599, align 4, !tbaa !6
  %7600 = getelementptr inbounds float, float addrspace(1)* %1843, i64 64
  store float %7543, float addrspace(1)* %7600, align 4, !tbaa !6
  %7601 = getelementptr inbounds float, float addrspace(1)* %1843, i64 65
  store float %7548, float addrspace(1)* %7601, align 4, !tbaa !6
  %7602 = getelementptr inbounds float, float addrspace(1)* %1843, i64 66
  store float %7552, float addrspace(1)* %7602, align 4, !tbaa !6
  %7603 = getelementptr inbounds float, float addrspace(1)* %1843, i64 67
  store float %7557, float addrspace(1)* %7603, align 4, !tbaa !6
  %7604 = getelementptr inbounds float, float addrspace(1)* %1843, i64 68
  store float %7562, float addrspace(1)* %7604, align 4, !tbaa !6
  %7605 = getelementptr inbounds float, float addrspace(1)* %1843, i64 69
  store float %7567, float addrspace(1)* %7605, align 4, !tbaa !6
  %7606 = getelementptr inbounds float, float addrspace(1)* %1843, i64 70
  store float %7572, float addrspace(1)* %7606, align 4, !tbaa !6
  %7607 = getelementptr inbounds float, float addrspace(1)* %1843, i64 71
  store float %7577, float addrspace(1)* %7607, align 4, !tbaa !6
  %7608 = getelementptr inbounds float, float addrspace(1)* %1843, i64 72
  store float %7583, float addrspace(1)* %7608, align 4, !tbaa !6
  %7609 = getelementptr inbounds float, float addrspace(1)* %1843, i64 73
  store float %7587, float addrspace(1)* %7609, align 4, !tbaa !6
  %7610 = getelementptr inbounds float, float addrspace(1)* %1843, i64 74
  store float %7592, float addrspace(1)* %7610, align 4, !tbaa !6
  %7611 = getelementptr inbounds float, float addrspace(1)* %1843, i64 75
  store float %7596, float addrspace(1)* %7611, align 4, !tbaa !6
  %7612 = fmul contract float %6987, 2.000000e+00
  %7613 = fsub contract float %7502, %7281
  %7614 = fmul contract float %7612, %7613
  %7615 = fadd contract float %7223, %7219
  %7616 = fadd contract float %7229, %7615
  %7617 = fadd contract float %7232, %7616
  %7618 = fadd contract float %7251, %7617
  %7619 = fadd contract float %7254, %7618
  %7620 = fadd contract float %7257, %7619
  %7621 = fmul contract float %7620, 2.000000e+00
  %7622 = fsub contract float %7614, %7621
  %7623 = fpext float %7622 to double
  %7624 = fmul contract double %7623, 1.000000e-03
  %7625 = fptrunc double %7624 to float
  store float %7625, float addrspace(1)* %2292, align 4, !tbaa !6
  %7626 = load float, float addrspace(1)* %74, align 4, !tbaa !6
  %7627 = fmul contract float %7626, 1.000000e+03
  %7628 = load float, float addrspace(1)* %133, align 4, !tbaa !6
  %7629 = load float, float addrspace(1)* %134, align 4, !tbaa !6
  %7630 = load float, float addrspace(1)* %135, align 4, !tbaa !6
  %7631 = load float, float addrspace(1)* %136, align 4, !tbaa !6
  %7632 = load float, float addrspace(1)* %97, align 4, !tbaa !6
  %7633 = load float, float addrspace(1)* %98, align 4, !tbaa !6
  %7634 = load float, float addrspace(1)* %137, align 4, !tbaa !6
  %7635 = load float, float addrspace(1)* %138, align 4, !tbaa !6
  %7636 = load float, float addrspace(1)* %139, align 4, !tbaa !6
  %7637 = load float, float addrspace(1)* %140, align 4, !tbaa !6
  %7638 = load float, float addrspace(1)* %141, align 4, !tbaa !6
  %7639 = load float, float addrspace(1)* %142, align 4, !tbaa !6
  %7640 = load float, float addrspace(1)* %143, align 4, !tbaa !6
  %7641 = load float, float addrspace(1)* %144, align 4, !tbaa !6
  %7642 = load float, float addrspace(1)* %145, align 4, !tbaa !6
  %7643 = load float, float addrspace(1)* %146, align 4, !tbaa !6
  %7644 = load float, float addrspace(1)* %147, align 4, !tbaa !6
  %7645 = load float, float addrspace(1)* %148, align 4, !tbaa !6
  %7646 = load float, float addrspace(1)* %149, align 4, !tbaa !6
  %7647 = load float, float addrspace(1)* %150, align 4, !tbaa !6
  %7648 = load float, float addrspace(1)* %151, align 4, !tbaa !6
  %7649 = fcmp contract ugt float %7633, 1.000000e+00
  %7650 = fpext float %7632 to double
  %7651 = fdiv contract double %7650, 0x3FEE147AE147AE14
  %7652 = fadd contract double %7651, 1.000000e+00
  br i1 %7649, label %7673, label %7653

7653:                                             ; preds = %7056
  %7654 = fpext float %7633 to double
  %7655 = fdiv contract double %7654, 1.200000e-02
  %7656 = fsub contract double %7652, %7655
  %7657 = fmul contract double %7656, 2.500000e-03
  %7658 = fdiv contract double %7650, 8.100000e+00
  %7659 = fadd contract double %7658, 1.000000e+00
  %7660 = fdiv contract double %7654, 2.200000e-02
  %7661 = fadd contract double %7659, %7660
  %7662 = fmul contract double %7661, %7657
  %7663 = fdiv contract double %7650, 6.400000e-01
  %7664 = fadd contract double %7663, 1.000000e+00
  %7665 = fdiv contract double %7654, 1.400000e-03
  %7666 = fadd contract double %7664, %7665
  %7667 = fmul contract double %7666, 1.280000e-01
  %7668 = fdiv contract double %7650, 1.300000e+01
  %7669 = fadd contract double %7668, 1.000000e+00
  %7670 = fdiv contract double %7654, 1.530000e-01
  %7671 = fsub contract double %7669, %7670
  %7672 = fmul contract double %7671, %7667
  br label %7698

7673:                                             ; preds = %7056
  %7674 = fadd contract double %7652, 0xC054D55555555555
  %7675 = fadd contract float %7633, -1.000000e+00
  %7676 = fpext float %7675 to double
  %7677 = fdiv contract double %7676, 6.000000e-02
  %7678 = fadd contract double %7674, %7677
  %7679 = fmul contract double %7678, 2.500000e-03
  %7680 = fdiv contract double %7650, 8.100000e+00
  %7681 = fadd contract double %7680, 1.000000e+00
  %7682 = fadd contract double %7681, 0x4046BA2E8BA2E8BB
  %7683 = fdiv contract double %7676, 6.800000e-02
  %7684 = fadd contract double %7682, %7683
  %7685 = fmul contract double %7684, %7679
  %7686 = fdiv contract double %7650, 6.400000e-01
  %7687 = fadd contract double %7686, 1.000000e+00
  %7688 = fadd contract double %7687, 0x4086524924924925
  %7689 = fdiv contract double %7676, 5.000000e-03
  %7690 = fadd contract double %7688, %7689
  %7691 = fmul contract double %7690, 1.280000e-01
  %7692 = fdiv contract double %7650, 1.300000e+01
  %7693 = fadd contract double %7692, 1.000000e+00
  %7694 = fadd contract double %7693, 0xC01A24CF7A24CF7A
  %7695 = fdiv contract double %7676, 1.500000e-01
  %7696 = fadd contract double %7694, %7695
  %7697 = fmul contract double %7696, %7691
  br label %7698

7698:                                             ; preds = %7673, %7653
  %7699 = phi double [ %7672, %7653 ], [ %7697, %7673 ]
  %7700 = phi double [ %7662, %7653 ], [ %7685, %7673 ]
  %7701 = fptrunc double %7700 to float
  %7702 = fptrunc double %7699 to float
  %7703 = fdiv contract float 1.000000e+01, %7701
  %7704 = fdiv contract float 5.000000e+02, %7702
  %7705 = tail call float @llvm.fabs.f32(float %7627)
  %7706 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7705)
  %7707 = fcmp olt float %7706, 0x3FE5555560000000
  %7708 = zext i1 %7707 to i32
  %7709 = tail call float @llvm.amdgcn.ldexp.f32(float %7706, i32 %7708)
  %7710 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7705)
  %7711 = sub nsw i32 %7710, %7708
  %7712 = fadd float %7709, -1.000000e+00
  %7713 = fadd float %7709, 1.000000e+00
  %7714 = fadd float %7713, -1.000000e+00
  %7715 = fsub float %7709, %7714
  %7716 = tail call float @llvm.amdgcn.rcp.f32(float %7713)
  %7717 = fmul float %7712, %7716
  %7718 = fmul float %7713, %7717
  %7719 = fneg float %7718
  %7720 = tail call float @llvm.fma.f32(float %7717, float %7713, float %7719)
  %7721 = tail call float @llvm.fma.f32(float %7717, float %7715, float %7720)
  %7722 = fadd float %7718, %7721
  %7723 = fsub float %7722, %7718
  %7724 = fsub float %7721, %7723
  %7725 = fsub float %7712, %7722
  %7726 = fsub float %7712, %7725
  %7727 = fsub float %7726, %7722
  %7728 = fsub float %7727, %7724
  %7729 = fadd float %7725, %7728
  %7730 = fmul float %7716, %7729
  %7731 = fadd float %7717, %7730
  %7732 = fsub float %7731, %7717
  %7733 = fsub float %7730, %7732
  %7734 = fmul float %7731, %7731
  %7735 = fneg float %7734
  %7736 = tail call float @llvm.fma.f32(float %7731, float %7731, float %7735)
  %7737 = fmul float %7733, 2.000000e+00
  %7738 = tail call float @llvm.fma.f32(float %7731, float %7737, float %7736)
  %7739 = fadd float %7734, %7738
  %7740 = fsub float %7739, %7734
  %7741 = fsub float %7738, %7740
  %7742 = tail call float @llvm.fmuladd.f32(float %7739, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7743 = tail call float @llvm.fmuladd.f32(float %7739, float %7742, float 0x3FD999BDE0000000)
  %7744 = sitofp i32 %7711 to float
  %7745 = fmul float %7744, 0x3FE62E4300000000
  %7746 = fneg float %7745
  %7747 = tail call float @llvm.fma.f32(float %7744, float 0x3FE62E4300000000, float %7746)
  %7748 = tail call float @llvm.fma.f32(float %7744, float 0xBE205C6100000000, float %7747)
  %7749 = fadd float %7745, %7748
  %7750 = fsub float %7749, %7745
  %7751 = fsub float %7748, %7750
  %7752 = tail call float @llvm.amdgcn.ldexp.f32(float %7731, i32 1)
  %7753 = fmul float %7731, %7739
  %7754 = fneg float %7753
  %7755 = tail call float @llvm.fma.f32(float %7739, float %7731, float %7754)
  %7756 = tail call float @llvm.fma.f32(float %7739, float %7733, float %7755)
  %7757 = tail call float @llvm.fma.f32(float %7741, float %7731, float %7756)
  %7758 = fadd float %7753, %7757
  %7759 = fsub float %7758, %7753
  %7760 = fsub float %7757, %7759
  %7761 = fmul float %7739, %7743
  %7762 = fneg float %7761
  %7763 = tail call float @llvm.fma.f32(float %7739, float %7743, float %7762)
  %7764 = tail call float @llvm.fma.f32(float %7741, float %7743, float %7763)
  %7765 = fadd float %7761, %7764
  %7766 = fsub float %7765, %7761
  %7767 = fsub float %7764, %7766
  %7768 = fadd float %7765, 0x3FE5555540000000
  %7769 = fadd float %7768, 0xBFE5555540000000
  %7770 = fsub float %7765, %7769
  %7771 = fadd float %7767, 0x3E2E720200000000
  %7772 = fadd float %7771, %7770
  %7773 = fadd float %7768, %7772
  %7774 = fsub float %7773, %7768
  %7775 = fsub float %7772, %7774
  %7776 = fmul float %7758, %7773
  %7777 = fneg float %7776
  %7778 = tail call float @llvm.fma.f32(float %7758, float %7773, float %7777)
  %7779 = tail call float @llvm.fma.f32(float %7758, float %7775, float %7778)
  %7780 = tail call float @llvm.fma.f32(float %7760, float %7773, float %7779)
  %7781 = tail call float @llvm.amdgcn.ldexp.f32(float %7733, i32 1)
  %7782 = fadd float %7776, %7780
  %7783 = fsub float %7782, %7776
  %7784 = fsub float %7780, %7783
  %7785 = fadd float %7752, %7782
  %7786 = fsub float %7785, %7752
  %7787 = fsub float %7782, %7786
  %7788 = fadd float %7781, %7784
  %7789 = fadd float %7788, %7787
  %7790 = fadd float %7785, %7789
  %7791 = fsub float %7790, %7785
  %7792 = fsub float %7789, %7791
  %7793 = fadd float %7749, %7790
  %7794 = fsub float %7793, %7749
  %7795 = fsub float %7793, %7794
  %7796 = fsub float %7749, %7795
  %7797 = fsub float %7790, %7794
  %7798 = fadd float %7797, %7796
  %7799 = fadd float %7751, %7792
  %7800 = fsub float %7799, %7751
  %7801 = fsub float %7799, %7800
  %7802 = fsub float %7751, %7801
  %7803 = fsub float %7792, %7800
  %7804 = fadd float %7803, %7802
  %7805 = fadd float %7799, %7798
  %7806 = fadd float %7793, %7805
  %7807 = fsub float %7806, %7793
  %7808 = fsub float %7805, %7807
  %7809 = fadd float %7804, %7808
  %7810 = fadd float %7806, %7809
  %7811 = fsub float %7810, %7806
  %7812 = fsub float %7809, %7811
  %7813 = fmul float %7810, 2.000000e+00
  %7814 = fneg float %7813
  %7815 = tail call float @llvm.fma.f32(float %7810, float 2.000000e+00, float %7814)
  %7816 = fmul float %7810, 0.000000e+00
  %7817 = tail call float @llvm.fma.f32(float %7812, float 2.000000e+00, float %7816)
  %7818 = fadd float %7815, %7817
  %7819 = fadd float %7813, %7818
  %7820 = fsub float %7819, %7813
  %7821 = fsub float %7818, %7820
  %7822 = tail call float @llvm.fabs.f32(float %7813) #3
  %7823 = fcmp oeq float %7822, 0x7FF0000000000000
  %7824 = select i1 %7823, float %7813, float %7819
  %7825 = tail call float @llvm.fabs.f32(float %7824) #3
  %7826 = fcmp oeq float %7825, 0x7FF0000000000000
  %7827 = select i1 %7826, float 0.000000e+00, float %7821
  %7828 = fcmp oeq float %7824, 0x40562E4300000000
  %7829 = select i1 %7828, float 0x3EE0000000000000, float 0.000000e+00
  %7830 = fsub float %7824, %7829
  %7831 = fadd float %7829, %7827
  %7832 = fmul float %7830, 0x3FF7154760000000
  %7833 = tail call float @llvm.rint.f32(float %7832)
  %7834 = fcmp ogt float %7830, 0x40562E4300000000
  %7835 = fcmp olt float %7830, 0xC059D1DA00000000
  %7836 = fneg float %7832
  %7837 = tail call float @llvm.fma.f32(float %7830, float 0x3FF7154760000000, float %7836)
  %7838 = tail call float @llvm.fma.f32(float %7830, float 0x3E54AE0BE0000000, float %7837)
  %7839 = fsub float %7832, %7833
  %7840 = fadd float %7838, %7839
  %7841 = tail call float @llvm.exp2.f32(float %7840)
  %7842 = fptosi float %7833 to i32
  %7843 = tail call float @llvm.amdgcn.ldexp.f32(float %7841, i32 %7842)
  %7844 = select i1 %7835, float 0.000000e+00, float %7843
  %7845 = select i1 %7834, float 0x7FF0000000000000, float %7844
  %7846 = tail call float @llvm.fma.f32(float %7845, float %7831, float %7845)
  %7847 = tail call float @llvm.fabs.f32(float %7845) #3
  %7848 = fcmp oeq float %7847, 0x7FF0000000000000
  %7849 = select i1 %7848, float %7845, float %7846
  %7850 = tail call float @llvm.fabs.f32(float %7849)
  %7851 = fcmp oeq float %7705, 0x7FF0000000000000
  %7852 = fcmp oeq float %7627, 0.000000e+00
  %7853 = or i1 %7852, %7851
  %7854 = select i1 %7852, float 0.000000e+00, float 0x7FF0000000000000
  %7855 = select i1 %7853, float %7854, float %7850
  %7856 = fcmp uno float %7627, 0.000000e+00
  %7857 = select i1 %7856, float 0x7FF8000000000000, float %7855
  %7858 = fmul contract float %7857, %7703
  %7859 = fmul contract float %7634, %7858
  %7860 = fmul contract float %7635, 1.000000e+01
  %7861 = fsub contract float %7859, %7860
  %7862 = fmul contract float %7857, %7704
  %7863 = fmul contract float %7635, %7862
  %7864 = fmul contract float %7636, 5.000000e+02
  %7865 = fsub contract float %7863, %7864
  %7866 = fsub contract float %7628, %7637
  %7867 = fsub contract float %7866, %7638
  %7868 = fsub contract float %7867, %7639
  %7869 = fmul contract float %7637, %7858
  %7870 = fmul contract float %7638, 0x3FB99999A0000000
  %7871 = fsub contract float %7869, %7870
  %7872 = fmul contract float %7638, %7862
  %7873 = fmul contract float %7639, 5.000000e+02
  %7874 = fsub contract float %7872, %7873
  %7875 = fmul contract float %7634, 0x3F7CAC0820000000
  %7876 = fmul contract float %7875, %7868
  %7877 = fmul contract float %7637, 0x3F56F00680000000
  %7878 = fsub contract float %7876, %7877
  %7879 = fmul contract float %7635, 0x3F7CAC0820000000
  %7880 = fmul contract float %7879, %7868
  %7881 = fmul contract float %7638, 0x3EED5C3140000000
  %7882 = fsub contract float %7880, %7881
  %7883 = fmul contract float %7636, 0x3F7CAC0820000000
  %7884 = fmul contract float %7883, %7868
  %7885 = fmul contract float %7639, 0x3EED5C3140000000
  %7886 = fsub contract float %7884, %7885
  %7887 = fsub contract float %7630, %7645
  %7888 = fsub contract float %7887, %7646
  %7889 = fsub contract float %7888, %7647
  %7890 = fsub contract float %7889, %7648
  %7891 = fmul contract float %7857, 2.000000e+00
  %7892 = fmul contract float %7890, %7891
  %7893 = fsub contract float %7892, %7645
  %7894 = fmul contract float %7646, %7858
  %7895 = fmul contract float %7647, 0x3FAF07C200000000
  %7896 = fsub contract float %7894, %7895
  %7897 = fmul contract float %7647, %7862
  %7898 = fmul contract float %7648, 0x3F7054ECC0000000
  %7899 = fsub contract float %7897, %7898
  %7900 = fmul contract float %7634, 4.600000e+01
  %7901 = fmul contract float %7900, %7645
  %7902 = fmul contract float %7646, 0x4080CFBA60000000
  %7903 = fsub contract float %7901, %7902
  %7904 = fmul contract float %7635, 4.600000e+01
  %7905 = fmul contract float %7904, %7645
  %7906 = fmul contract float %7647, 0x400A154CA0000000
  %7907 = fsub contract float %7905, %7906
  %7908 = fmul contract float %7636, 4.600000e+01
  %7909 = fmul contract float %7908, %7645
  %7910 = fmul contract float %7648, 0x3F554C9860000000
  %7911 = fsub contract float %7909, %7910
  %7912 = fsub contract float 1.000000e+00, %7640
  %7913 = fsub contract float %7912, %7641
  %7914 = fsub contract float %7913, %7642
  %7915 = fsub contract float %7914, %7643
  %7916 = fsub contract float %7915, %7644
  %7917 = fmul contract float %7635, 0x40506AFC40000000
  %7918 = fmul contract float %7917, %7916
  %7919 = fmul contract float %7640, 0x407485BB40000000
  %7920 = fsub contract float %7918, %7919
  %7921 = fmul contract float %7640, %7862
  %7922 = fmul contract float %7641, 0x400ACCCCC0000000
  %7923 = fsub contract float %7921, %7922
  %7924 = fmul contract float %7636, 0x40506AFC40000000
  %7925 = fmul contract float %7924, %7916
  %7926 = fmul contract float %7641, 0x40019999A0000000
  %7927 = fsub contract float %7925, %7926
  %7928 = fadd contract float %7641, %7642
  %7929 = fadd contract float %7928, %7643
  %7930 = fadd contract float %7929, %7644
  %7931 = fpext float %7930 to double
  %7932 = fmul contract double %7931, 5.500000e-02
  %7933 = tail call float @llvm.fabs.f32(float %7930)
  %7934 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7933)
  %7935 = fcmp olt float %7934, 0x3FE5555560000000
  %7936 = zext i1 %7935 to i32
  %7937 = tail call float @llvm.amdgcn.ldexp.f32(float %7934, i32 %7936)
  %7938 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7933)
  %7939 = sub nsw i32 %7938, %7936
  %7940 = fadd float %7937, -1.000000e+00
  %7941 = fadd float %7937, 1.000000e+00
  %7942 = fadd float %7941, -1.000000e+00
  %7943 = fsub float %7937, %7942
  %7944 = tail call float @llvm.amdgcn.rcp.f32(float %7941)
  %7945 = fmul float %7940, %7944
  %7946 = fmul float %7941, %7945
  %7947 = fneg float %7946
  %7948 = tail call float @llvm.fma.f32(float %7945, float %7941, float %7947)
  %7949 = tail call float @llvm.fma.f32(float %7945, float %7943, float %7948)
  %7950 = fadd float %7946, %7949
  %7951 = fsub float %7950, %7946
  %7952 = fsub float %7949, %7951
  %7953 = fsub float %7940, %7950
  %7954 = fsub float %7940, %7953
  %7955 = fsub float %7954, %7950
  %7956 = fsub float %7955, %7952
  %7957 = fadd float %7953, %7956
  %7958 = fmul float %7944, %7957
  %7959 = fadd float %7945, %7958
  %7960 = fsub float %7959, %7945
  %7961 = fsub float %7958, %7960
  %7962 = fmul float %7959, %7959
  %7963 = fneg float %7962
  %7964 = tail call float @llvm.fma.f32(float %7959, float %7959, float %7963)
  %7965 = fmul float %7961, 2.000000e+00
  %7966 = tail call float @llvm.fma.f32(float %7959, float %7965, float %7964)
  %7967 = fadd float %7962, %7966
  %7968 = fsub float %7967, %7962
  %7969 = fsub float %7966, %7968
  %7970 = tail call float @llvm.fmuladd.f32(float %7967, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7971 = tail call float @llvm.fmuladd.f32(float %7967, float %7970, float 0x3FD999BDE0000000)
  %7972 = sitofp i32 %7939 to float
  %7973 = fmul float %7972, 0x3FE62E4300000000
  %7974 = fneg float %7973
  %7975 = tail call float @llvm.fma.f32(float %7972, float 0x3FE62E4300000000, float %7974)
  %7976 = tail call float @llvm.fma.f32(float %7972, float 0xBE205C6100000000, float %7975)
  %7977 = fadd float %7973, %7976
  %7978 = fsub float %7977, %7973
  %7979 = fsub float %7976, %7978
  %7980 = tail call float @llvm.amdgcn.ldexp.f32(float %7959, i32 1)
  %7981 = fmul float %7959, %7967
  %7982 = fneg float %7981
  %7983 = tail call float @llvm.fma.f32(float %7967, float %7959, float %7982)
  %7984 = tail call float @llvm.fma.f32(float %7967, float %7961, float %7983)
  %7985 = tail call float @llvm.fma.f32(float %7969, float %7959, float %7984)
  %7986 = fadd float %7981, %7985
  %7987 = fsub float %7986, %7981
  %7988 = fsub float %7985, %7987
  %7989 = fmul float %7967, %7971
  %7990 = fneg float %7989
  %7991 = tail call float @llvm.fma.f32(float %7967, float %7971, float %7990)
  %7992 = tail call float @llvm.fma.f32(float %7969, float %7971, float %7991)
  %7993 = fadd float %7989, %7992
  %7994 = fsub float %7993, %7989
  %7995 = fsub float %7992, %7994
  %7996 = fadd float %7993, 0x3FE5555540000000
  %7997 = fadd float %7996, 0xBFE5555540000000
  %7998 = fsub float %7993, %7997
  %7999 = fadd float %7995, 0x3E2E720200000000
  %8000 = fadd float %7999, %7998
  %8001 = fadd float %7996, %8000
  %8002 = fsub float %8001, %7996
  %8003 = fsub float %8000, %8002
  %8004 = fmul float %7986, %8001
  %8005 = fneg float %8004
  %8006 = tail call float @llvm.fma.f32(float %7986, float %8001, float %8005)
  %8007 = tail call float @llvm.fma.f32(float %7986, float %8003, float %8006)
  %8008 = tail call float @llvm.fma.f32(float %7988, float %8001, float %8007)
  %8009 = tail call float @llvm.amdgcn.ldexp.f32(float %7961, i32 1)
  %8010 = fadd float %8004, %8008
  %8011 = fsub float %8010, %8004
  %8012 = fsub float %8008, %8011
  %8013 = fadd float %7980, %8010
  %8014 = fsub float %8013, %7980
  %8015 = fsub float %8010, %8014
  %8016 = fadd float %8009, %8012
  %8017 = fadd float %8016, %8015
  %8018 = fadd float %8013, %8017
  %8019 = fsub float %8018, %8013
  %8020 = fsub float %8017, %8019
  %8021 = fadd float %7977, %8018
  %8022 = fsub float %8021, %7977
  %8023 = fsub float %8021, %8022
  %8024 = fsub float %7977, %8023
  %8025 = fsub float %8018, %8022
  %8026 = fadd float %8025, %8024
  %8027 = fadd float %7979, %8020
  %8028 = fsub float %8027, %7979
  %8029 = fsub float %8027, %8028
  %8030 = fsub float %7979, %8029
  %8031 = fsub float %8020, %8028
  %8032 = fadd float %8031, %8030
  %8033 = fadd float %8027, %8026
  %8034 = fadd float %8021, %8033
  %8035 = fsub float %8034, %8021
  %8036 = fsub float %8033, %8035
  %8037 = fadd float %8032, %8036
  %8038 = fadd float %8034, %8037
  %8039 = fsub float %8038, %8034
  %8040 = fsub float %8037, %8039
  %8041 = fmul float %8038, 2.000000e+00
  %8042 = fneg float %8041
  %8043 = tail call float @llvm.fma.f32(float %8038, float 2.000000e+00, float %8042)
  %8044 = fmul float %8038, 0.000000e+00
  %8045 = tail call float @llvm.fma.f32(float %8040, float 2.000000e+00, float %8044)
  %8046 = fadd float %8043, %8045
  %8047 = fadd float %8041, %8046
  %8048 = fsub float %8047, %8041
  %8049 = fsub float %8046, %8048
  %8050 = tail call float @llvm.fabs.f32(float %8041) #3
  %8051 = fcmp oeq float %8050, 0x7FF0000000000000
  %8052 = select i1 %8051, float %8041, float %8047
  %8053 = tail call float @llvm.fabs.f32(float %8052) #3
  %8054 = fcmp oeq float %8053, 0x7FF0000000000000
  %8055 = select i1 %8054, float 0.000000e+00, float %8049
  %8056 = fcmp oeq float %8052, 0x40562E4300000000
  %8057 = select i1 %8056, float 0x3EE0000000000000, float 0.000000e+00
  %8058 = fsub float %8052, %8057
  %8059 = fadd float %8057, %8055
  %8060 = fmul float %8058, 0x3FF7154760000000
  %8061 = tail call float @llvm.rint.f32(float %8060)
  %8062 = fcmp ogt float %8058, 0x40562E4300000000
  %8063 = fcmp olt float %8058, 0xC059D1DA00000000
  %8064 = fneg float %8060
  %8065 = tail call float @llvm.fma.f32(float %8058, float 0x3FF7154760000000, float %8064)
  %8066 = tail call float @llvm.fma.f32(float %8058, float 0x3E54AE0BE0000000, float %8065)
  %8067 = fsub float %8060, %8061
  %8068 = fadd float %8066, %8067
  %8069 = tail call float @llvm.exp2.f32(float %8068)
  %8070 = fptosi float %8061 to i32
  %8071 = tail call float @llvm.amdgcn.ldexp.f32(float %8069, i32 %8070)
  %8072 = select i1 %8063, float 0.000000e+00, float %8071
  %8073 = select i1 %8062, float 0x7FF0000000000000, float %8072
  %8074 = tail call float @llvm.fma.f32(float %8073, float %8059, float %8073)
  %8075 = tail call float @llvm.fabs.f32(float %8073) #3
  %8076 = fcmp oeq float %8075, 0x7FF0000000000000
  %8077 = select i1 %8076, float %8073, float %8074
  %8078 = fcmp uge float %7930, 0.000000e+00
  %8079 = tail call float @llvm.fabs.f32(float %8077)
  %8080 = fcmp oeq float %7933, 0x7FF0000000000000
  %8081 = fcmp oeq float %7930, 0.000000e+00
  %8082 = or i1 %8081, %8080
  %8083 = select i1 %8081, float 0.000000e+00, float 0x7FF0000000000000
  %8084 = select i1 %8082, float %8083, float %8079
  %8085 = fcmp uno float %7930, 0.000000e+00
  %8086 = select i1 %8085, float 0x7FF8000000000000, float %8084
  %8087 = fpext float %8086 to double
  %8088 = fmul contract double %8087, 7.400000e-03
  %8089 = fadd contract double %7932, %8088
  %8090 = fmul float %8038, 3.000000e+00
  %8091 = fneg float %8090
  %8092 = tail call float @llvm.fma.f32(float %8038, float 3.000000e+00, float %8091)
  %8093 = tail call float @llvm.fma.f32(float %8040, float 3.000000e+00, float %8044)
  %8094 = fadd float %8092, %8093
  %8095 = fadd float %8090, %8094
  %8096 = fsub float %8095, %8090
  %8097 = fsub float %8094, %8096
  %8098 = tail call float @llvm.fabs.f32(float %8090) #3
  %8099 = fcmp oeq float %8098, 0x7FF0000000000000
  %8100 = select i1 %8099, float %8090, float %8095
  %8101 = tail call float @llvm.fabs.f32(float %8100) #3
  %8102 = fcmp oeq float %8101, 0x7FF0000000000000
  %8103 = select i1 %8102, float 0.000000e+00, float %8097
  %8104 = fcmp oeq float %8100, 0x40562E4300000000
  %8105 = select i1 %8104, float 0x3EE0000000000000, float 0.000000e+00
  %8106 = fsub float %8100, %8105
  %8107 = fadd float %8105, %8103
  %8108 = fmul float %8106, 0x3FF7154760000000
  %8109 = tail call float @llvm.rint.f32(float %8108)
  %8110 = fcmp ogt float %8106, 0x40562E4300000000
  %8111 = fcmp olt float %8106, 0xC059D1DA00000000
  %8112 = fneg float %8108
  %8113 = tail call float @llvm.fma.f32(float %8106, float 0x3FF7154760000000, float %8112)
  %8114 = tail call float @llvm.fma.f32(float %8106, float 0x3E54AE0BE0000000, float %8113)
  %8115 = fsub float %8108, %8109
  %8116 = fadd float %8114, %8115
  %8117 = tail call float @llvm.exp2.f32(float %8116)
  %8118 = fptosi float %8109 to i32
  %8119 = tail call float @llvm.amdgcn.ldexp.f32(float %8117, i32 %8118)
  %8120 = select i1 %8111, float 0.000000e+00, float %8119
  %8121 = select i1 %8110, float 0x7FF0000000000000, float %8120
  %8122 = tail call float @llvm.fma.f32(float %8121, float %8107, float %8121)
  %8123 = tail call float @llvm.fabs.f32(float %8121) #3
  %8124 = fcmp oeq float %8123, 0x7FF0000000000000
  %8125 = select i1 %8124, float %8121, float %8122
  %8126 = select i1 %8078, float 0.000000e+00, float -0.000000e+00
  %8127 = tail call float @llvm.copysign.f32(float %8125, float %8126)
  %8128 = tail call float @llvm.copysign.f32(float %8083, float %7930)
  %8129 = select i1 %8082, float %8128, float %8127
  %8130 = select i1 %8085, float 0x7FF8000000000000, float %8129
  %8131 = fpext float %8130 to double
  %8132 = fmul contract double %8131, 1.500000e-02
  %8133 = fadd contract double %8132, %8089
  %8134 = fptrunc double %8133 to float
  %8135 = fmul contract float %7641, %8134
  %8136 = fmul contract float %7631, 0x3FFB851EC0000000
  %8137 = fmul contract float %8136, %7642
  %8138 = fmul contract float %7629, %7642
  %8139 = fadd contract float %8138, 1.150000e+01
  %8140 = fdiv contract float %8137, %8139
  %8141 = fsub contract float %8135, %8140
  %8142 = fmul contract float %7642, 0x3F6B717580000000
  %8143 = fmul contract float %7643, %7862
  %8144 = fsub contract float %8142, %8143
  %8145 = fmul contract float %7642, 0x3F6205BC00000000
  %8146 = fmul contract float %7924, %7644
  %8147 = fsub contract float %8145, %8146
  %8148 = fmul contract float %7643, 0x407485BB40000000
  %8149 = fmul contract float %7917, %7644
  %8150 = fsub contract float %8148, %8149
  %8151 = fmul contract float %8136, %7643
  %8152 = fmul contract float %7629, %7643
  %8153 = fadd contract float %8152, 1.150000e+01
  %8154 = fdiv contract float %8151, %8153
  %8155 = fmul contract float %8136, %7644
  %8156 = fmul contract float %7629, %7644
  %8157 = fadd contract float %8156, 1.150000e+01
  %8158 = fdiv contract float %8155, %8157
  %8159 = fneg contract float %7861
  %8160 = fsub contract float %8159, %7878
  %8161 = fsub contract float %8160, %7903
  %8162 = fpext float %8161 to double
  %8163 = fmul contract double %8162, 1.000000e-03
  %8164 = fptrunc double %8163 to float
  %8165 = fsub contract float %7861, %7865
  %8166 = fsub contract float %8165, %7882
  %8167 = fsub contract float %8166, %7907
  %8168 = fsub contract float %8150, %7920
  %8169 = fmul contract float %7629, %8168
  %8170 = fadd contract float %8169, %8167
  %8171 = fpext float %8170 to double
  %8172 = fmul contract double %8171, 1.000000e-03
  %8173 = fptrunc double %8172 to float
  %8174 = fsub contract float %7865, %7886
  %8175 = fsub contract float %8174, %7911
  %8176 = fsub contract float %8147, %7927
  %8177 = fmul contract float %7629, %8176
  %8178 = fadd contract float %8177, %8175
  %8179 = fpext float %8178 to double
  %8180 = fmul contract double %8179, 1.000000e-03
  %8181 = fptrunc double %8180 to float
  %8182 = fsub contract float %7878, %7871
  %8183 = fpext float %8182 to double
  %8184 = fmul contract double %8183, 1.000000e-03
  %8185 = fptrunc double %8184 to float
  %8186 = fadd contract float %7882, %7871
  %8187 = fsub contract float %8186, %7874
  %8188 = fpext float %8187 to double
  %8189 = fmul contract double %8188, 1.000000e-03
  %8190 = fptrunc double %8189 to float
  %8191 = fadd contract float %7886, %7874
  %8192 = fpext float %8191 to double
  %8193 = fmul contract double %8192, 1.000000e-03
  %8194 = fptrunc double %8193 to float
  %8195 = fsub contract float %7920, %7923
  %8196 = fadd contract float %8154, %8195
  %8197 = fpext float %8196 to double
  %8198 = fmul contract double %8197, 1.000000e-03
  %8199 = fptrunc double %8198 to float
  %8200 = fadd contract float %7927, %7923
  %8201 = fsub contract float %8200, %8141
  %8202 = fpext float %8201 to double
  %8203 = fmul contract double %8202, 1.000000e-03
  %8204 = fptrunc double %8203 to float
  %8205 = fsub contract float %8141, %8147
  %8206 = fsub contract float %8205, %8144
  %8207 = fpext float %8206 to double
  %8208 = fmul contract double %8207, 1.000000e-03
  %8209 = fptrunc double %8208 to float
  %8210 = fsub contract float %8144, %8150
  %8211 = fsub contract float %8210, %8154
  %8212 = fpext float %8211 to double
  %8213 = fmul contract double %8212, 1.000000e-03
  %8214 = fptrunc double %8213 to float
  %8215 = fadd contract float %8147, %8150
  %8216 = fsub contract float %8215, %8158
  %8217 = fpext float %8216 to double
  %8218 = fmul contract double %8217, 1.000000e-03
  %8219 = fptrunc double %8218 to float
  %8220 = fsub contract float %7893, %7903
  %8221 = fsub contract float %8220, %7907
  %8222 = fsub contract float %8221, %7911
  %8223 = fpext float %8222 to double
  %8224 = fmul contract double %8223, 1.000000e-03
  %8225 = fptrunc double %8224 to float
  %8226 = fsub contract float %7903, %7896
  %8227 = fpext float %8226 to double
  %8228 = fmul contract double %8227, 1.000000e-03
  %8229 = fptrunc double %8228 to float
  %8230 = fadd contract float %7907, %7896
  %8231 = fsub contract float %8230, %7899
  %8232 = fpext float %8231 to double
  %8233 = fmul contract double %8232, 1.000000e-03
  %8234 = fptrunc double %8233 to float
  %8235 = fadd contract float %7911, %7899
  %8236 = fpext float %8235 to double
  %8237 = fmul contract double %8236, 1.000000e-03
  %8238 = fptrunc double %8237 to float
  %8239 = getelementptr inbounds float, float addrspace(1)* %1843, i64 76
  store float %8164, float addrspace(1)* %8239, align 4, !tbaa !6
  %8240 = getelementptr inbounds float, float addrspace(1)* %1843, i64 77
  store float %8173, float addrspace(1)* %8240, align 4, !tbaa !6
  %8241 = getelementptr inbounds float, float addrspace(1)* %1843, i64 78
  store float %8181, float addrspace(1)* %8241, align 4, !tbaa !6
  %8242 = getelementptr inbounds float, float addrspace(1)* %1843, i64 79
  store float %8185, float addrspace(1)* %8242, align 4, !tbaa !6
  %8243 = getelementptr inbounds float, float addrspace(1)* %1843, i64 80
  store float %8190, float addrspace(1)* %8243, align 4, !tbaa !6
  %8244 = getelementptr inbounds float, float addrspace(1)* %1843, i64 81
  store float %8194, float addrspace(1)* %8244, align 4, !tbaa !6
  %8245 = getelementptr inbounds float, float addrspace(1)* %1843, i64 82
  store float %8199, float addrspace(1)* %8245, align 4, !tbaa !6
  %8246 = getelementptr inbounds float, float addrspace(1)* %1843, i64 83
  store float %8204, float addrspace(1)* %8246, align 4, !tbaa !6
  %8247 = getelementptr inbounds float, float addrspace(1)* %1843, i64 84
  store float %8209, float addrspace(1)* %8247, align 4, !tbaa !6
  %8248 = getelementptr inbounds float, float addrspace(1)* %1843, i64 85
  store float %8214, float addrspace(1)* %8248, align 4, !tbaa !6
  %8249 = getelementptr inbounds float, float addrspace(1)* %1843, i64 86
  store float %8219, float addrspace(1)* %8249, align 4, !tbaa !6
  %8250 = getelementptr inbounds float, float addrspace(1)* %1843, i64 87
  store float %8225, float addrspace(1)* %8250, align 4, !tbaa !6
  %8251 = getelementptr inbounds float, float addrspace(1)* %1843, i64 88
  store float %8229, float addrspace(1)* %8251, align 4, !tbaa !6
  %8252 = getelementptr inbounds float, float addrspace(1)* %1843, i64 89
  store float %8234, float addrspace(1)* %8252, align 4, !tbaa !6
  %8253 = getelementptr inbounds float, float addrspace(1)* %1843, i64 90
  store float %8238, float addrspace(1)* %8253, align 4, !tbaa !6
  %8254 = fmul contract float %7629, 2.000000e+00
  %8255 = fsub contract float %8144, %7923
  %8256 = fmul contract float %8254, %8255
  %8257 = fadd contract float %7865, %7861
  %8258 = fadd contract float %7871, %8257
  %8259 = fadd contract float %7874, %8258
  %8260 = fadd contract float %7893, %8259
  %8261 = fadd contract float %7896, %8260
  %8262 = fadd contract float %7899, %8261
  %8263 = fmul contract float %8262, 2.000000e+00
  %8264 = fsub contract float %8256, %8263
  %8265 = fpext float %8264 to double
  %8266 = fmul contract double %8265, 1.000000e-03
  %8267 = fptrunc double %8266 to float
  store float %8267, float addrspace(1)* %2297, align 4, !tbaa !6
  %8268 = load float, float addrspace(1)* %93, align 4, !tbaa !6
  %8269 = load float, float addrspace(1)* %94, align 4, !tbaa !6
  %8270 = fpext float %6030 to double
  %8271 = load float, float addrspace(1)* %37, align 4, !tbaa !6
  %8272 = fpext float %8271 to double
  %8273 = fmul contract double %8272, 1.000000e-03
  %8274 = fadd contract double %8273, %8270
  %8275 = fptrunc double %8274 to float
  store float %8275, float addrspace(1)* %6031, align 4, !tbaa !6
  %8276 = fpext float %6040 to double
  %8277 = load float, float addrspace(1)* %152, align 4, !tbaa !6
  %8278 = fpext float %8277 to double
  %8279 = fmul contract double %8278, 1.000000e-03
  %8280 = fadd contract double %8279, %8276
  %8281 = fptrunc double %8280 to float
  store float %8281, float addrspace(1)* %6041, align 4, !tbaa !6
  %8282 = fpext float %6046 to double
  %8283 = load float, float addrspace(1)* %153, align 4, !tbaa !6
  %8284 = fpext float %8283 to double
  %8285 = fmul contract double %8284, 1.000000e-03
  %8286 = fadd contract double %8285, %8282
  %8287 = fptrunc double %8286 to float
  store float %8287, float addrspace(1)* %6047, align 4, !tbaa !6
  %8288 = load float, float addrspace(1)* %99, align 4, !tbaa !6
  %8289 = load float, float addrspace(1)* %100, align 4, !tbaa !6
  %8290 = fadd contract float %8288, %8289
  %8291 = load float, float addrspace(1)* %101, align 4, !tbaa !6
  %8292 = fadd contract float %8290, %8291
  %8293 = load float, float addrspace(1)* %102, align 4, !tbaa !6
  %8294 = fadd contract float %8292, %8293
  %8295 = load float, float addrspace(1)* %103, align 4, !tbaa !6
  %8296 = fadd contract float %8294, %8295
  %8297 = load float, float addrspace(1)* %104, align 4, !tbaa !6
  %8298 = fadd contract float %8296, %8297
  %8299 = load float, float addrspace(1)* %105, align 4, !tbaa !6
  %8300 = load float, float addrspace(1)* %106, align 4, !tbaa !6
  %8301 = fadd contract float %8299, %8300
  %8302 = load float, float addrspace(1)* %107, align 4, !tbaa !6
  %8303 = fadd contract float %8301, %8302
  %8304 = load float, float addrspace(1)* %108, align 4, !tbaa !6
  %8305 = fadd contract float %8303, %8304
  %8306 = fmul contract float %8269, %8305
  %8307 = fadd contract float %8298, %8306
  %8308 = load float, float addrspace(1)* %111, align 4, !tbaa !6
  %8309 = fadd contract float %8308, %8307
  %8310 = load float, float addrspace(1)* %112, align 4, !tbaa !6
  %8311 = fadd contract float %8310, %8309
  %8312 = load float, float addrspace(1)* %113, align 4, !tbaa !6
  %8313 = fadd contract float %8312, %8311
  %8314 = fsub contract float %8268, %8313
  %8315 = fmul contract float %8288, 0x3F56F00680000000
  %8316 = fmul contract float %8314, 0x3F7CAC0820000000
  %8317 = load float, float addrspace(1)* %118, align 4, !tbaa !6
  %8318 = fmul contract float %8317, %8316
  %8319 = fsub contract float %8315, %8318
  %8320 = fpext float %8319 to double
  %8321 = fmul contract double %8320, 1.000000e-03
  %8322 = fptrunc double %8321 to float
  %8323 = fmul contract float %8289, 0x3EED5C3140000000
  %8324 = load float, float addrspace(1)* %119, align 4, !tbaa !6
  %8325 = fmul contract float %8324, %8316
  %8326 = fsub contract float %8323, %8325
  %8327 = fpext float %8326 to double
  %8328 = fmul contract double %8327, 1.000000e-03
  %8329 = fptrunc double %8328 to float
  %8330 = fmul contract float %8291, 0x3EED5C3140000000
  %8331 = load float, float addrspace(1)* %120, align 4, !tbaa !6
  %8332 = fmul contract float %8331, %8316
  %8333 = fsub contract float %8330, %8332
  %8334 = fpext float %8333 to double
  %8335 = fmul contract double %8334, 1.000000e-03
  %8336 = fptrunc double %8335 to float
  %8337 = load float, float addrspace(1)* %137, align 4, !tbaa !6
  %8338 = fsub contract float %8317, %8337
  %8339 = fmul contract float %8338, 0x3D03561180000000
  %8340 = load float, float addrspace(1)* %138, align 4, !tbaa !6
  %8341 = fsub contract float %8324, %8340
  %8342 = fmul contract float %8341, 0x3D03561180000000
  %8343 = load float, float addrspace(1)* %139, align 4, !tbaa !6
  %8344 = fsub contract float %8331, %8343
  %8345 = fmul contract float %8344, 0x3D03561180000000
  %8346 = fsub contract float %6880, %8322
  store float %8346, float addrspace(1)* %6955, align 4, !tbaa !6
  %8347 = fsub contract float %6889, %8329
  store float %8347, float addrspace(1)* %6956, align 4, !tbaa !6
  %8348 = fsub contract float %6897, %8336
  store float %8348, float addrspace(1)* %6957, align 4, !tbaa !6
  %8349 = fmul contract float %8322, 0x3D14079E40000000
  %8350 = fdiv contract float %8349, 0x3D6739EC20000000
  %8351 = fadd contract float %8350, %7522
  %8352 = fdiv contract float %8339, 0x3D6739EC20000000
  %8353 = fsub contract float %8351, %8352
  store float %8353, float addrspace(1)* %7597, align 4, !tbaa !6
  %8354 = fmul contract float %8329, 0x3D14079E40000000
  %8355 = fdiv contract float %8354, 0x3D6739EC20000000
  %8356 = fadd contract float %8355, %7531
  %8357 = fdiv contract float %8342, 0x3D6739EC20000000
  %8358 = fsub contract float %8356, %8357
  store float %8358, float addrspace(1)* %7598, align 4, !tbaa !6
  %8359 = fmul contract float %8336, 0x3D14079E40000000
  %8360 = fdiv contract float %8359, 0x3D6739EC20000000
  %8361 = fadd contract float %8360, %7539
  %8362 = fdiv contract float %8345, 0x3D6739EC20000000
  %8363 = fsub contract float %8361, %8362
  store float %8363, float addrspace(1)* %7599, align 4, !tbaa !6
  %8364 = fdiv contract float %8339, 0x3DB796C3A0000000
  %8365 = fadd contract float %8364, %8164
  store float %8365, float addrspace(1)* %8239, align 4, !tbaa !6
  %8366 = fdiv contract float %8342, 0x3DB796C3A0000000
  %8367 = fadd contract float %8366, %8173
  store float %8367, float addrspace(1)* %8240, align 4, !tbaa !6
  %8368 = fdiv contract float %8345, 0x3DB796C3A0000000
  %8369 = fadd contract float %8368, %8181
  store float %8369, float addrspace(1)* %8241, align 4, !tbaa !6
  br label %8370

8370:                                             ; preds = %8440, %7698
  %8371 = phi i32 [ 0, %7698 ], [ %8441, %8440 ]
  %8372 = zext i32 %8371 to i64
  %8373 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8372
  %8374 = load float, float addrspace(1)* %8373, align 4, !tbaa !6
  %8375 = fcmp uno float %8374, 0.000000e+00
  %8376 = tail call float @llvm.fabs.f32(float %8374) #3
  %8377 = fcmp oeq float %8376, 0x7FF0000000000000
  %8378 = select i1 %8375, i1 true, i1 %8377
  br i1 %8378, label %8379, label %8380

8379:                                             ; preds = %8370
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8373, align 4, !tbaa !6
  br label %8380

8380:                                             ; preds = %8379, %8370
  %8381 = add nuw nsw i32 %8371, 1
  %8382 = zext i32 %8381 to i64
  %8383 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8382
  %8384 = load float, float addrspace(1)* %8383, align 4, !tbaa !6
  %8385 = fcmp uno float %8384, 0.000000e+00
  %8386 = tail call float @llvm.fabs.f32(float %8384) #3
  %8387 = fcmp oeq float %8386, 0x7FF0000000000000
  %8388 = select i1 %8385, i1 true, i1 %8387
  br i1 %8388, label %8389, label %8390

8389:                                             ; preds = %8380
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8383, align 4, !tbaa !6
  br label %8390

8390:                                             ; preds = %8389, %8380
  %8391 = add nuw nsw i32 %8371, 2
  %8392 = zext i32 %8391 to i64
  %8393 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8392
  %8394 = load float, float addrspace(1)* %8393, align 4, !tbaa !6
  %8395 = fcmp uno float %8394, 0.000000e+00
  %8396 = tail call float @llvm.fabs.f32(float %8394) #3
  %8397 = fcmp oeq float %8396, 0x7FF0000000000000
  %8398 = select i1 %8395, i1 true, i1 %8397
  br i1 %8398, label %8399, label %8400

8399:                                             ; preds = %8390
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8393, align 4, !tbaa !6
  br label %8400

8400:                                             ; preds = %8399, %8390
  %8401 = add nuw nsw i32 %8371, 3
  %8402 = zext i32 %8401 to i64
  %8403 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8402
  %8404 = load float, float addrspace(1)* %8403, align 4, !tbaa !6
  %8405 = fcmp uno float %8404, 0.000000e+00
  %8406 = tail call float @llvm.fabs.f32(float %8404) #3
  %8407 = fcmp oeq float %8406, 0x7FF0000000000000
  %8408 = select i1 %8405, i1 true, i1 %8407
  br i1 %8408, label %8409, label %8410

8409:                                             ; preds = %8400
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8403, align 4, !tbaa !6
  br label %8410

8410:                                             ; preds = %8409, %8400
  %8411 = add nuw nsw i32 %8371, 4
  %8412 = zext i32 %8411 to i64
  %8413 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8412
  %8414 = load float, float addrspace(1)* %8413, align 4, !tbaa !6
  %8415 = fcmp uno float %8414, 0.000000e+00
  %8416 = tail call float @llvm.fabs.f32(float %8414) #3
  %8417 = fcmp oeq float %8416, 0x7FF0000000000000
  %8418 = select i1 %8415, i1 true, i1 %8417
  br i1 %8418, label %8419, label %8420

8419:                                             ; preds = %8410
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8413, align 4, !tbaa !6
  br label %8420

8420:                                             ; preds = %8419, %8410
  %8421 = add nuw nsw i32 %8371, 5
  %8422 = zext i32 %8421 to i64
  %8423 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8422
  %8424 = load float, float addrspace(1)* %8423, align 4, !tbaa !6
  %8425 = fcmp uno float %8424, 0.000000e+00
  %8426 = tail call float @llvm.fabs.f32(float %8424) #3
  %8427 = fcmp oeq float %8426, 0x7FF0000000000000
  %8428 = select i1 %8425, i1 true, i1 %8427
  br i1 %8428, label %8429, label %8430

8429:                                             ; preds = %8420
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8423, align 4, !tbaa !6
  br label %8430

8430:                                             ; preds = %8429, %8420
  %8431 = add nuw nsw i32 %8371, 6
  %8432 = zext i32 %8431 to i64
  %8433 = getelementptr inbounds float, float addrspace(1)* %1843, i64 %8432
  %8434 = load float, float addrspace(1)* %8433, align 4, !tbaa !6
  %8435 = fcmp uno float %8434, 0.000000e+00
  %8436 = tail call float @llvm.fabs.f32(float %8434) #3
  %8437 = fcmp oeq float %8436, 0x7FF0000000000000
  %8438 = select i1 %8435, i1 true, i1 %8437
  br i1 %8438, label %8439, label %8440

8439:                                             ; preds = %8430
  store float 0x3F1A36E2E0000000, float addrspace(1)* %8433, align 4, !tbaa !6
  br label %8440

8440:                                             ; preds = %8439, %8430
  %8441 = add nuw nsw i32 %8371, 7
  %8442 = icmp eq i32 %8441, 91
  br i1 %8442, label %8443, label %8370, !llvm.loop !25

8443:                                             ; preds = %8440
  %8444 = add nuw nsw i32 %190, 1
  %8445 = icmp eq i32 %8444, 13
  br i1 %8445, label %8446, label %189, !llvm.loop !26

8446:                                             ; preds = %8443, %8578
  %8447 = phi i32 [ %8621, %8578 ], [ 0, %8443 ]
  %8448 = zext i32 %8447 to i64
  %8449 = getelementptr inbounds float, float addrspace(1)* %166, i64 %8448
  %8450 = load float, float addrspace(1)* %8449, align 4, !tbaa !6
  %8451 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8448
  %8452 = load float, float addrspace(1)* %8451, align 4, !tbaa !6
  %8453 = add nuw nsw i32 %8447, 910
  %8454 = zext i32 %8453 to i64
  %8455 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8454
  %8456 = load float, float addrspace(1)* %8455, align 4, !tbaa !6
  %8457 = fadd contract float %8452, %8456
  %8458 = fmul contract float %8457, 0x3FA8FD8FE0000000
  %8459 = add nuw nsw i32 %8447, 455
  %8460 = zext i32 %8459 to i64
  %8461 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8460
  %8462 = load float, float addrspace(1)* %8461, align 4, !tbaa !6
  %8463 = fmul contract float %8462, 0x3FD4B94BA0000000
  %8464 = fadd contract float %8458, %8463
  %8465 = add nuw nsw i32 %8447, 546
  %8466 = zext i32 %8465 to i64
  %8467 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8466
  %8468 = load float, float addrspace(1)* %8467, align 4, !tbaa !6
  %8469 = add nuw nsw i32 %8447, 637
  %8470 = zext i32 %8469 to i64
  %8471 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8470
  %8472 = load float, float addrspace(1)* %8471, align 4, !tbaa !6
  %8473 = fadd contract float %8468, %8472
  %8474 = fmul contract float %8473, 0x3FD0750760000000
  %8475 = fadd contract float %8464, %8474
  %8476 = add nuw nsw i32 %8447, 728
  %8477 = zext i32 %8476 to i64
  %8478 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8477
  %8479 = load float, float addrspace(1)* %8478, align 4, !tbaa !6
  %8480 = add nuw nsw i32 %8447, 819
  %8481 = zext i32 %8480 to i64
  %8482 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8481
  %8483 = load float, float addrspace(1)* %8482, align 4, !tbaa !6
  %8484 = fadd contract float %8479, %8483
  %8485 = fmul contract float %8484, 0x3FA0750760000000
  %8486 = fadd contract float %8475, %8485
  %8487 = fmul contract float %171, %8486
  %8488 = fadd contract float %8450, %8487
  %8489 = getelementptr inbounds float, float addrspace(1)* %167, i64 %8448
  store float %8488, float addrspace(1)* %8489, align 4, !tbaa !6
  %8490 = or i32 %8447, 1
  %8491 = zext i32 %8490 to i64
  %8492 = getelementptr inbounds float, float addrspace(1)* %166, i64 %8491
  %8493 = load float, float addrspace(1)* %8492, align 4, !tbaa !6
  %8494 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8491
  %8495 = load float, float addrspace(1)* %8494, align 4, !tbaa !6
  %8496 = add nuw nsw i32 %8447, 911
  %8497 = zext i32 %8496 to i64
  %8498 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8497
  %8499 = load float, float addrspace(1)* %8498, align 4, !tbaa !6
  %8500 = fadd contract float %8495, %8499
  %8501 = fmul contract float %8500, 0x3FA8FD8FE0000000
  %8502 = add nuw nsw i32 %8447, 456
  %8503 = zext i32 %8502 to i64
  %8504 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8503
  %8505 = load float, float addrspace(1)* %8504, align 4, !tbaa !6
  %8506 = fmul contract float %8505, 0x3FD4B94BA0000000
  %8507 = fadd contract float %8501, %8506
  %8508 = add nuw nsw i32 %8447, 547
  %8509 = zext i32 %8508 to i64
  %8510 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8509
  %8511 = load float, float addrspace(1)* %8510, align 4, !tbaa !6
  %8512 = add nuw nsw i32 %8447, 638
  %8513 = zext i32 %8512 to i64
  %8514 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8513
  %8515 = load float, float addrspace(1)* %8514, align 4, !tbaa !6
  %8516 = fadd contract float %8511, %8515
  %8517 = fmul contract float %8516, 0x3FD0750760000000
  %8518 = fadd contract float %8507, %8517
  %8519 = add nuw nsw i32 %8447, 729
  %8520 = zext i32 %8519 to i64
  %8521 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8520
  %8522 = load float, float addrspace(1)* %8521, align 4, !tbaa !6
  %8523 = add nuw nsw i32 %8447, 820
  %8524 = zext i32 %8523 to i64
  %8525 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8524
  %8526 = load float, float addrspace(1)* %8525, align 4, !tbaa !6
  %8527 = fadd contract float %8522, %8526
  %8528 = fmul contract float %8527, 0x3FA0750760000000
  %8529 = fadd contract float %8518, %8528
  %8530 = fmul contract float %171, %8529
  %8531 = fadd contract float %8493, %8530
  %8532 = getelementptr inbounds float, float addrspace(1)* %167, i64 %8491
  store float %8531, float addrspace(1)* %8532, align 4, !tbaa !6
  %8533 = or i32 %8447, 2
  %8534 = zext i32 %8533 to i64
  %8535 = getelementptr inbounds float, float addrspace(1)* %166, i64 %8534
  %8536 = load float, float addrspace(1)* %8535, align 4, !tbaa !6
  %8537 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8534
  %8538 = load float, float addrspace(1)* %8537, align 4, !tbaa !6
  %8539 = add nuw nsw i32 %8447, 912
  %8540 = zext i32 %8539 to i64
  %8541 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8540
  %8542 = load float, float addrspace(1)* %8541, align 4, !tbaa !6
  %8543 = fadd contract float %8538, %8542
  %8544 = fmul contract float %8543, 0x3FA8FD8FE0000000
  %8545 = add nuw nsw i32 %8447, 457
  %8546 = zext i32 %8545 to i64
  %8547 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8546
  %8548 = load float, float addrspace(1)* %8547, align 4, !tbaa !6
  %8549 = fmul contract float %8548, 0x3FD4B94BA0000000
  %8550 = fadd contract float %8544, %8549
  %8551 = add nuw nsw i32 %8447, 548
  %8552 = zext i32 %8551 to i64
  %8553 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8552
  %8554 = load float, float addrspace(1)* %8553, align 4, !tbaa !6
  %8555 = add nuw nsw i32 %8447, 639
  %8556 = zext i32 %8555 to i64
  %8557 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8556
  %8558 = load float, float addrspace(1)* %8557, align 4, !tbaa !6
  %8559 = fadd contract float %8554, %8558
  %8560 = fmul contract float %8559, 0x3FD0750760000000
  %8561 = fadd contract float %8550, %8560
  %8562 = add nuw nsw i32 %8447, 730
  %8563 = zext i32 %8562 to i64
  %8564 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8563
  %8565 = load float, float addrspace(1)* %8564, align 4, !tbaa !6
  %8566 = add nuw nsw i32 %8447, 821
  %8567 = zext i32 %8566 to i64
  %8568 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8567
  %8569 = load float, float addrspace(1)* %8568, align 4, !tbaa !6
  %8570 = fadd contract float %8565, %8569
  %8571 = fmul contract float %8570, 0x3FA0750760000000
  %8572 = fadd contract float %8561, %8571
  %8573 = fmul contract float %171, %8572
  %8574 = fadd contract float %8536, %8573
  %8575 = getelementptr inbounds float, float addrspace(1)* %167, i64 %8534
  store float %8574, float addrspace(1)* %8575, align 4, !tbaa !6
  %8576 = or i32 %8447, 3
  %8577 = icmp eq i32 %8576, 91
  br i1 %8577, label %8622, label %8578, !llvm.loop !27

8578:                                             ; preds = %8446
  %8579 = zext i32 %8576 to i64
  %8580 = getelementptr inbounds float, float addrspace(1)* %166, i64 %8579
  %8581 = load float, float addrspace(1)* %8580, align 4, !tbaa !6
  %8582 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8579
  %8583 = load float, float addrspace(1)* %8582, align 4, !tbaa !6
  %8584 = add nuw nsw i32 %8447, 913
  %8585 = zext i32 %8584 to i64
  %8586 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8585
  %8587 = load float, float addrspace(1)* %8586, align 4, !tbaa !6
  %8588 = fadd contract float %8583, %8587
  %8589 = fmul contract float %8588, 0x3FA8FD8FE0000000
  %8590 = add nuw nsw i32 %8447, 458
  %8591 = zext i32 %8590 to i64
  %8592 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8591
  %8593 = load float, float addrspace(1)* %8592, align 4, !tbaa !6
  %8594 = fmul contract float %8593, 0x3FD4B94BA0000000
  %8595 = fadd contract float %8589, %8594
  %8596 = add nuw nsw i32 %8447, 549
  %8597 = zext i32 %8596 to i64
  %8598 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8597
  %8599 = load float, float addrspace(1)* %8598, align 4, !tbaa !6
  %8600 = add nuw nsw i32 %8447, 640
  %8601 = zext i32 %8600 to i64
  %8602 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8601
  %8603 = load float, float addrspace(1)* %8602, align 4, !tbaa !6
  %8604 = fadd contract float %8599, %8603
  %8605 = fmul contract float %8604, 0x3FD0750760000000
  %8606 = fadd contract float %8595, %8605
  %8607 = add nuw nsw i32 %8447, 731
  %8608 = zext i32 %8607 to i64
  %8609 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8608
  %8610 = load float, float addrspace(1)* %8609, align 4, !tbaa !6
  %8611 = add nuw nsw i32 %8447, 822
  %8612 = zext i32 %8611 to i64
  %8613 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8612
  %8614 = load float, float addrspace(1)* %8613, align 4, !tbaa !6
  %8615 = fadd contract float %8610, %8614
  %8616 = fmul contract float %8615, 0x3FA0750760000000
  %8617 = fadd contract float %8606, %8616
  %8618 = fmul contract float %171, %8617
  %8619 = fadd contract float %8581, %8618
  %8620 = getelementptr inbounds float, float addrspace(1)* %167, i64 %8579
  store float %8619, float addrspace(1)* %8620, align 4, !tbaa !6
  %8621 = add nuw nsw i32 %8447, 4
  br label %8446

8622:                                             ; preds = %8446, %8622
  %8623 = phi i32 [ %8777, %8622 ], [ 0, %8446 ]
  %8624 = zext i32 %8623 to i64
  %8625 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8624
  %8626 = load float, float addrspace(1)* %8625, align 4, !tbaa !6
  %8627 = add nuw nsw i32 %8623, 910
  %8628 = zext i32 %8627 to i64
  %8629 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8628
  %8630 = load float, float addrspace(1)* %8629, align 4, !tbaa !6
  %8631 = fadd contract float %8626, %8630
  %8632 = add nuw nsw i32 %8623, 1001
  %8633 = zext i32 %8632 to i64
  %8634 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8633
  %8635 = load float, float addrspace(1)* %8634, align 4, !tbaa !6
  %8636 = fsub contract float %8631, %8635
  %8637 = add nuw nsw i32 %8623, 1092
  %8638 = zext i32 %8637 to i64
  %8639 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8638
  %8640 = load float, float addrspace(1)* %8639, align 4, !tbaa !6
  %8641 = fsub contract float %8636, %8640
  %8642 = fmul contract float %8641, 0xBFA8FD8FE0000000
  %8643 = tail call float @llvm.fabs.f32(float %8642)
  %8644 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8624
  store float %8643, float addrspace(1)* %8644, align 4, !tbaa !6
  %8645 = add nuw nsw i32 %8623, 1
  %8646 = zext i32 %8645 to i64
  %8647 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8646
  %8648 = load float, float addrspace(1)* %8647, align 4, !tbaa !6
  %8649 = add nuw nsw i32 %8623, 911
  %8650 = zext i32 %8649 to i64
  %8651 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8650
  %8652 = load float, float addrspace(1)* %8651, align 4, !tbaa !6
  %8653 = fadd contract float %8648, %8652
  %8654 = add nuw nsw i32 %8623, 1002
  %8655 = zext i32 %8654 to i64
  %8656 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8655
  %8657 = load float, float addrspace(1)* %8656, align 4, !tbaa !6
  %8658 = fsub contract float %8653, %8657
  %8659 = add nuw nsw i32 %8623, 1093
  %8660 = zext i32 %8659 to i64
  %8661 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8660
  %8662 = load float, float addrspace(1)* %8661, align 4, !tbaa !6
  %8663 = fsub contract float %8658, %8662
  %8664 = fmul contract float %8663, 0xBFA8FD8FE0000000
  %8665 = tail call float @llvm.fabs.f32(float %8664)
  %8666 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8646
  store float %8665, float addrspace(1)* %8666, align 4, !tbaa !6
  %8667 = add nuw nsw i32 %8623, 2
  %8668 = zext i32 %8667 to i64
  %8669 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8668
  %8670 = load float, float addrspace(1)* %8669, align 4, !tbaa !6
  %8671 = add nuw nsw i32 %8623, 912
  %8672 = zext i32 %8671 to i64
  %8673 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8672
  %8674 = load float, float addrspace(1)* %8673, align 4, !tbaa !6
  %8675 = fadd contract float %8670, %8674
  %8676 = add nuw nsw i32 %8623, 1003
  %8677 = zext i32 %8676 to i64
  %8678 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8677
  %8679 = load float, float addrspace(1)* %8678, align 4, !tbaa !6
  %8680 = fsub contract float %8675, %8679
  %8681 = add nuw nsw i32 %8623, 1094
  %8682 = zext i32 %8681 to i64
  %8683 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8682
  %8684 = load float, float addrspace(1)* %8683, align 4, !tbaa !6
  %8685 = fsub contract float %8680, %8684
  %8686 = fmul contract float %8685, 0xBFA8FD8FE0000000
  %8687 = tail call float @llvm.fabs.f32(float %8686)
  %8688 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8668
  store float %8687, float addrspace(1)* %8688, align 4, !tbaa !6
  %8689 = add nuw nsw i32 %8623, 3
  %8690 = zext i32 %8689 to i64
  %8691 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8690
  %8692 = load float, float addrspace(1)* %8691, align 4, !tbaa !6
  %8693 = add nuw nsw i32 %8623, 913
  %8694 = zext i32 %8693 to i64
  %8695 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8694
  %8696 = load float, float addrspace(1)* %8695, align 4, !tbaa !6
  %8697 = fadd contract float %8692, %8696
  %8698 = add nuw nsw i32 %8623, 1004
  %8699 = zext i32 %8698 to i64
  %8700 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8699
  %8701 = load float, float addrspace(1)* %8700, align 4, !tbaa !6
  %8702 = fsub contract float %8697, %8701
  %8703 = add nuw nsw i32 %8623, 1095
  %8704 = zext i32 %8703 to i64
  %8705 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8704
  %8706 = load float, float addrspace(1)* %8705, align 4, !tbaa !6
  %8707 = fsub contract float %8702, %8706
  %8708 = fmul contract float %8707, 0xBFA8FD8FE0000000
  %8709 = tail call float @llvm.fabs.f32(float %8708)
  %8710 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8690
  store float %8709, float addrspace(1)* %8710, align 4, !tbaa !6
  %8711 = add nuw nsw i32 %8623, 4
  %8712 = zext i32 %8711 to i64
  %8713 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8712
  %8714 = load float, float addrspace(1)* %8713, align 4, !tbaa !6
  %8715 = add nuw nsw i32 %8623, 914
  %8716 = zext i32 %8715 to i64
  %8717 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8716
  %8718 = load float, float addrspace(1)* %8717, align 4, !tbaa !6
  %8719 = fadd contract float %8714, %8718
  %8720 = add nuw nsw i32 %8623, 1005
  %8721 = zext i32 %8720 to i64
  %8722 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8721
  %8723 = load float, float addrspace(1)* %8722, align 4, !tbaa !6
  %8724 = fsub contract float %8719, %8723
  %8725 = add nuw nsw i32 %8623, 1096
  %8726 = zext i32 %8725 to i64
  %8727 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8726
  %8728 = load float, float addrspace(1)* %8727, align 4, !tbaa !6
  %8729 = fsub contract float %8724, %8728
  %8730 = fmul contract float %8729, 0xBFA8FD8FE0000000
  %8731 = tail call float @llvm.fabs.f32(float %8730)
  %8732 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8712
  store float %8731, float addrspace(1)* %8732, align 4, !tbaa !6
  %8733 = add nuw nsw i32 %8623, 5
  %8734 = zext i32 %8733 to i64
  %8735 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8734
  %8736 = load float, float addrspace(1)* %8735, align 4, !tbaa !6
  %8737 = add nuw nsw i32 %8623, 915
  %8738 = zext i32 %8737 to i64
  %8739 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8738
  %8740 = load float, float addrspace(1)* %8739, align 4, !tbaa !6
  %8741 = fadd contract float %8736, %8740
  %8742 = add nuw nsw i32 %8623, 1006
  %8743 = zext i32 %8742 to i64
  %8744 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8743
  %8745 = load float, float addrspace(1)* %8744, align 4, !tbaa !6
  %8746 = fsub contract float %8741, %8745
  %8747 = add nuw nsw i32 %8623, 1097
  %8748 = zext i32 %8747 to i64
  %8749 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8748
  %8750 = load float, float addrspace(1)* %8749, align 4, !tbaa !6
  %8751 = fsub contract float %8746, %8750
  %8752 = fmul contract float %8751, 0xBFA8FD8FE0000000
  %8753 = tail call float @llvm.fabs.f32(float %8752)
  %8754 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8734
  store float %8753, float addrspace(1)* %8754, align 4, !tbaa !6
  %8755 = add nuw nsw i32 %8623, 6
  %8756 = zext i32 %8755 to i64
  %8757 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8756
  %8758 = load float, float addrspace(1)* %8757, align 4, !tbaa !6
  %8759 = add nuw nsw i32 %8623, 916
  %8760 = zext i32 %8759 to i64
  %8761 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8760
  %8762 = load float, float addrspace(1)* %8761, align 4, !tbaa !6
  %8763 = fadd contract float %8758, %8762
  %8764 = add nuw nsw i32 %8623, 1007
  %8765 = zext i32 %8764 to i64
  %8766 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8765
  %8767 = load float, float addrspace(1)* %8766, align 4, !tbaa !6
  %8768 = fsub contract float %8763, %8767
  %8769 = add nuw nsw i32 %8623, 1098
  %8770 = zext i32 %8769 to i64
  %8771 = getelementptr inbounds float, float addrspace(1)* %35, i64 %8770
  %8772 = load float, float addrspace(1)* %8771, align 4, !tbaa !6
  %8773 = fsub contract float %8768, %8772
  %8774 = fmul contract float %8773, 0xBFA8FD8FE0000000
  %8775 = tail call float @llvm.fabs.f32(float %8774)
  %8776 = getelementptr inbounds float, float addrspace(1)* %32, i64 %8756
  store float %8775, float addrspace(1)* %8776, align 4, !tbaa !6
  %8777 = add nuw nsw i32 %8623, 7
  %8778 = icmp eq i32 %8777, 91
  br i1 %8778, label %8779, label %8622, !llvm.loop !28

8779:                                             ; preds = %8622, %8779
  %8780 = phi i32 [ %8872, %8779 ], [ 0, %8622 ]
  %8781 = phi i32 [ %8871, %8779 ], [ 0, %8622 ]
  %8782 = add nsw i32 %8780, %16
  %8783 = sext i32 %8782 to i64
  %8784 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8783
  %8785 = load float, float addrspace(1)* %8784, align 4, !tbaa !6
  %8786 = fcmp contract ogt float %8785, 0.000000e+00
  %8787 = add nuw nsw i32 %8780, 1
  %8788 = add nsw i32 %8787, %16
  %8789 = sext i32 %8788 to i64
  %8790 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8789
  %8791 = load float, float addrspace(1)* %8790, align 4, !tbaa !6
  %8792 = fcmp contract ogt float %8791, 0.000000e+00
  %8793 = add nuw nsw i32 %8780, 2
  %8794 = add nsw i32 %8793, %16
  %8795 = sext i32 %8794 to i64
  %8796 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8795
  %8797 = load float, float addrspace(1)* %8796, align 4, !tbaa !6
  %8798 = fcmp contract ogt float %8797, 0.000000e+00
  %8799 = add nuw nsw i32 %8780, 3
  %8800 = add nsw i32 %8799, %16
  %8801 = sext i32 %8800 to i64
  %8802 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8801
  %8803 = load float, float addrspace(1)* %8802, align 4, !tbaa !6
  %8804 = fcmp contract ogt float %8803, 0.000000e+00
  %8805 = add nuw nsw i32 %8780, 4
  %8806 = add nsw i32 %8805, %16
  %8807 = sext i32 %8806 to i64
  %8808 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8807
  %8809 = load float, float addrspace(1)* %8808, align 4, !tbaa !6
  %8810 = fcmp contract ogt float %8809, 0.000000e+00
  %8811 = add nuw nsw i32 %8780, 5
  %8812 = add nsw i32 %8811, %16
  %8813 = sext i32 %8812 to i64
  %8814 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8813
  %8815 = load float, float addrspace(1)* %8814, align 4, !tbaa !6
  %8816 = fcmp contract ogt float %8815, 0.000000e+00
  %8817 = add nuw nsw i32 %8780, 6
  %8818 = add nsw i32 %8817, %16
  %8819 = sext i32 %8818 to i64
  %8820 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8819
  %8821 = load float, float addrspace(1)* %8820, align 4, !tbaa !6
  %8822 = fcmp contract ogt float %8821, 0.000000e+00
  %8823 = add nuw nsw i32 %8780, 7
  %8824 = add nsw i32 %8823, %16
  %8825 = sext i32 %8824 to i64
  %8826 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8825
  %8827 = load float, float addrspace(1)* %8826, align 4, !tbaa !6
  %8828 = fcmp contract ogt float %8827, 0.000000e+00
  %8829 = add nuw nsw i32 %8780, 8
  %8830 = add nsw i32 %8829, %16
  %8831 = sext i32 %8830 to i64
  %8832 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8831
  %8833 = load float, float addrspace(1)* %8832, align 4, !tbaa !6
  %8834 = fcmp contract ogt float %8833, 0.000000e+00
  %8835 = add nuw nsw i32 %8780, 9
  %8836 = add nsw i32 %8835, %16
  %8837 = sext i32 %8836 to i64
  %8838 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8837
  %8839 = load float, float addrspace(1)* %8838, align 4, !tbaa !6
  %8840 = fcmp contract ogt float %8839, 0.000000e+00
  %8841 = add nuw nsw i32 %8780, 10
  %8842 = add nsw i32 %8841, %16
  %8843 = sext i32 %8842 to i64
  %8844 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8843
  %8845 = load float, float addrspace(1)* %8844, align 4, !tbaa !6
  %8846 = fcmp contract ogt float %8845, 0.000000e+00
  %8847 = add nuw nsw i32 %8780, 11
  %8848 = add nsw i32 %8847, %16
  %8849 = sext i32 %8848 to i64
  %8850 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8849
  %8851 = load float, float addrspace(1)* %8850, align 4, !tbaa !6
  %8852 = fcmp contract ogt float %8851, 0.000000e+00
  %8853 = add nuw nsw i32 %8780, 12
  %8854 = add nsw i32 %8853, %16
  %8855 = sext i32 %8854 to i64
  %8856 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8855
  %8857 = load float, float addrspace(1)* %8856, align 4, !tbaa !6
  %8858 = fcmp contract ogt float %8857, 0.000000e+00
  %8859 = select i1 %8858, i1 true, i1 %8852
  %8860 = select i1 %8859, i1 true, i1 %8846
  %8861 = select i1 %8860, i1 true, i1 %8840
  %8862 = select i1 %8861, i1 true, i1 %8834
  %8863 = select i1 %8862, i1 true, i1 %8828
  %8864 = select i1 %8863, i1 true, i1 %8822
  %8865 = select i1 %8864, i1 true, i1 %8816
  %8866 = select i1 %8865, i1 true, i1 %8810
  %8867 = select i1 %8866, i1 true, i1 %8804
  %8868 = select i1 %8867, i1 true, i1 %8798
  %8869 = select i1 %8868, i1 true, i1 %8792
  %8870 = select i1 %8869, i1 true, i1 %8786
  %8871 = select i1 %8870, i32 1, i32 %8781
  %8872 = add nuw nsw i32 %8780, 13
  %8873 = icmp eq i32 %8872, 91
  br i1 %8873, label %8874, label %8779, !llvm.loop !29

8874:                                             ; preds = %8779
  %8875 = icmp eq i32 %8871, 1
  br i1 %8875, label %8876, label %9221

8876:                                             ; preds = %8874, %8876
  %8877 = phi i32 [ %9054, %8876 ], [ 0, %8874 ]
  %8878 = phi float [ %9053, %8876 ], [ 4.000000e+00, %8874 ]
  %8879 = zext i32 %8877 to i64
  %8880 = add nsw i64 %8879, %160
  %8881 = getelementptr inbounds float, float addrspace(1)* %3, i64 %8880
  %8882 = load float, float addrspace(1)* %8881, align 4, !tbaa !6
  %8883 = fcmp contract oeq float %8882, 0.000000e+00
  %8884 = tail call float @llvm.fabs.f32(float %8882)
  %8885 = select i1 %8883, float %18, float %8884
  %8886 = add nsw i32 %8877, %16
  %8887 = sext i32 %8886 to i64
  %8888 = getelementptr inbounds float, float addrspace(1)* %8, i64 %8887
  store float %8885, float addrspace(1)* %8888, align 4, !tbaa !6
  %8889 = fmul contract float %18, %8885
  %8890 = getelementptr inbounds float, float addrspace(1)* %6, i64 %8887
  %8891 = load float, float addrspace(1)* %8890, align 4, !tbaa !6
  %8892 = fdiv contract float %8889, %8891
  %8893 = tail call float @llvm.fabs.f32(float %8892)
  %8894 = tail call float @llvm.amdgcn.frexp.mant.f32(float %8893)
  %8895 = fcmp olt float %8894, 0x3FE5555560000000
  %8896 = zext i1 %8895 to i32
  %8897 = tail call float @llvm.amdgcn.ldexp.f32(float %8894, i32 %8896)
  %8898 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %8893)
  %8899 = sub nsw i32 %8898, %8896
  %8900 = fadd float %8897, -1.000000e+00
  %8901 = fadd float %8897, 1.000000e+00
  %8902 = fadd float %8901, -1.000000e+00
  %8903 = fsub float %8897, %8902
  %8904 = tail call float @llvm.amdgcn.rcp.f32(float %8901)
  %8905 = fmul float %8900, %8904
  %8906 = fmul float %8901, %8905
  %8907 = fneg float %8906
  %8908 = tail call float @llvm.fma.f32(float %8905, float %8901, float %8907)
  %8909 = tail call float @llvm.fma.f32(float %8905, float %8903, float %8908)
  %8910 = fadd float %8906, %8909
  %8911 = fsub float %8910, %8906
  %8912 = fsub float %8909, %8911
  %8913 = fsub float %8900, %8910
  %8914 = fsub float %8900, %8913
  %8915 = fsub float %8914, %8910
  %8916 = fsub float %8915, %8912
  %8917 = fadd float %8913, %8916
  %8918 = fmul float %8904, %8917
  %8919 = fadd float %8905, %8918
  %8920 = fsub float %8919, %8905
  %8921 = fsub float %8918, %8920
  %8922 = fmul float %8919, %8919
  %8923 = fneg float %8922
  %8924 = tail call float @llvm.fma.f32(float %8919, float %8919, float %8923)
  %8925 = fmul float %8921, 2.000000e+00
  %8926 = tail call float @llvm.fma.f32(float %8919, float %8925, float %8924)
  %8927 = fadd float %8922, %8926
  %8928 = fsub float %8927, %8922
  %8929 = fsub float %8926, %8928
  %8930 = tail call float @llvm.fmuladd.f32(float %8927, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %8931 = tail call float @llvm.fmuladd.f32(float %8927, float %8930, float 0x3FD999BDE0000000)
  %8932 = sitofp i32 %8899 to float
  %8933 = fmul float %8932, 0x3FE62E4300000000
  %8934 = fneg float %8933
  %8935 = tail call float @llvm.fma.f32(float %8932, float 0x3FE62E4300000000, float %8934)
  %8936 = tail call float @llvm.fma.f32(float %8932, float 0xBE205C6100000000, float %8935)
  %8937 = fadd float %8933, %8936
  %8938 = fsub float %8937, %8933
  %8939 = fsub float %8936, %8938
  %8940 = tail call float @llvm.amdgcn.ldexp.f32(float %8919, i32 1)
  %8941 = fmul float %8919, %8927
  %8942 = fneg float %8941
  %8943 = tail call float @llvm.fma.f32(float %8927, float %8919, float %8942)
  %8944 = tail call float @llvm.fma.f32(float %8927, float %8921, float %8943)
  %8945 = tail call float @llvm.fma.f32(float %8929, float %8919, float %8944)
  %8946 = fadd float %8941, %8945
  %8947 = fsub float %8946, %8941
  %8948 = fsub float %8945, %8947
  %8949 = fmul float %8927, %8931
  %8950 = fneg float %8949
  %8951 = tail call float @llvm.fma.f32(float %8927, float %8931, float %8950)
  %8952 = tail call float @llvm.fma.f32(float %8929, float %8931, float %8951)
  %8953 = fadd float %8949, %8952
  %8954 = fsub float %8953, %8949
  %8955 = fsub float %8952, %8954
  %8956 = fadd float %8953, 0x3FE5555540000000
  %8957 = fadd float %8956, 0xBFE5555540000000
  %8958 = fsub float %8953, %8957
  %8959 = fadd float %8955, 0x3E2E720200000000
  %8960 = fadd float %8959, %8958
  %8961 = fadd float %8956, %8960
  %8962 = fsub float %8961, %8956
  %8963 = fsub float %8960, %8962
  %8964 = fmul float %8946, %8961
  %8965 = fneg float %8964
  %8966 = tail call float @llvm.fma.f32(float %8946, float %8961, float %8965)
  %8967 = tail call float @llvm.fma.f32(float %8946, float %8963, float %8966)
  %8968 = tail call float @llvm.fma.f32(float %8948, float %8961, float %8967)
  %8969 = tail call float @llvm.amdgcn.ldexp.f32(float %8921, i32 1)
  %8970 = fadd float %8964, %8968
  %8971 = fsub float %8970, %8964
  %8972 = fsub float %8968, %8971
  %8973 = fadd float %8940, %8970
  %8974 = fsub float %8973, %8940
  %8975 = fsub float %8970, %8974
  %8976 = fadd float %8969, %8972
  %8977 = fadd float %8976, %8975
  %8978 = fadd float %8973, %8977
  %8979 = fsub float %8978, %8973
  %8980 = fsub float %8977, %8979
  %8981 = fadd float %8937, %8978
  %8982 = fsub float %8981, %8937
  %8983 = fsub float %8981, %8982
  %8984 = fsub float %8937, %8983
  %8985 = fsub float %8978, %8982
  %8986 = fadd float %8985, %8984
  %8987 = fadd float %8939, %8980
  %8988 = fsub float %8987, %8939
  %8989 = fsub float %8987, %8988
  %8990 = fsub float %8939, %8989
  %8991 = fsub float %8980, %8988
  %8992 = fadd float %8991, %8990
  %8993 = fadd float %8987, %8986
  %8994 = fadd float %8981, %8993
  %8995 = fsub float %8994, %8981
  %8996 = fsub float %8993, %8995
  %8997 = fadd float %8992, %8996
  %8998 = fadd float %8994, %8997
  %8999 = fsub float %8998, %8994
  %9000 = fsub float %8997, %8999
  %9001 = fmul float %8998, 0x3FC24924A0000000
  %9002 = fneg float %9001
  %9003 = tail call float @llvm.fma.f32(float %8998, float 0x3FC24924A0000000, float %9002)
  %9004 = tail call float @llvm.fma.f32(float %9000, float 0x3FC24924A0000000, float %9003)
  %9005 = fadd float %9001, %9004
  %9006 = fsub float %9005, %9001
  %9007 = fsub float %9004, %9006
  %9008 = tail call float @llvm.fabs.f32(float %9001) #3
  %9009 = fcmp oeq float %9008, 0x7FF0000000000000
  %9010 = select i1 %9009, float %9001, float %9005
  %9011 = tail call float @llvm.fabs.f32(float %9010) #3
  %9012 = fcmp oeq float %9011, 0x7FF0000000000000
  %9013 = select i1 %9012, float 0.000000e+00, float %9007
  %9014 = fcmp oeq float %9010, 0x40562E4300000000
  %9015 = select i1 %9014, float 0x3EE0000000000000, float 0.000000e+00
  %9016 = fsub float %9010, %9015
  %9017 = fadd float %9015, %9013
  %9018 = fmul float %9016, 0x3FF7154760000000
  %9019 = tail call float @llvm.rint.f32(float %9018)
  %9020 = fcmp ogt float %9016, 0x40562E4300000000
  %9021 = fcmp olt float %9016, 0xC059D1DA00000000
  %9022 = fneg float %9018
  %9023 = tail call float @llvm.fma.f32(float %9016, float 0x3FF7154760000000, float %9022)
  %9024 = tail call float @llvm.fma.f32(float %9016, float 0x3E54AE0BE0000000, float %9023)
  %9025 = fsub float %9018, %9019
  %9026 = fadd float %9024, %9025
  %9027 = tail call float @llvm.exp2.f32(float %9026)
  %9028 = fptosi float %9019 to i32
  %9029 = tail call float @llvm.amdgcn.ldexp.f32(float %9027, i32 %9028)
  %9030 = select i1 %9021, float 0.000000e+00, float %9029
  %9031 = select i1 %9020, float 0x7FF0000000000000, float %9030
  %9032 = tail call float @llvm.fma.f32(float %9031, float %9017, float %9031)
  %9033 = tail call float @llvm.fabs.f32(float %9031) #3
  %9034 = fcmp oeq float %9033, 0x7FF0000000000000
  %9035 = select i1 %9034, float %9031, float %9032
  %9036 = tail call float @llvm.fabs.f32(float %9035)
  %9037 = fcmp uge float %8892, 0.000000e+00
  %9038 = select i1 %9037, float %9036, float 0x7FF8000000000000
  %9039 = fcmp oeq float %8893, 0x7FF0000000000000
  %9040 = fcmp oeq float %8892, 0.000000e+00
  %9041 = or i1 %9040, %9039
  %9042 = select i1 %9040, float 0.000000e+00, float 0x7FF0000000000000
  %9043 = select i1 %9041, float %9042, float %9038
  %9044 = fcmp uno float %8892, 0.000000e+00
  %9045 = select i1 %9044, float 0x7FF8000000000000, float %9043
  %9046 = fcmp oeq float %8892, 1.000000e+00
  %9047 = select i1 %9046, float 1.000000e+00, float %9045
  %9048 = fpext float %9047 to double
  %9049 = fmul contract double %9048, 8.000000e-01
  %9050 = fptrunc double %9049 to float
  %9051 = getelementptr inbounds float, float addrspace(1)* %7, i64 %8887
  store float %9050, float addrspace(1)* %9051, align 4, !tbaa !6
  %9052 = fcmp contract ogt float %8878, %9050
  %9053 = select i1 %9052, float %9050, float %8878
  %9054 = add nuw nsw i32 %8877, 1
  %9055 = icmp eq i32 %9054, 91
  br i1 %9055, label %9056, label %8876, !llvm.loop !30

9056:                                             ; preds = %8876
  %9057 = fpext float %9053 to double
  %9058 = fcmp contract olt double %9057, 1.250000e-01
  %9059 = select contract i1 %9058, double 1.250000e-01, double %9057
  %9060 = fcmp contract olt double %9059, 4.000000e+00
  %9061 = select contract i1 %9060, double %9059, double 4.000000e+00
  br label %9062

9062:                                             ; preds = %9062, %9056
  %9063 = phi i32 [ 0, %9056 ], [ %9194, %9062 ]
  %9064 = phi i32 [ 0, %9056 ], [ %9193, %9062 ]
  %9065 = add nsw i32 %9063, %16
  %9066 = sext i32 %9065 to i64
  %9067 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9066
  %9068 = load float, float addrspace(1)* %9067, align 4, !tbaa !6
  %9069 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9066
  %9070 = load float, float addrspace(1)* %9069, align 4, !tbaa !6
  %9071 = fmul contract float %18, %9070
  %9072 = fcmp contract ogt float %9068, %9071
  %9073 = add nuw nsw i32 %9063, 1
  %9074 = add nsw i32 %9073, %16
  %9075 = sext i32 %9074 to i64
  %9076 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9075
  %9077 = load float, float addrspace(1)* %9076, align 4, !tbaa !6
  %9078 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9075
  %9079 = load float, float addrspace(1)* %9078, align 4, !tbaa !6
  %9080 = fmul contract float %18, %9079
  %9081 = fcmp contract ogt float %9077, %9080
  %9082 = add nuw nsw i32 %9063, 2
  %9083 = add nsw i32 %9082, %16
  %9084 = sext i32 %9083 to i64
  %9085 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9084
  %9086 = load float, float addrspace(1)* %9085, align 4, !tbaa !6
  %9087 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9084
  %9088 = load float, float addrspace(1)* %9087, align 4, !tbaa !6
  %9089 = fmul contract float %18, %9088
  %9090 = fcmp contract ogt float %9086, %9089
  %9091 = add nuw nsw i32 %9063, 3
  %9092 = add nsw i32 %9091, %16
  %9093 = sext i32 %9092 to i64
  %9094 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9093
  %9095 = load float, float addrspace(1)* %9094, align 4, !tbaa !6
  %9096 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9093
  %9097 = load float, float addrspace(1)* %9096, align 4, !tbaa !6
  %9098 = fmul contract float %18, %9097
  %9099 = fcmp contract ogt float %9095, %9098
  %9100 = add nuw nsw i32 %9063, 4
  %9101 = add nsw i32 %9100, %16
  %9102 = sext i32 %9101 to i64
  %9103 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9102
  %9104 = load float, float addrspace(1)* %9103, align 4, !tbaa !6
  %9105 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9102
  %9106 = load float, float addrspace(1)* %9105, align 4, !tbaa !6
  %9107 = fmul contract float %18, %9106
  %9108 = fcmp contract ogt float %9104, %9107
  %9109 = add nuw nsw i32 %9063, 5
  %9110 = add nsw i32 %9109, %16
  %9111 = sext i32 %9110 to i64
  %9112 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9111
  %9113 = load float, float addrspace(1)* %9112, align 4, !tbaa !6
  %9114 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9111
  %9115 = load float, float addrspace(1)* %9114, align 4, !tbaa !6
  %9116 = fmul contract float %18, %9115
  %9117 = fcmp contract ogt float %9113, %9116
  %9118 = add nuw nsw i32 %9063, 6
  %9119 = add nsw i32 %9118, %16
  %9120 = sext i32 %9119 to i64
  %9121 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9120
  %9122 = load float, float addrspace(1)* %9121, align 4, !tbaa !6
  %9123 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9120
  %9124 = load float, float addrspace(1)* %9123, align 4, !tbaa !6
  %9125 = fmul contract float %18, %9124
  %9126 = fcmp contract ogt float %9122, %9125
  %9127 = add nuw nsw i32 %9063, 7
  %9128 = add nsw i32 %9127, %16
  %9129 = sext i32 %9128 to i64
  %9130 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9129
  %9131 = load float, float addrspace(1)* %9130, align 4, !tbaa !6
  %9132 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9129
  %9133 = load float, float addrspace(1)* %9132, align 4, !tbaa !6
  %9134 = fmul contract float %18, %9133
  %9135 = fcmp contract ogt float %9131, %9134
  %9136 = add nuw nsw i32 %9063, 8
  %9137 = add nsw i32 %9136, %16
  %9138 = sext i32 %9137 to i64
  %9139 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9138
  %9140 = load float, float addrspace(1)* %9139, align 4, !tbaa !6
  %9141 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9138
  %9142 = load float, float addrspace(1)* %9141, align 4, !tbaa !6
  %9143 = fmul contract float %18, %9142
  %9144 = fcmp contract ogt float %9140, %9143
  %9145 = add nuw nsw i32 %9063, 9
  %9146 = add nsw i32 %9145, %16
  %9147 = sext i32 %9146 to i64
  %9148 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9147
  %9149 = load float, float addrspace(1)* %9148, align 4, !tbaa !6
  %9150 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9147
  %9151 = load float, float addrspace(1)* %9150, align 4, !tbaa !6
  %9152 = fmul contract float %18, %9151
  %9153 = fcmp contract ogt float %9149, %9152
  %9154 = add nuw nsw i32 %9063, 10
  %9155 = add nsw i32 %9154, %16
  %9156 = sext i32 %9155 to i64
  %9157 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9156
  %9158 = load float, float addrspace(1)* %9157, align 4, !tbaa !6
  %9159 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9156
  %9160 = load float, float addrspace(1)* %9159, align 4, !tbaa !6
  %9161 = fmul contract float %18, %9160
  %9162 = fcmp contract ogt float %9158, %9161
  %9163 = add nuw nsw i32 %9063, 11
  %9164 = add nsw i32 %9163, %16
  %9165 = sext i32 %9164 to i64
  %9166 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9165
  %9167 = load float, float addrspace(1)* %9166, align 4, !tbaa !6
  %9168 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9165
  %9169 = load float, float addrspace(1)* %9168, align 4, !tbaa !6
  %9170 = fmul contract float %18, %9169
  %9171 = fcmp contract ogt float %9167, %9170
  %9172 = add nuw nsw i32 %9063, 12
  %9173 = add nsw i32 %9172, %16
  %9174 = sext i32 %9173 to i64
  %9175 = getelementptr inbounds float, float addrspace(1)* %6, i64 %9174
  %9176 = load float, float addrspace(1)* %9175, align 4, !tbaa !6
  %9177 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9174
  %9178 = load float, float addrspace(1)* %9177, align 4, !tbaa !6
  %9179 = fmul contract float %18, %9178
  %9180 = fcmp contract ogt float %9176, %9179
  %9181 = select i1 %9180, i1 true, i1 %9171
  %9182 = select i1 %9181, i1 true, i1 %9162
  %9183 = select i1 %9182, i1 true, i1 %9153
  %9184 = select i1 %9183, i1 true, i1 %9144
  %9185 = select i1 %9184, i1 true, i1 %9135
  %9186 = select i1 %9185, i1 true, i1 %9126
  %9187 = select i1 %9186, i1 true, i1 %9117
  %9188 = select i1 %9187, i1 true, i1 %9108
  %9189 = select i1 %9188, i1 true, i1 %9099
  %9190 = select i1 %9189, i1 true, i1 %9090
  %9191 = select i1 %9190, i1 true, i1 %9081
  %9192 = select i1 %9191, i1 true, i1 %9072
  %9193 = select i1 %9192, i32 1, i32 %9064
  %9194 = add nuw nsw i32 %9063, 13
  %9195 = icmp eq i32 %9194, 91
  br i1 %9195, label %9196, label %9062, !llvm.loop !31

9196:                                             ; preds = %9062
  %9197 = icmp eq i32 %9193, 0
  br i1 %9197, label %9221, label %9198

9198:                                             ; preds = %9196
  %9199 = fptrunc double %9061 to float
  %9200 = fmul contract float %171, %9199
  %9201 = fpext float %9200 to double
  %9202 = fcmp contract ult double %9201, 9.000000e-01
  %9203 = select i1 %9202, float %9200, float 0x3FECCCCCC0000000
  %9204 = load float, float addrspace(1)* %165, align 4, !tbaa !6
  %9205 = fadd contract float %9203, %9204
  %9206 = fcmp contract ogt float %9205, %17
  br i1 %9206, label %9207, label %9209

9207:                                             ; preds = %9198
  %9208 = fsub contract float %17, %9204
  br label %9217

9209:                                             ; preds = %9198
  %9210 = fpext float %9205 to double
  %9211 = fpext float %9203 to double
  %9212 = fmul contract double %9211, 5.000000e-01
  %9213 = fadd contract double %9212, %9210
  %9214 = fcmp contract ogt double %9213, %154
  br i1 %9214, label %9215, label %9217

9215:                                             ; preds = %9209
  %9216 = fptrunc double %9212 to float
  br label %9217

9217:                                             ; preds = %9207, %9215, %9209
  %9218 = phi float [ %9208, %9207 ], [ %9216, %9215 ], [ %9203, %9209 ]
  %9219 = add nuw nsw i32 %170, 1
  %9220 = icmp eq i32 %9219, 12
  br i1 %9220, label %9221, label %168, !llvm.loop !32

9221:                                             ; preds = %8874, %9196, %9217
  %9222 = phi float [ %171, %8874 ], [ %171, %9196 ], [ %9218, %9217 ]
  %9223 = phi i32 [ %170, %8874 ], [ %170, %9196 ], [ 12, %9217 ]
  %9224 = load float, float addrspace(1)* %165, align 4, !tbaa !6
  %9225 = fadd contract float %9222, %9224
  store float %9225, float addrspace(1)* %165, align 4, !tbaa !6
  %9226 = icmp ugt i32 %9223, 11
  %9227 = add nuw i32 %156, 1
  %9228 = icmp eq i32 %156, %1
  %9229 = select i1 %9226, i1 true, i1 %9228
  br i1 %9229, label %9230, label %155, !llvm.loop !33

9230:                                             ; preds = %9221, %11
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fma.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.rint.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.ldexp.f32(float, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.log2.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i1 @llvm.amdgcn.class.f32(float, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.frexp.mant.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.rcp.f32(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.copysign.f32(float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rsq.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3, !4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 1be90618e508074abc746ab4963d7ad92710d6c5)"}
!4 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 7e3972366e8c0d41c9f743cba00ca7192508f008)"}
!5 = !{i32 0, i32 1024}
!6 = !{!7, !7, i64 0}
!7 = !{!"float", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = distinct !{!16, !12}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !12}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !12}
!27 = distinct !{!27, !12}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !12}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !12}
!33 = distinct !{!33, !12}
